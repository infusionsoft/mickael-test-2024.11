/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.768375
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Sdk.Core.Client.OpenAPIDateConverter;

namespace Keap.Sdk.Core.Model
{
    /// <summary>
    /// AffiliateCommission
    /// </summary>
    [DataContract(Name = "AffiliateCommission")]
    public partial class AffiliateCommission : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AffiliateCommission" /> class.
        /// </summary>
        /// <param name="affOwedId">affOwedId.</param>
        /// <param name="amountEarned">amountEarned.</param>
        /// <param name="contactFirstName">contactFirstName.</param>
        /// <param name="contactId">contactId.</param>
        /// <param name="contactLastName">contactLastName.</param>
        /// <param name="dateEarned">dateEarned.</param>
        /// <param name="description">description.</param>
        /// <param name="invoiceId">invoiceId.</param>
        /// <param name="productName">productName.</param>
        /// <param name="salesAffiliateId">salesAffiliateId.</param>
        /// <param name="soldByFirstName">soldByFirstName.</param>
        /// <param name="soldByLastName">soldByLastName.</param>
        public AffiliateCommission(long affOwedId = default(long), float amountEarned = default(float), string contactFirstName = default(string), long contactId = default(long), string contactLastName = default(string), DateTime dateEarned = default(DateTime), string description = default(string), long invoiceId = default(long), string productName = default(string), long salesAffiliateId = default(long), string soldByFirstName = default(string), string soldByLastName = default(string))
        {
            this.AffOwedId = affOwedId;
            this.AmountEarned = amountEarned;
            this.ContactFirstName = contactFirstName;
            this.ContactId = contactId;
            this.ContactLastName = contactLastName;
            this.DateEarned = dateEarned;
            this.Description = description;
            this.InvoiceId = invoiceId;
            this.ProductName = productName;
            this.SalesAffiliateId = salesAffiliateId;
            this.SoldByFirstName = soldByFirstName;
            this.SoldByLastName = soldByLastName;
        }

        /// <summary>
        /// Gets or Sets AffOwedId
        /// </summary>
        [DataMember(Name = "aff_owed_id", EmitDefaultValue = false)]
        public long AffOwedId { get; set; }

        /// <summary>
        /// Gets or Sets AmountEarned
        /// </summary>
        [DataMember(Name = "amount_earned", EmitDefaultValue = false)]
        public float AmountEarned { get; set; }

        /// <summary>
        /// Gets or Sets ContactFirstName
        /// </summary>
        [DataMember(Name = "contact_first_name", EmitDefaultValue = false)]
        public string ContactFirstName { get; set; }

        /// <summary>
        /// Gets or Sets ContactId
        /// </summary>
        [DataMember(Name = "contact_id", EmitDefaultValue = false)]
        public long ContactId { get; set; }

        /// <summary>
        /// Gets or Sets ContactLastName
        /// </summary>
        [DataMember(Name = "contact_last_name", EmitDefaultValue = false)]
        public string ContactLastName { get; set; }

        /// <summary>
        /// Gets or Sets DateEarned
        /// </summary>
        [DataMember(Name = "date_earned", EmitDefaultValue = false)]
        public DateTime DateEarned { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceId
        /// </summary>
        [DataMember(Name = "invoice_id", EmitDefaultValue = false)]
        public long InvoiceId { get; set; }

        /// <summary>
        /// Gets or Sets ProductName
        /// </summary>
        [DataMember(Name = "product_name", EmitDefaultValue = false)]
        public string ProductName { get; set; }

        /// <summary>
        /// Gets or Sets SalesAffiliateId
        /// </summary>
        [DataMember(Name = "sales_affiliate_id", EmitDefaultValue = false)]
        public long SalesAffiliateId { get; set; }

        /// <summary>
        /// Gets or Sets SoldByFirstName
        /// </summary>
        [DataMember(Name = "sold_by_first_name", EmitDefaultValue = false)]
        public string SoldByFirstName { get; set; }

        /// <summary>
        /// Gets or Sets SoldByLastName
        /// </summary>
        [DataMember(Name = "sold_by_last_name", EmitDefaultValue = false)]
        public string SoldByLastName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AffiliateCommission {\n");
            sb.Append("  AffOwedId: ").Append(AffOwedId).Append("\n");
            sb.Append("  AmountEarned: ").Append(AmountEarned).Append("\n");
            sb.Append("  ContactFirstName: ").Append(ContactFirstName).Append("\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  ContactLastName: ").Append(ContactLastName).Append("\n");
            sb.Append("  DateEarned: ").Append(DateEarned).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  InvoiceId: ").Append(InvoiceId).Append("\n");
            sb.Append("  ProductName: ").Append(ProductName).Append("\n");
            sb.Append("  SalesAffiliateId: ").Append(SalesAffiliateId).Append("\n");
            sb.Append("  SoldByFirstName: ").Append(SoldByFirstName).Append("\n");
            sb.Append("  SoldByLastName: ").Append(SoldByLastName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
