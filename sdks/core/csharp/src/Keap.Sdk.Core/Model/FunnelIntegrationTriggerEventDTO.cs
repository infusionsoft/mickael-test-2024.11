/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.772488
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Sdk.Core.Client.OpenAPIDateConverter;

namespace Keap.Sdk.Core.Model
{
    /// <summary>
    /// FunnelIntegrationTriggerEventDTO
    /// </summary>
    [DataContract(Name = "FunnelIntegrationTriggerEventDTO")]
    public partial class FunnelIntegrationTriggerEventDTO : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FunnelIntegrationTriggerEventDTO" /> class.
        /// </summary>
        /// <param name="contactId">contactId.</param>
        /// <param name="oracleId">oracleId.</param>
        /// <param name="schemaData">schemaData.</param>
        public FunnelIntegrationTriggerEventDTO(long contactId = default(long), string oracleId = default(string), string schemaData = default(string))
        {
            this.ContactId = contactId;
            this.OracleId = oracleId;
            this.SchemaData = schemaData;
        }

        /// <summary>
        /// Gets or Sets ContactId
        /// </summary>
        [DataMember(Name = "contact_id", EmitDefaultValue = false)]
        public long ContactId { get; set; }

        /// <summary>
        /// Gets or Sets OracleId
        /// </summary>
        [DataMember(Name = "oracle_id", EmitDefaultValue = false)]
        public string OracleId { get; set; }

        /// <summary>
        /// Gets or Sets SchemaData
        /// </summary>
        [DataMember(Name = "schema_data", EmitDefaultValue = false)]
        public string SchemaData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FunnelIntegrationTriggerEventDTO {\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  OracleId: ").Append(OracleId).Append("\n");
            sb.Append("  SchemaData: ").Append(SchemaData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
