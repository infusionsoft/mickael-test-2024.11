/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.767807-hf-202501161156
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Sdk.Core.Client.OpenAPIDateConverter;

namespace Keap.Sdk.Core.Model
{
    /// <summary>
    /// RestV2Order
    /// </summary>
    [DataContract(Name = "RestV2Order")]
    public partial class RestV2Order : IValidatableObject
    {
        /// <summary>
        /// Defines SourceType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum SourceTypeEnum
        {
            /// <summary>
            /// Enum INVOICE for value: INVOICE
            /// </summary>
            [EnumMember(Value = "INVOICE")]
            INVOICE = 1,

            /// <summary>
            /// Enum API for value: API
            /// </summary>
            [EnumMember(Value = "API")]
            API = 2,

            /// <summary>
            /// Enum CHECKOUTFORM for value: CHECKOUT_FORM
            /// </summary>
            [EnumMember(Value = "CHECKOUT_FORM")]
            CHECKOUTFORM = 3,

            /// <summary>
            /// Enum MANUALPAYMENT for value: MANUAL_PAYMENT
            /// </summary>
            [EnumMember(Value = "MANUAL_PAYMENT")]
            MANUALPAYMENT = 4,

            /// <summary>
            /// Enum UNKNOWN for value: UNKNOWN
            /// </summary>
            [EnumMember(Value = "UNKNOWN")]
            UNKNOWN = 5,

            /// <summary>
            /// Enum QBOSYNC for value: QBO_SYNC
            /// </summary>
            [EnumMember(Value = "QBO_SYNC")]
            QBOSYNC = 6
        }

        /// <summary>
        /// Gets or Sets SourceType
        /// </summary>
        [DataMember(Name = "source_type", EmitDefaultValue = false)]
        public SourceTypeEnum? SourceType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RestV2Order" /> class.
        /// </summary>
        /// <param name="allowPayment">allowPayment.</param>
        /// <param name="allowPaypal">allowPaypal.</param>
        /// <param name="contact">contact.</param>
        /// <param name="creationTime">creationTime.</param>
        /// <param name="id">id.</param>
        /// <param name="invoiceNumber">invoiceNumber.</param>
        /// <param name="leadAffiliateId">leadAffiliateId.</param>
        /// <param name="modificationTime">modificationTime.</param>
        /// <param name="notes">notes.</param>
        /// <param name="orderItems">orderItems.</param>
        /// <param name="orderTime">orderTime.</param>
        /// <param name="orderType">orderType.</param>
        /// <param name="paymentPlan">paymentPlan.</param>
        /// <param name="recurring">recurring.</param>
        /// <param name="refundTotal">refundTotal.</param>
        /// <param name="salesAffiliateId">salesAffiliateId.</param>
        /// <param name="shippingInformation">shippingInformation.</param>
        /// <param name="sourceType">sourceType.</param>
        /// <param name="status">status.</param>
        /// <param name="terms">terms.</param>
        /// <param name="title">title.</param>
        /// <param name="total">total.</param>
        /// <param name="totalDue">totalDue.</param>
        /// <param name="totalPaid">totalPaid.</param>
        public RestV2Order(bool allowPayment = default(bool), bool allowPaypal = default(bool), BasicContact contact = default(BasicContact), string creationTime = default(string), string id = default(string), string invoiceNumber = default(string), string leadAffiliateId = default(string), string modificationTime = default(string), string notes = default(string), List<RestV2OrderItem> orderItems = default(List<RestV2OrderItem>), string orderTime = default(string), string orderType = default(string), PaymentPlan paymentPlan = default(PaymentPlan), bool recurring = default(bool), double refundTotal = default(double), string salesAffiliateId = default(string), ShippingInformation shippingInformation = default(ShippingInformation), SourceTypeEnum? sourceType = default(SourceTypeEnum?), string status = default(string), string terms = default(string), string title = default(string), double total = default(double), double totalDue = default(double), double totalPaid = default(double))
        {
            this.AllowPayment = allowPayment;
            this.AllowPaypal = allowPaypal;
            this.Contact = contact;
            this.CreationTime = creationTime;
            this.Id = id;
            this.InvoiceNumber = invoiceNumber;
            this.LeadAffiliateId = leadAffiliateId;
            this.ModificationTime = modificationTime;
            this.Notes = notes;
            this.OrderItems = orderItems;
            this.OrderTime = orderTime;
            this.OrderType = orderType;
            this.PaymentPlan = paymentPlan;
            this.Recurring = recurring;
            this.RefundTotal = refundTotal;
            this.SalesAffiliateId = salesAffiliateId;
            this.ShippingInformation = shippingInformation;
            this.SourceType = sourceType;
            this.Status = status;
            this.Terms = terms;
            this.Title = title;
            this.Total = total;
            this.TotalDue = totalDue;
            this.TotalPaid = totalPaid;
        }

        /// <summary>
        /// Gets or Sets AllowPayment
        /// </summary>
        [DataMember(Name = "allow_payment", EmitDefaultValue = true)]
        public bool AllowPayment { get; set; }

        /// <summary>
        /// Gets or Sets AllowPaypal
        /// </summary>
        [DataMember(Name = "allow_paypal", EmitDefaultValue = true)]
        public bool AllowPaypal { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name = "contact", EmitDefaultValue = false)]
        public BasicContact Contact { get; set; }

        /// <summary>
        /// Gets or Sets CreationTime
        /// </summary>
        [DataMember(Name = "creation_time", EmitDefaultValue = false)]
        public string CreationTime { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets InvoiceNumber
        /// </summary>
        [DataMember(Name = "invoice_number", EmitDefaultValue = false)]
        public string InvoiceNumber { get; set; }

        /// <summary>
        /// Gets or Sets LeadAffiliateId
        /// </summary>
        [DataMember(Name = "lead_affiliate_id", EmitDefaultValue = false)]
        public string LeadAffiliateId { get; set; }

        /// <summary>
        /// Gets or Sets ModificationTime
        /// </summary>
        [DataMember(Name = "modification_time", EmitDefaultValue = false)]
        public string ModificationTime { get; set; }

        /// <summary>
        /// Gets or Sets Notes
        /// </summary>
        [DataMember(Name = "notes", EmitDefaultValue = false)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or Sets OrderItems
        /// </summary>
        [DataMember(Name = "order_items", EmitDefaultValue = false)]
        public List<RestV2OrderItem> OrderItems { get; set; }

        /// <summary>
        /// Gets or Sets OrderTime
        /// </summary>
        [DataMember(Name = "order_time", EmitDefaultValue = false)]
        public string OrderTime { get; set; }

        /// <summary>
        /// Gets or Sets OrderType
        /// </summary>
        [DataMember(Name = "order_type", EmitDefaultValue = false)]
        public string OrderType { get; set; }

        /// <summary>
        /// Gets or Sets PaymentPlan
        /// </summary>
        [DataMember(Name = "payment_plan", EmitDefaultValue = false)]
        public PaymentPlan PaymentPlan { get; set; }

        /// <summary>
        /// Gets or Sets Recurring
        /// </summary>
        [DataMember(Name = "recurring", EmitDefaultValue = true)]
        public bool Recurring { get; set; }

        /// <summary>
        /// Gets or Sets RefundTotal
        /// </summary>
        [DataMember(Name = "refund_total", EmitDefaultValue = false)]
        public double RefundTotal { get; set; }

        /// <summary>
        /// Gets or Sets SalesAffiliateId
        /// </summary>
        [DataMember(Name = "sales_affiliate_id", EmitDefaultValue = false)]
        public string SalesAffiliateId { get; set; }

        /// <summary>
        /// Gets or Sets ShippingInformation
        /// </summary>
        [DataMember(Name = "shipping_information", EmitDefaultValue = false)]
        public ShippingInformation ShippingInformation { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Terms
        /// </summary>
        [DataMember(Name = "terms", EmitDefaultValue = false)]
        public string Terms { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name = "total", EmitDefaultValue = false)]
        public double Total { get; set; }

        /// <summary>
        /// Gets or Sets TotalDue
        /// </summary>
        [DataMember(Name = "total_due", EmitDefaultValue = false)]
        public double TotalDue { get; set; }

        /// <summary>
        /// Gets or Sets TotalPaid
        /// </summary>
        [DataMember(Name = "total_paid", EmitDefaultValue = false)]
        public double TotalPaid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RestV2Order {\n");
            sb.Append("  AllowPayment: ").Append(AllowPayment).Append("\n");
            sb.Append("  AllowPaypal: ").Append(AllowPaypal).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  CreationTime: ").Append(CreationTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  InvoiceNumber: ").Append(InvoiceNumber).Append("\n");
            sb.Append("  LeadAffiliateId: ").Append(LeadAffiliateId).Append("\n");
            sb.Append("  ModificationTime: ").Append(ModificationTime).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  OrderItems: ").Append(OrderItems).Append("\n");
            sb.Append("  OrderTime: ").Append(OrderTime).Append("\n");
            sb.Append("  OrderType: ").Append(OrderType).Append("\n");
            sb.Append("  PaymentPlan: ").Append(PaymentPlan).Append("\n");
            sb.Append("  Recurring: ").Append(Recurring).Append("\n");
            sb.Append("  RefundTotal: ").Append(RefundTotal).Append("\n");
            sb.Append("  SalesAffiliateId: ").Append(SalesAffiliateId).Append("\n");
            sb.Append("  ShippingInformation: ").Append(ShippingInformation).Append("\n");
            sb.Append("  SourceType: ").Append(SourceType).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Terms: ").Append(Terms).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  TotalDue: ").Append(TotalDue).Append("\n");
            sb.Append("  TotalPaid: ").Append(TotalPaid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
