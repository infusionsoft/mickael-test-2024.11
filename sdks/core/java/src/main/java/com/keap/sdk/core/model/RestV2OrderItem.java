/*
 * Keap REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.70.0.739356-hf-202411181744
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.core.model.Discount;
import com.keap.sdk.core.model.OrderItemTax;
import com.keap.sdk.core.model.RestProduct;
import com.keap.sdk.core.model.RestSubscriptionPlan;
import com.keap.sdk.core.model.RestV2Subscription;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * RestV2OrderItem
 */
@JsonPropertyOrder({
  RestV2OrderItem.JSON_PROPERTY_BILLING_CYCLE,
  RestV2OrderItem.JSON_PROPERTY_COST,
  RestV2OrderItem.JSON_PROPERTY_CYCLE,
  RestV2OrderItem.JSON_PROPERTY_DESCRIPTION,
  RestV2OrderItem.JSON_PROPERTY_DISCOUNT,
  RestV2OrderItem.JSON_PROPERTY_FREQUENCY,
  RestV2OrderItem.JSON_PROPERTY_ID,
  RestV2OrderItem.JSON_PROPERTY_NAME,
  RestV2OrderItem.JSON_PROPERTY_NOTES,
  RestV2OrderItem.JSON_PROPERTY_NUMBER_OF_PAYMENTS,
  RestV2OrderItem.JSON_PROPERTY_ORDER_ITEM_TAXES,
  RestV2OrderItem.JSON_PROPERTY_PRICE,
  RestV2OrderItem.JSON_PROPERTY_PRODUCT,
  RestV2OrderItem.JSON_PROPERTY_QUANTITY,
  RestV2OrderItem.JSON_PROPERTY_SPECIAL,
  RestV2OrderItem.JSON_PROPERTY_SUBSCRIPTION,
  RestV2OrderItem.JSON_PROPERTY_SUBSCRIPTION_BASED,
  RestV2OrderItem.JSON_PROPERTY_SUBSCRIPTION_ID,
  RestV2OrderItem.JSON_PROPERTY_SUBSCRIPTION_PLAN,
  RestV2OrderItem.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class RestV2OrderItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_BILLING_CYCLE = "billing_cycle";
  private Integer billingCycle;

  public static final String JSON_PROPERTY_COST = "cost";
  private Double cost;

  /**
   * The interval at which the customer is charged for the subscription.
   */
  public enum CycleEnum {
    YEAR("YEAR"),
    
    MONTH("MONTH"),
    
    WEEK("WEEK"),
    
    DAY_OF_YEAR("DAY_OF_YEAR"),
    
    UNKNOWN_COULD_NOT_DESERIALIZE("unknown_default_open_api");

    private String value;

    CycleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CycleEnum fromValue(String value) {
      for (CycleEnum b : CycleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_CYCLE = "cycle";
  private CycleEnum cycle;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DISCOUNT = "discount";
  private Double discount;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  private Integer frequency;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_NUMBER_OF_PAYMENTS = "number_of_payments";
  private Integer numberOfPayments;

  public static final String JSON_PROPERTY_ORDER_ITEM_TAXES = "order_item_taxes";
  private List<@Valid OrderItemTax> orderItemTaxes = new ArrayList<>();

  public static final String JSON_PROPERTY_PRICE = "price";
  private Double price;

  public static final String JSON_PROPERTY_PRODUCT = "product";
  private RestProduct product;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_SPECIAL = "special";
  private Discount special;

  public static final String JSON_PROPERTY_SUBSCRIPTION = "subscription";
  private RestV2Subscription subscription;

  public static final String JSON_PROPERTY_SUBSCRIPTION_BASED = "subscription_based";
  private Boolean subscriptionBased;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ID = "subscription_id";
  private String subscriptionId;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PLAN = "subscription_plan";
  private RestSubscriptionPlan subscriptionPlan;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    UNKNOWN("UNKNOWN"),
    
    SHIPPING("SHIPPING"),
    
    TAX("TAX"),
    
    SERVICE("SERVICE"),
    
    PRODUCT("PRODUCT"),
    
    UPSELL("UPSELL"),
    
    FINANCECHARGE("FINANCECHARGE"),
    
    SPECIAL("SPECIAL"),
    
    PROGRAM("PROGRAM"),
    
    SUBSCRIPTION("SUBSCRIPTION"),
    
    SPECIAL_FREE_TRAIL_DAYS("SPECIAL_FREE_TRAIL_DAYS"),
    
    SPECIAL_ORDER_TOTAL("SPECIAL_ORDER_TOTAL"),
    
    SPECIAL_PRODUCT("SPECIAL_PRODUCT"),
    
    SPECIAL_CATEGORY("SPECIAL_CATEGORY"),
    
    SPECIAL_SHIPPING("SPECIAL_SHIPPING"),
    
    TIP("TIP"),
    
    OTHER("OTHER"),
    
    UNKNOWN_COULD_NOT_DESERIALIZE("unknown_default_open_api");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public RestV2OrderItem() { 
  }

  public RestV2OrderItem billingCycle(Integer billingCycle) {
    this.billingCycle = billingCycle;
    return this;
  }

  /**
   * Get billingCycle
   * @return billingCycle
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_BILLING_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getBillingCycle() {
    return billingCycle;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingCycle(Integer billingCycle) {
    this.billingCycle = billingCycle;
  }


  public RestV2OrderItem cost(Double cost) {
    this.cost = cost;
    return this;
  }

  /**
   * Get cost
   * @return cost
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getCost() {
    return cost;
  }


  @JsonProperty(JSON_PROPERTY_COST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCost(Double cost) {
    this.cost = cost;
  }


  public RestV2OrderItem cycle(CycleEnum cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * The interval at which the customer is charged for the subscription.
   * @return cycle
   */
  @jakarta.annotation.Nullable
  @Schema(example = "YEAR", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The interval at which the customer is charged for the subscription.")
  @JsonProperty(JSON_PROPERTY_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CycleEnum getCycle() {
    return cycle;
  }


  @JsonProperty(JSON_PROPERTY_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCycle(CycleEnum cycle) {
    this.cycle = cycle;
  }


  public RestV2OrderItem description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public RestV2OrderItem discount(Double discount) {
    this.discount = discount;
    return this;
  }

  /**
   * Get discount
   * @return discount
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getDiscount() {
    return discount;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscount(Double discount) {
    this.discount = discount;
  }


  public RestV2OrderItem frequency(Integer frequency) {
    this.frequency = frequency;
    return this;
  }

  /**
   * Interval at which a customer receives a product or service as part of a subscription plan.
   * @return frequency
   */
  @jakarta.annotation.Nullable
  @Schema(example = "2", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Interval at which a customer receives a product or service as part of a subscription plan.")
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getFrequency() {
    return frequency;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequency(Integer frequency) {
    this.frequency = frequency;
  }


  public RestV2OrderItem id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public RestV2OrderItem name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public RestV2OrderItem notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(String notes) {
    this.notes = notes;
  }


  public RestV2OrderItem numberOfPayments(Integer numberOfPayments) {
    this.numberOfPayments = numberOfPayments;
    return this;
  }

  /**
   * Get numberOfPayments
   * @return numberOfPayments
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NUMBER_OF_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getNumberOfPayments() {
    return numberOfPayments;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER_OF_PAYMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNumberOfPayments(Integer numberOfPayments) {
    this.numberOfPayments = numberOfPayments;
  }


  public RestV2OrderItem orderItemTaxes(List<@Valid OrderItemTax> orderItemTaxes) {
    this.orderItemTaxes = orderItemTaxes;
    return this;
  }

  public RestV2OrderItem addOrderItemTaxesItem(OrderItemTax orderItemTaxesItem) {
    if (this.orderItemTaxes == null) {
      this.orderItemTaxes = new ArrayList<>();
    }
    this.orderItemTaxes.add(orderItemTaxesItem);
    return this;
  }

  /**
   * Get orderItemTaxes
   * @return orderItemTaxes
   */
  @jakarta.annotation.Nullable
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ORDER_ITEM_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid OrderItemTax> getOrderItemTaxes() {
    return orderItemTaxes;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_ITEM_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderItemTaxes(List<@Valid OrderItemTax> orderItemTaxes) {
    this.orderItemTaxes = orderItemTaxes;
  }


  public RestV2OrderItem price(Double price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public RestV2OrderItem product(RestProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @jakarta.annotation.Nullable
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RestProduct getProduct() {
    return product;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProduct(RestProduct product) {
    this.product = product;
  }


  public RestV2OrderItem quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public RestV2OrderItem special(Discount special) {
    this.special = special;
    return this;
  }

  /**
   * Get special
   * @return special
   */
  @jakarta.annotation.Nullable
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SPECIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Discount getSpecial() {
    return special;
  }


  @JsonProperty(JSON_PROPERTY_SPECIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpecial(Discount special) {
    this.special = special;
  }


  public RestV2OrderItem subscription(RestV2Subscription subscription) {
    this.subscription = subscription;
    return this;
  }

  /**
   * Get subscription
   * @return subscription
   */
  @jakarta.annotation.Nullable
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RestV2Subscription getSubscription() {
    return subscription;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscription(RestV2Subscription subscription) {
    this.subscription = subscription;
  }


  public RestV2OrderItem subscriptionBased(Boolean subscriptionBased) {
    this.subscriptionBased = subscriptionBased;
    return this;
  }

  /**
   * Get subscriptionBased
   * @return subscriptionBased
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSubscriptionBased() {
    return subscriptionBased;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_BASED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionBased(Boolean subscriptionBased) {
    this.subscriptionBased = subscriptionBased;
  }


  public RestV2OrderItem subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * Get subscriptionId
   * @return subscriptionId
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSubscriptionId() {
    return subscriptionId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public RestV2OrderItem subscriptionPlan(RestSubscriptionPlan subscriptionPlan) {
    this.subscriptionPlan = subscriptionPlan;
    return this;
  }

  /**
   * Get subscriptionPlan
   * @return subscriptionPlan
   */
  @jakarta.annotation.Nullable
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public RestSubscriptionPlan getSubscriptionPlan() {
    return subscriptionPlan;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPlan(RestSubscriptionPlan subscriptionPlan) {
    this.subscriptionPlan = subscriptionPlan;
  }


  public RestV2OrderItem type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }

  /**
   * Return true if this RestV2OrderItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestV2OrderItem restV2OrderItem = (RestV2OrderItem) o;
    return Objects.equals(this.billingCycle, restV2OrderItem.billingCycle) &&
        Objects.equals(this.cost, restV2OrderItem.cost) &&
        Objects.equals(this.cycle, restV2OrderItem.cycle) &&
        Objects.equals(this.description, restV2OrderItem.description) &&
        Objects.equals(this.discount, restV2OrderItem.discount) &&
        Objects.equals(this.frequency, restV2OrderItem.frequency) &&
        Objects.equals(this.id, restV2OrderItem.id) &&
        Objects.equals(this.name, restV2OrderItem.name) &&
        Objects.equals(this.notes, restV2OrderItem.notes) &&
        Objects.equals(this.numberOfPayments, restV2OrderItem.numberOfPayments) &&
        Objects.equals(this.orderItemTaxes, restV2OrderItem.orderItemTaxes) &&
        Objects.equals(this.price, restV2OrderItem.price) &&
        Objects.equals(this.product, restV2OrderItem.product) &&
        Objects.equals(this.quantity, restV2OrderItem.quantity) &&
        Objects.equals(this.special, restV2OrderItem.special) &&
        Objects.equals(this.subscription, restV2OrderItem.subscription) &&
        Objects.equals(this.subscriptionBased, restV2OrderItem.subscriptionBased) &&
        Objects.equals(this.subscriptionId, restV2OrderItem.subscriptionId) &&
        Objects.equals(this.subscriptionPlan, restV2OrderItem.subscriptionPlan) &&
        Objects.equals(this.type, restV2OrderItem.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingCycle, cost, cycle, description, discount, frequency, id, name, notes, numberOfPayments, orderItemTaxes, price, product, quantity, special, subscription, subscriptionBased, subscriptionId, subscriptionPlan, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestV2OrderItem {\n");
    sb.append("    billingCycle: ").append(toIndentedString(billingCycle)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    numberOfPayments: ").append(toIndentedString(numberOfPayments)).append("\n");
    sb.append("    orderItemTaxes: ").append(toIndentedString(orderItemTaxes)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    special: ").append(toIndentedString(special)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    subscriptionBased: ").append(toIndentedString(subscriptionBased)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    subscriptionPlan: ").append(toIndentedString(subscriptionPlan)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private RestV2OrderItem instance;
    
        public Builder() {
          this(new RestV2OrderItem());
        }
    
        protected Builder(RestV2OrderItem instance) {
          this.instance = instance;
        }
    
        public RestV2OrderItem.Builder billingCycle(Integer billingCycle) {
              this.instance.billingCycle = billingCycle;
          return this;
        }
            public RestV2OrderItem.Builder cost(Double cost) {
              this.instance.cost = cost;
          return this;
        }
            public RestV2OrderItem.Builder cycle(CycleEnum cycle) {
              this.instance.cycle = cycle;
          return this;
        }
            public RestV2OrderItem.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public RestV2OrderItem.Builder discount(Double discount) {
              this.instance.discount = discount;
          return this;
        }
            public RestV2OrderItem.Builder frequency(Integer frequency) {
              this.instance.frequency = frequency;
          return this;
        }
            public RestV2OrderItem.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public RestV2OrderItem.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public RestV2OrderItem.Builder notes(String notes) {
              this.instance.notes = notes;
          return this;
        }
            public RestV2OrderItem.Builder numberOfPayments(Integer numberOfPayments) {
              this.instance.numberOfPayments = numberOfPayments;
          return this;
        }
            public RestV2OrderItem.Builder orderItemTaxes(List<@Valid OrderItemTax> orderItemTaxes) {
              this.instance.orderItemTaxes = orderItemTaxes;
          return this;
        }
            public RestV2OrderItem.Builder price(Double price) {
              this.instance.price = price;
          return this;
        }
            public RestV2OrderItem.Builder product(RestProduct product) {
              this.instance.product = product;
          return this;
        }
            public RestV2OrderItem.Builder quantity(Integer quantity) {
              this.instance.quantity = quantity;
          return this;
        }
            public RestV2OrderItem.Builder special(Discount special) {
              this.instance.special = special;
          return this;
        }
            public RestV2OrderItem.Builder subscription(RestV2Subscription subscription) {
              this.instance.subscription = subscription;
          return this;
        }
            public RestV2OrderItem.Builder subscriptionBased(Boolean subscriptionBased) {
              this.instance.subscriptionBased = subscriptionBased;
          return this;
        }
            public RestV2OrderItem.Builder subscriptionId(String subscriptionId) {
              this.instance.subscriptionId = subscriptionId;
          return this;
        }
            public RestV2OrderItem.Builder subscriptionPlan(RestSubscriptionPlan subscriptionPlan) {
              this.instance.subscriptionPlan = subscriptionPlan;
          return this;
        }
            public RestV2OrderItem.Builder type(TypeEnum type) {
              this.instance.type = type;
          return this;
        }
        
    
        /**
        * returns a built RestV2OrderItem instance.
        *
        * The builder is not reusable.
        */
        public RestV2OrderItem build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static RestV2OrderItem.Builder builder() {
        return new RestV2OrderItem.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public RestV2OrderItem.Builder toBuilder() {
        return new RestV2OrderItem.Builder()
          .billingCycle(getBillingCycle())
          .cost(getCost())
          .cycle(getCycle())
          .description(getDescription())
          .discount(getDiscount())
          .frequency(getFrequency())
          .id(getId())
          .name(getName())
          .notes(getNotes())
          .numberOfPayments(getNumberOfPayments())
          .orderItemTaxes(getOrderItemTaxes())
          .price(getPrice())
          .product(getProduct())
          .quantity(getQuantity())
          .special(getSpecial())
          .subscription(getSubscription())
          .subscriptionBased(getSubscriptionBased())
          .subscriptionId(getSubscriptionId())
          .subscriptionPlan(getSubscriptionPlan())
          .type(getType());
      }
}

