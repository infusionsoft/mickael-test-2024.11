/*
 * Keap REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.70.0.739356-hf-202411181744
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.core.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.core.model.AddressInformation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * RestV2PatchOrderRequest
 */
@JsonPropertyOrder({
  RestV2PatchOrderRequest.JSON_PROPERTY_CONTACT_ID,
  RestV2PatchOrderRequest.JSON_PROPERTY_LEAD_AFFILIATE_ID,
  RestV2PatchOrderRequest.JSON_PROPERTY_ORDER_TIME,
  RestV2PatchOrderRequest.JSON_PROPERTY_ORDER_TITLE,
  RestV2PatchOrderRequest.JSON_PROPERTY_ORDER_TYPE,
  RestV2PatchOrderRequest.JSON_PROPERTY_PROMO_CODES,
  RestV2PatchOrderRequest.JSON_PROPERTY_SALES_AFFILIATE_ID,
  RestV2PatchOrderRequest.JSON_PROPERTY_SHIPPING_ADDRESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class RestV2PatchOrderRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  private String contactId;

  public static final String JSON_PROPERTY_LEAD_AFFILIATE_ID = "lead_affiliate_id";
  private String leadAffiliateId;

  public static final String JSON_PROPERTY_ORDER_TIME = "order_time";
  private String orderTime;

  public static final String JSON_PROPERTY_ORDER_TITLE = "order_title";
  private String orderTitle;

  /**
   * Gets or Sets orderType
   */
  public enum OrderTypeEnum {
    OFFLINE("OFFLINE"),
    
    ONLINE("ONLINE"),
    
    UNKNOWN_COULD_NOT_DESERIALIZE("unknown_default_open_api");

    private String value;

    OrderTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderTypeEnum fromValue(String value) {
      for (OrderTypeEnum b : OrderTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_ORDER_TYPE = "order_type";
  private OrderTypeEnum orderType;

  public static final String JSON_PROPERTY_PROMO_CODES = "promo_codes";
  private List<String> promoCodes = new ArrayList<>();

  public static final String JSON_PROPERTY_SALES_AFFILIATE_ID = "sales_affiliate_id";
  private String salesAffiliateId;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shipping_address";
  private AddressInformation shippingAddress;

  public RestV2PatchOrderRequest() { 
  }

  public RestV2PatchOrderRequest contactId(String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Get contactId
   * @return contactId
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactId(String contactId) {
    this.contactId = contactId;
  }


  public RestV2PatchOrderRequest leadAffiliateId(String leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
    return this;
  }

  /**
   * Get leadAffiliateId
   * @return leadAffiliateId
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LEAD_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLeadAffiliateId() {
    return leadAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_LEAD_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeadAffiliateId(String leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
  }


  public RestV2PatchOrderRequest orderTime(String orderTime) {
    this.orderTime = orderTime;
    return this;
  }

  /**
   * Get orderTime
   * @return orderTime
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ORDER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOrderTime() {
    return orderTime;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderTime(String orderTime) {
    this.orderTime = orderTime;
  }


  public RestV2PatchOrderRequest orderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
    return this;
  }

  /**
   * Get orderTitle
   * @return orderTitle
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ORDER_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOrderTitle() {
    return orderTitle;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
  }


  public RestV2PatchOrderRequest orderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
    return this;
  }

  /**
   * Get orderType
   * @return orderType
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ORDER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OrderTypeEnum getOrderType() {
    return orderType;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
  }


  public RestV2PatchOrderRequest promoCodes(List<String> promoCodes) {
    this.promoCodes = promoCodes;
    return this;
  }

  public RestV2PatchOrderRequest addPromoCodesItem(String promoCodesItem) {
    if (this.promoCodes == null) {
      this.promoCodes = new ArrayList<>();
    }
    this.promoCodes.add(promoCodesItem);
    return this;
  }

  /**
   * Uses multiple strings as promo codes. The corresponding discount will be applied to the order.
   * @return promoCodes
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Uses multiple strings as promo codes. The corresponding discount will be applied to the order.")
  @JsonProperty(JSON_PROPERTY_PROMO_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getPromoCodes() {
    return promoCodes;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromoCodes(List<String> promoCodes) {
    this.promoCodes = promoCodes;
  }


  public RestV2PatchOrderRequest salesAffiliateId(String salesAffiliateId) {
    this.salesAffiliateId = salesAffiliateId;
    return this;
  }

  /**
   * Get salesAffiliateId
   * @return salesAffiliateId
   */
  @jakarta.annotation.Nullable
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SALES_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSalesAffiliateId() {
    return salesAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_SALES_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesAffiliateId(String salesAffiliateId) {
    this.salesAffiliateId = salesAffiliateId;
  }


  public RestV2PatchOrderRequest shippingAddress(AddressInformation shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @jakarta.annotation.Nullable
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AddressInformation getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(AddressInformation shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  /**
   * Return true if this RestV2PatchOrderRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestV2PatchOrderRequest restV2PatchOrderRequest = (RestV2PatchOrderRequest) o;
    return Objects.equals(this.contactId, restV2PatchOrderRequest.contactId) &&
        Objects.equals(this.leadAffiliateId, restV2PatchOrderRequest.leadAffiliateId) &&
        Objects.equals(this.orderTime, restV2PatchOrderRequest.orderTime) &&
        Objects.equals(this.orderTitle, restV2PatchOrderRequest.orderTitle) &&
        Objects.equals(this.orderType, restV2PatchOrderRequest.orderType) &&
        Objects.equals(this.promoCodes, restV2PatchOrderRequest.promoCodes) &&
        Objects.equals(this.salesAffiliateId, restV2PatchOrderRequest.salesAffiliateId) &&
        Objects.equals(this.shippingAddress, restV2PatchOrderRequest.shippingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, leadAffiliateId, orderTime, orderTitle, orderType, promoCodes, salesAffiliateId, shippingAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestV2PatchOrderRequest {\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    leadAffiliateId: ").append(toIndentedString(leadAffiliateId)).append("\n");
    sb.append("    orderTime: ").append(toIndentedString(orderTime)).append("\n");
    sb.append("    orderTitle: ").append(toIndentedString(orderTitle)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    promoCodes: ").append(toIndentedString(promoCodes)).append("\n");
    sb.append("    salesAffiliateId: ").append(toIndentedString(salesAffiliateId)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private RestV2PatchOrderRequest instance;
    
        public Builder() {
          this(new RestV2PatchOrderRequest());
        }
    
        protected Builder(RestV2PatchOrderRequest instance) {
          this.instance = instance;
        }
    
        public RestV2PatchOrderRequest.Builder contactId(String contactId) {
              this.instance.contactId = contactId;
          return this;
        }
            public RestV2PatchOrderRequest.Builder leadAffiliateId(String leadAffiliateId) {
              this.instance.leadAffiliateId = leadAffiliateId;
          return this;
        }
            public RestV2PatchOrderRequest.Builder orderTime(String orderTime) {
              this.instance.orderTime = orderTime;
          return this;
        }
            public RestV2PatchOrderRequest.Builder orderTitle(String orderTitle) {
              this.instance.orderTitle = orderTitle;
          return this;
        }
            public RestV2PatchOrderRequest.Builder orderType(OrderTypeEnum orderType) {
              this.instance.orderType = orderType;
          return this;
        }
            public RestV2PatchOrderRequest.Builder promoCodes(List<String> promoCodes) {
              this.instance.promoCodes = promoCodes;
          return this;
        }
            public RestV2PatchOrderRequest.Builder salesAffiliateId(String salesAffiliateId) {
              this.instance.salesAffiliateId = salesAffiliateId;
          return this;
        }
            public RestV2PatchOrderRequest.Builder shippingAddress(AddressInformation shippingAddress) {
              this.instance.shippingAddress = shippingAddress;
          return this;
        }
        
    
        /**
        * returns a built RestV2PatchOrderRequest instance.
        *
        * The builder is not reusable.
        */
        public RestV2PatchOrderRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static RestV2PatchOrderRequest.Builder builder() {
        return new RestV2PatchOrderRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public RestV2PatchOrderRequest.Builder toBuilder() {
        return new RestV2PatchOrderRequest.Builder()
          .contactId(getContactId())
          .leadAffiliateId(getLeadAffiliateId())
          .orderTime(getOrderTime())
          .orderTitle(getOrderTitle())
          .orderType(getOrderType())
          .promoCodes(getPromoCodes())
          .salesAffiliateId(getSalesAffiliateId())
          .shippingAddress(getShippingAddress());
      }
}

