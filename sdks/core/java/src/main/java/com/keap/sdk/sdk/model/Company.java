/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.764128
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.sdk.model.Address;
import com.keap.sdk.sdk.model.CustomFieldValue;
import com.keap.sdk.sdk.model.EmailAddress;
import com.keap.sdk.sdk.model.FaxNumber;
import com.keap.sdk.sdk.model.PhoneNumber;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Company
 */
@JsonPropertyOrder({
  Company.JSON_PROPERTY_ADDRESS,
  Company.JSON_PROPERTY_COMPANY_NAME,
  Company.JSON_PROPERTY_CREATE_TIME,
  Company.JSON_PROPERTY_CUSTOM_FIELDS,
  Company.JSON_PROPERTY_EMAIL_ADDRESS,
  Company.JSON_PROPERTY_FAX_NUMBER,
  Company.JSON_PROPERTY_ID,
  Company.JSON_PROPERTY_NOTES,
  Company.JSON_PROPERTY_PHONE_NUMBER,
  Company.JSON_PROPERTY_UPDATE_TIME,
  Company.JSON_PROPERTY_WEBSITE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class Company implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @jakarta.annotation.Nullable  private Address address;

  public static final String JSON_PROPERTY_COMPANY_NAME = "company_name";
  @jakarta.annotation.Nullable  private String companyName;

  public static final String JSON_PROPERTY_CREATE_TIME = "create_time";
  @jakarta.annotation.Nullable  private String createTime;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "custom_fields";
  @jakarta.annotation.Nullable  private List<@Valid CustomFieldValue> customFields = new ArrayList<>();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS = "email_address";
  @jakarta.annotation.Nullable  private EmailAddress emailAddress;

  public static final String JSON_PROPERTY_FAX_NUMBER = "fax_number";
  @jakarta.annotation.Nullable  private FaxNumber faxNumber;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_NOTES = "notes";
  @jakarta.annotation.Nullable  private String notes;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  @jakarta.annotation.Nullable  private PhoneNumber phoneNumber;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  @jakarta.annotation.Nullable  private String updateTime;

  public static final String JSON_PROPERTY_WEBSITE = "website";
  @jakarta.annotation.Nullable  private String website;

  public Company() { 
  }

  public Company address(@jakarta.annotation.Nullable Address address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Address getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(@jakarta.annotation.Nullable Address address) {
    this.address = address;
  }


  public Company companyName(@jakarta.annotation.Nullable String companyName) {
    this.companyName = companyName;
    return this;
  }

  /**
   * Get companyName
   * @return companyName
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCompanyName() {
    return companyName;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompanyName(@jakarta.annotation.Nullable String companyName) {
    this.companyName = companyName;
  }


  public Company createTime(@jakarta.annotation.Nullable String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Get createTime
   * @return createTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCreateTime() {
    return createTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateTime(@jakarta.annotation.Nullable String createTime) {
    this.createTime = createTime;
  }


  public Company customFields(@jakarta.annotation.Nullable List<@Valid CustomFieldValue> customFields) {
    this.customFields = customFields;
    return this;
  }

  public Company addCustomFieldsItem(CustomFieldValue customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

  /**
   * Get customFields
   * @return customFields
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid CustomFieldValue> getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(@jakarta.annotation.Nullable List<@Valid CustomFieldValue> customFields) {
    this.customFields = customFields;
  }


  public Company emailAddress(@jakarta.annotation.Nullable EmailAddress emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Get emailAddress
   * @return emailAddress
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public EmailAddress getEmailAddress() {
    return emailAddress;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailAddress(@jakarta.annotation.Nullable EmailAddress emailAddress) {
    this.emailAddress = emailAddress;
  }


  public Company faxNumber(@jakarta.annotation.Nullable FaxNumber faxNumber) {
    this.faxNumber = faxNumber;
    return this;
  }

  /**
   * Get faxNumber
   * @return faxNumber
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FAX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public FaxNumber getFaxNumber() {
    return faxNumber;
  }


  @JsonProperty(JSON_PROPERTY_FAX_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFaxNumber(@jakarta.annotation.Nullable FaxNumber faxNumber) {
    this.faxNumber = faxNumber;
  }


  public Company id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public Company notes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
  }


  public Company phoneNumber(@jakarta.annotation.Nullable PhoneNumber phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PhoneNumber getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(@jakarta.annotation.Nullable PhoneNumber phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public Company updateTime(@jakarta.annotation.Nullable String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Get updateTime
   * @return updateTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(@jakarta.annotation.Nullable String updateTime) {
    this.updateTime = updateTime;
  }


  public Company website(@jakarta.annotation.Nullable String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getWebsite() {
    return website;
  }


  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebsite(@jakarta.annotation.Nullable String website) {
    this.website = website;
  }

  /**
   * Return true if this Company object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Company company = (Company) o;
    return Objects.equals(this.address, company.address) &&
        Objects.equals(this.companyName, company.companyName) &&
        Objects.equals(this.createTime, company.createTime) &&
        Objects.equals(this.customFields, company.customFields) &&
        Objects.equals(this.emailAddress, company.emailAddress) &&
        Objects.equals(this.faxNumber, company.faxNumber) &&
        Objects.equals(this.id, company.id) &&
        Objects.equals(this.notes, company.notes) &&
        Objects.equals(this.phoneNumber, company.phoneNumber) &&
        Objects.equals(this.updateTime, company.updateTime) &&
        Objects.equals(this.website, company.website);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, companyName, createTime, customFields, emailAddress, faxNumber, id, notes, phoneNumber, updateTime, website);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Company {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    faxNumber: ").append(toIndentedString(faxNumber)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private Company instance;
    
        public Builder() {
          this(new Company());
        }
    
        protected Builder(Company instance) {
          this.instance = instance;
        }
    
        public Company.Builder address(Address address) {
              this.instance.address = address;
          return this;
        }
            public Company.Builder companyName(String companyName) {
              this.instance.companyName = companyName;
          return this;
        }
            public Company.Builder createTime(String createTime) {
              this.instance.createTime = createTime;
          return this;
        }
            public Company.Builder customFields(List<@Valid CustomFieldValue> customFields) {
              this.instance.customFields = customFields;
          return this;
        }
            public Company.Builder emailAddress(EmailAddress emailAddress) {
              this.instance.emailAddress = emailAddress;
          return this;
        }
            public Company.Builder faxNumber(FaxNumber faxNumber) {
              this.instance.faxNumber = faxNumber;
          return this;
        }
            public Company.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public Company.Builder notes(String notes) {
              this.instance.notes = notes;
          return this;
        }
            public Company.Builder phoneNumber(PhoneNumber phoneNumber) {
              this.instance.phoneNumber = phoneNumber;
          return this;
        }
            public Company.Builder updateTime(String updateTime) {
              this.instance.updateTime = updateTime;
          return this;
        }
            public Company.Builder website(String website) {
              this.instance.website = website;
          return this;
        }
        
    
        /**
        * returns a built Company instance.
        *
        * The builder is not reusable.
        */
        public Company build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static Company.Builder builder() {
        return new Company.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public Company.Builder toBuilder() {
        return new Company.Builder()
          .address(getAddress())
          .companyName(getCompanyName())
          .createTime(getCreateTime())
          .customFields(getCustomFields())
          .emailAddress(getEmailAddress())
          .faxNumber(getFaxNumber())
          .id(getId())
          .notes(getNotes())
          .phoneNumber(getPhoneNumber())
          .updateTime(getUpdateTime())
          .website(getWebsite());
      }
}

