/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.762682-hf-202501071525
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.sdk.model.DiscountCriteria;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * CreateCategoryDiscountRequest
 */
@JsonPropertyOrder({
  CreateCategoryDiscountRequest.JSON_PROPERTY_APPLY_TO_COMMISSIONS,
  CreateCategoryDiscountRequest.JSON_PROPERTY_CRITERIA,
  CreateCategoryDiscountRequest.JSON_PROPERTY_DESCRIPTION,
  CreateCategoryDiscountRequest.JSON_PROPERTY_DISCOUNT_PERCENT,
  CreateCategoryDiscountRequest.JSON_PROPERTY_NAME,
  CreateCategoryDiscountRequest.JSON_PROPERTY_PRODUCT_CATEGORY_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateCategoryDiscountRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_APPLY_TO_COMMISSIONS = "apply_to_commissions";
  @jakarta.annotation.Nonnull  private Boolean applyToCommissions;

  public static final String JSON_PROPERTY_CRITERIA = "criteria";
  @jakarta.annotation.Nullable  private List<@Valid DiscountCriteria> criteria = new ArrayList<>();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable  private String description;

  public static final String JSON_PROPERTY_DISCOUNT_PERCENT = "discount_percent";
  @jakarta.annotation.Nonnull  private Double discountPercent;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull  private String name;

  public static final String JSON_PROPERTY_PRODUCT_CATEGORY_IDS = "product_category_ids";
  @jakarta.annotation.Nonnull  private List<String> productCategoryIds = new ArrayList<>();

  public CreateCategoryDiscountRequest() { 
  }

  public CreateCategoryDiscountRequest applyToCommissions(@jakarta.annotation.Nonnull Boolean applyToCommissions) {
    this.applyToCommissions = applyToCommissions;
    return this;
  }

  /**
   * Get applyToCommissions
   * @return applyToCommissions
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_APPLY_TO_COMMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getApplyToCommissions() {
    return applyToCommissions;
  }


  @JsonProperty(JSON_PROPERTY_APPLY_TO_COMMISSIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplyToCommissions(@jakarta.annotation.Nonnull Boolean applyToCommissions) {
    this.applyToCommissions = applyToCommissions;
  }


  public CreateCategoryDiscountRequest criteria(@jakarta.annotation.Nullable List<@Valid DiscountCriteria> criteria) {
    this.criteria = criteria;
    return this;
  }

  public CreateCategoryDiscountRequest addCriteriaItem(DiscountCriteria criteriaItem) {
    if (this.criteria == null) {
      this.criteria = new ArrayList<>();
    }
    this.criteria.add(criteriaItem);
    return this;
  }

  /**
   * Get criteria
   * @return criteria
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid DiscountCriteria> getCriteria() {
    return criteria;
  }


  @JsonProperty(JSON_PROPERTY_CRITERIA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCriteria(@jakarta.annotation.Nullable List<@Valid DiscountCriteria> criteria) {
    this.criteria = criteria;
  }


  public CreateCategoryDiscountRequest description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateCategoryDiscountRequest discountPercent(@jakarta.annotation.Nonnull Double discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

  /**
   * Get discountPercent
   * @return discountPercent
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DISCOUNT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Double getDiscountPercent() {
    return discountPercent;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDiscountPercent(@jakarta.annotation.Nonnull Double discountPercent) {
    this.discountPercent = discountPercent;
  }


  public CreateCategoryDiscountRequest name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }


  public CreateCategoryDiscountRequest productCategoryIds(@jakarta.annotation.Nonnull List<String> productCategoryIds) {
    this.productCategoryIds = productCategoryIds;
    return this;
  }

  public CreateCategoryDiscountRequest addProductCategoryIdsItem(String productCategoryIdsItem) {
    if (this.productCategoryIds == null) {
      this.productCategoryIds = new ArrayList<>();
    }
    this.productCategoryIds.add(productCategoryIdsItem);
    return this;
  }

  /**
   * Get productCategoryIds
   * @return productCategoryIds
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_CATEGORY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getProductCategoryIds() {
    return productCategoryIds;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_CATEGORY_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductCategoryIds(@jakarta.annotation.Nonnull List<String> productCategoryIds) {
    this.productCategoryIds = productCategoryIds;
  }

  /**
   * Return true if this CreateCategoryDiscountRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCategoryDiscountRequest createCategoryDiscountRequest = (CreateCategoryDiscountRequest) o;
    return Objects.equals(this.applyToCommissions, createCategoryDiscountRequest.applyToCommissions) &&
        Objects.equals(this.criteria, createCategoryDiscountRequest.criteria) &&
        Objects.equals(this.description, createCategoryDiscountRequest.description) &&
        Objects.equals(this.discountPercent, createCategoryDiscountRequest.discountPercent) &&
        Objects.equals(this.name, createCategoryDiscountRequest.name) &&
        Objects.equals(this.productCategoryIds, createCategoryDiscountRequest.productCategoryIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyToCommissions, criteria, description, discountPercent, name, productCategoryIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCategoryDiscountRequest {\n");
    sb.append("    applyToCommissions: ").append(toIndentedString(applyToCommissions)).append("\n");
    sb.append("    criteria: ").append(toIndentedString(criteria)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productCategoryIds: ").append(toIndentedString(productCategoryIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private CreateCategoryDiscountRequest instance;
    
        public Builder() {
          this(new CreateCategoryDiscountRequest());
        }
    
        protected Builder(CreateCategoryDiscountRequest instance) {
          this.instance = instance;
        }
    
        public CreateCategoryDiscountRequest.Builder applyToCommissions(Boolean applyToCommissions) {
              this.instance.applyToCommissions = applyToCommissions;
          return this;
        }
            public CreateCategoryDiscountRequest.Builder criteria(List<@Valid DiscountCriteria> criteria) {
              this.instance.criteria = criteria;
          return this;
        }
            public CreateCategoryDiscountRequest.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public CreateCategoryDiscountRequest.Builder discountPercent(Double discountPercent) {
              this.instance.discountPercent = discountPercent;
          return this;
        }
            public CreateCategoryDiscountRequest.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public CreateCategoryDiscountRequest.Builder productCategoryIds(List<String> productCategoryIds) {
              this.instance.productCategoryIds = productCategoryIds;
          return this;
        }
        
    
        /**
        * returns a built CreateCategoryDiscountRequest instance.
        *
        * The builder is not reusable.
        */
        public CreateCategoryDiscountRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static CreateCategoryDiscountRequest.Builder builder() {
        return new CreateCategoryDiscountRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public CreateCategoryDiscountRequest.Builder toBuilder() {
        return new CreateCategoryDiscountRequest.Builder()
          .applyToCommissions(getApplyToCommissions())
          .criteria(getCriteria())
          .description(getDescription())
          .discountPercent(getDiscountPercent())
          .name(getName())
          .productCategoryIds(getProductCategoryIds());
      }
}

