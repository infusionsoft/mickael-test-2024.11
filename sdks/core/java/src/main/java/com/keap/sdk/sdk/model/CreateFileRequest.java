/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.762682-hf-202501071525
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * CreateFileRequest
 */
@JsonPropertyOrder({
  CreateFileRequest.JSON_PROPERTY_CONTACT_ID,
  CreateFileRequest.JSON_PROPERTY_FILE_ASSOCIATION,
  CreateFileRequest.JSON_PROPERTY_FILE_NAME,
  CreateFileRequest.JSON_PROPERTY_IS_PUBLIC
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateFileRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  @jakarta.annotation.Nonnull  private String contactId;

  /**
   * Gets or Sets fileAssociation
   */
  public enum FileAssociationEnum {
    CONTACT(String.valueOf("CONTACT")),
    
    USER(String.valueOf("USER")),
    
    COMPANY(String.valueOf("COMPANY")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    FileAssociationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FileAssociationEnum fromValue(String value) {
      for (FileAssociationEnum b : FileAssociationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_FILE_ASSOCIATION = "file_association";
  @jakarta.annotation.Nullable  private FileAssociationEnum fileAssociation;

  public static final String JSON_PROPERTY_FILE_NAME = "file_name";
  @jakarta.annotation.Nonnull  private String fileName;

  public static final String JSON_PROPERTY_IS_PUBLIC = "is_public";
  @jakarta.annotation.Nullable  private Boolean isPublic;

  public CreateFileRequest() { 
  }

  public CreateFileRequest contactId(@jakarta.annotation.Nonnull String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Get contactId
   * @return contactId
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactId(@jakarta.annotation.Nonnull String contactId) {
    this.contactId = contactId;
  }


  public CreateFileRequest fileAssociation(@jakarta.annotation.Nullable FileAssociationEnum fileAssociation) {
    this.fileAssociation = fileAssociation;
    return this;
  }

  /**
   * Get fileAssociation
   * @return fileAssociation
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FILE_ASSOCIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public FileAssociationEnum getFileAssociation() {
    return fileAssociation;
  }


  @JsonProperty(JSON_PROPERTY_FILE_ASSOCIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileAssociation(@jakarta.annotation.Nullable FileAssociationEnum fileAssociation) {
    this.fileAssociation = fileAssociation;
  }


  public CreateFileRequest fileName(@jakarta.annotation.Nonnull String fileName) {
    this.fileName = fileName;
    return this;
  }

  /**
   * Get fileName
   * @return fileName
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFileName(@jakarta.annotation.Nonnull String fileName) {
    this.fileName = fileName;
  }


  public CreateFileRequest isPublic(@jakarta.annotation.Nullable Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

  /**
   * Get isPublic
   * @return isPublic
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsPublic() {
    return isPublic;
  }


  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsPublic(@jakarta.annotation.Nullable Boolean isPublic) {
    this.isPublic = isPublic;
  }

  /**
   * Return true if this CreateFileRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFileRequest createFileRequest = (CreateFileRequest) o;
    return Objects.equals(this.contactId, createFileRequest.contactId) &&
        Objects.equals(this.fileAssociation, createFileRequest.fileAssociation) &&
        Objects.equals(this.fileName, createFileRequest.fileName) &&
        Objects.equals(this.isPublic, createFileRequest.isPublic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, fileAssociation, fileName, isPublic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFileRequest {\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    fileAssociation: ").append(toIndentedString(fileAssociation)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private CreateFileRequest instance;
    
        public Builder() {
          this(new CreateFileRequest());
        }
    
        protected Builder(CreateFileRequest instance) {
          this.instance = instance;
        }
    
        public CreateFileRequest.Builder contactId(String contactId) {
              this.instance.contactId = contactId;
          return this;
        }
            public CreateFileRequest.Builder fileAssociation(FileAssociationEnum fileAssociation) {
              this.instance.fileAssociation = fileAssociation;
          return this;
        }
            public CreateFileRequest.Builder fileName(String fileName) {
              this.instance.fileName = fileName;
          return this;
        }
            public CreateFileRequest.Builder isPublic(Boolean isPublic) {
              this.instance.isPublic = isPublic;
          return this;
        }
        
    
        /**
        * returns a built CreateFileRequest instance.
        *
        * The builder is not reusable.
        */
        public CreateFileRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static CreateFileRequest.Builder builder() {
        return new CreateFileRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public CreateFileRequest.Builder toBuilder() {
        return new CreateFileRequest.Builder()
          .contactId(getContactId())
          .fileAssociation(getFileAssociation())
          .fileName(getFileName())
          .isPublic(getIsPublic());
      }
}

