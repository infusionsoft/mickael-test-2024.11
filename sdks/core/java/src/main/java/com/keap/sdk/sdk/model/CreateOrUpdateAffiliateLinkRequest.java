/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.772697-hf-202501311118
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * CreateOrUpdateAffiliateLinkRequest
 */
@JsonPropertyOrder({
  CreateOrUpdateAffiliateLinkRequest.JSON_PROPERTY_AFFILIATE_ID,
  CreateOrUpdateAffiliateLinkRequest.JSON_PROPERTY_CODE,
  CreateOrUpdateAffiliateLinkRequest.JSON_PROPERTY_NAME,
  CreateOrUpdateAffiliateLinkRequest.JSON_PROPERTY_PROGRAM_IDS,
  CreateOrUpdateAffiliateLinkRequest.JSON_PROPERTY_WEBSITE_ADDRESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateOrUpdateAffiliateLinkRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AFFILIATE_ID = "affiliate_id";
  @jakarta.annotation.Nullable  private String affiliateId;

  public static final String JSON_PROPERTY_CODE = "code";
  @jakarta.annotation.Nullable  private String code;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_PROGRAM_IDS = "program_ids";
  @jakarta.annotation.Nullable  private List<String> programIds = new ArrayList<>();

  public static final String JSON_PROPERTY_WEBSITE_ADDRESS = "website_address";
  @jakarta.annotation.Nullable  private String websiteAddress;

  public CreateOrUpdateAffiliateLinkRequest() { 
  }

  public CreateOrUpdateAffiliateLinkRequest affiliateId(@jakarta.annotation.Nullable String affiliateId) {
    this.affiliateId = affiliateId;
    return this;
  }

  /**
   * The AffiliateId
   * @return affiliateId
   */
  @jakarta.annotation.Nullable  @Schema(example = "1", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The AffiliateId")
  @JsonProperty(JSON_PROPERTY_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAffiliateId() {
    return affiliateId;
  }


  @JsonProperty(JSON_PROPERTY_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAffiliateId(@jakarta.annotation.Nullable String affiliateId) {
    this.affiliateId = affiliateId;
  }


  public CreateOrUpdateAffiliateLinkRequest code(@jakarta.annotation.Nullable String code) {
    this.code = code;
    return this;
  }

  /**
   * Code
   * @return code
   */
  @jakarta.annotation.Nullable  @Schema(example = "fP100", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Code")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(@jakarta.annotation.Nullable String code) {
    this.code = code;
  }


  public CreateOrUpdateAffiliateLinkRequest name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The Affiliate Link Name
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(example = "Fitness Program", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The Affiliate Link Name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public CreateOrUpdateAffiliateLinkRequest programIds(@jakarta.annotation.Nullable List<String> programIds) {
    this.programIds = programIds;
    return this;
  }

  public CreateOrUpdateAffiliateLinkRequest addProgramIdsItem(String programIdsItem) {
    if (this.programIds == null) {
      this.programIds = new ArrayList<>();
    }
    this.programIds.add(programIdsItem);
    return this;
  }

  /**
   * Get programIds
   * @return programIds
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PROGRAM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getProgramIds() {
    return programIds;
  }


  @JsonProperty(JSON_PROPERTY_PROGRAM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProgramIds(@jakarta.annotation.Nullable List<String> programIds) {
    this.programIds = programIds;
  }


  public CreateOrUpdateAffiliateLinkRequest websiteAddress(@jakarta.annotation.Nullable String websiteAddress) {
    this.websiteAddress = websiteAddress;
    return this;
  }

  /**
   * Website Address
   * @return websiteAddress
   */
  @jakarta.annotation.Nullable  @Schema(example = "www.fitnessProgram.com", requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Website Address")
  @JsonProperty(JSON_PROPERTY_WEBSITE_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getWebsiteAddress() {
    return websiteAddress;
  }


  @JsonProperty(JSON_PROPERTY_WEBSITE_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebsiteAddress(@jakarta.annotation.Nullable String websiteAddress) {
    this.websiteAddress = websiteAddress;
  }

  /**
   * Return true if this CreateOrUpdateAffiliateLinkRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrUpdateAffiliateLinkRequest createOrUpdateAffiliateLinkRequest = (CreateOrUpdateAffiliateLinkRequest) o;
    return Objects.equals(this.affiliateId, createOrUpdateAffiliateLinkRequest.affiliateId) &&
        Objects.equals(this.code, createOrUpdateAffiliateLinkRequest.code) &&
        Objects.equals(this.name, createOrUpdateAffiliateLinkRequest.name) &&
        Objects.equals(this.programIds, createOrUpdateAffiliateLinkRequest.programIds) &&
        Objects.equals(this.websiteAddress, createOrUpdateAffiliateLinkRequest.websiteAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateId, code, name, programIds, websiteAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrUpdateAffiliateLinkRequest {\n");
    sb.append("    affiliateId: ").append(toIndentedString(affiliateId)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    programIds: ").append(toIndentedString(programIds)).append("\n");
    sb.append("    websiteAddress: ").append(toIndentedString(websiteAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private CreateOrUpdateAffiliateLinkRequest instance;
    
        public Builder() {
          this(new CreateOrUpdateAffiliateLinkRequest());
        }
    
        protected Builder(CreateOrUpdateAffiliateLinkRequest instance) {
          this.instance = instance;
        }
    
        public CreateOrUpdateAffiliateLinkRequest.Builder affiliateId(String affiliateId) {
              this.instance.affiliateId = affiliateId;
          return this;
        }
            public CreateOrUpdateAffiliateLinkRequest.Builder code(String code) {
              this.instance.code = code;
          return this;
        }
            public CreateOrUpdateAffiliateLinkRequest.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public CreateOrUpdateAffiliateLinkRequest.Builder programIds(List<String> programIds) {
              this.instance.programIds = programIds;
          return this;
        }
            public CreateOrUpdateAffiliateLinkRequest.Builder websiteAddress(String websiteAddress) {
              this.instance.websiteAddress = websiteAddress;
          return this;
        }
        
    
        /**
        * returns a built CreateOrUpdateAffiliateLinkRequest instance.
        *
        * The builder is not reusable.
        */
        public CreateOrUpdateAffiliateLinkRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static CreateOrUpdateAffiliateLinkRequest.Builder builder() {
        return new CreateOrUpdateAffiliateLinkRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public CreateOrUpdateAffiliateLinkRequest.Builder toBuilder() {
        return new CreateOrUpdateAffiliateLinkRequest.Builder()
          .affiliateId(getAffiliateId())
          .code(getCode())
          .name(getName())
          .programIds(getProgramIds())
          .websiteAddress(getWebsiteAddress());
      }
}

