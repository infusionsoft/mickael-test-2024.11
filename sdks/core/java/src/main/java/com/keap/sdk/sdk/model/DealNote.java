/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.762682-hf-202501071525
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.ZonedDateTime;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * A model representing a note associated with a deal.
 */
@Schema(description = "A model representing a note associated with a deal.")
@JsonPropertyOrder({
  DealNote.JSON_PROPERTY_ID,
  DealNote.JSON_PROPERTY_DEAL_ID,
  DealNote.JSON_PROPERTY_BODY,
  DealNote.JSON_PROPERTY_CREATED_BY,
  DealNote.JSON_PROPERTY_CREATED_TIME,
  DealNote.JSON_PROPERTY_MODIFIED_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class DealNote implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_DEAL_ID = "deal_id";
  @jakarta.annotation.Nullable  private String dealId;

  public static final String JSON_PROPERTY_BODY = "body";
  @jakarta.annotation.Nullable  private String body;

  public static final String JSON_PROPERTY_CREATED_BY = "created_by";
  @jakarta.annotation.Nullable  private String createdBy;

  public static final String JSON_PROPERTY_CREATED_TIME = "created_time";
  @jakarta.annotation.Nullable  private ZonedDateTime createdTime;

  public static final String JSON_PROPERTY_MODIFIED_TIME = "modified_time";
  @jakarta.annotation.Nullable  private ZonedDateTime modifiedTime;

  public DealNote() { 
  }

  public DealNote id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the model.
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Unique identifier for the model.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public DealNote dealId(@jakarta.annotation.Nullable String dealId) {
    this.dealId = dealId;
    return this;
  }

  /**
   * The ID of the deal associated with the note.
   * @return dealId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The ID of the deal associated with the note.")
  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDealId() {
    return dealId;
  }


  @JsonProperty(JSON_PROPERTY_DEAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealId(@jakarta.annotation.Nullable String dealId) {
    this.dealId = dealId;
  }


  public DealNote body(@jakarta.annotation.Nullable String body) {
    this.body = body;
    return this;
  }

  /**
   * The body content of the note.
   * @return body
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The body content of the note.")
  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBody() {
    return body;
  }


  @JsonProperty(JSON_PROPERTY_BODY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBody(@jakarta.annotation.Nullable String body) {
    this.body = body;
  }


  public DealNote createdBy(@jakarta.annotation.Nullable String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * The ID of the user who created the note.
   * @return createdBy
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The ID of the user who created the note.")
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedBy(@jakarta.annotation.Nullable String createdBy) {
    this.createdBy = createdBy;
  }


  public DealNote createdTime(@jakarta.annotation.Nullable ZonedDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * The timestamp when the note was created. Formatted as a string according to the pattern \&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSXXX\&quot;.
   * @return createdTime
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The timestamp when the note was created. Formatted as a string according to the pattern \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\".")
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ZonedDateTime getCreatedTime() {
    return createdTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedTime(@jakarta.annotation.Nullable ZonedDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public DealNote modifiedTime(@jakarta.annotation.Nullable ZonedDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
    return this;
  }

  /**
   * The timestamp when the note was last modified. Formatted as a string according to the pattern \&quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSXXX\&quot;.
   * @return modifiedTime
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The timestamp when the note was last modified. Formatted as a string according to the pattern \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\".")
  @JsonProperty(JSON_PROPERTY_MODIFIED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ZonedDateTime getModifiedTime() {
    return modifiedTime;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifiedTime(@jakarta.annotation.Nullable ZonedDateTime modifiedTime) {
    this.modifiedTime = modifiedTime;
  }

  /**
   * Return true if this DealNote object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DealNote dealNote = (DealNote) o;
    return Objects.equals(this.id, dealNote.id) &&
        Objects.equals(this.dealId, dealNote.dealId) &&
        Objects.equals(this.body, dealNote.body) &&
        Objects.equals(this.createdBy, dealNote.createdBy) &&
        Objects.equals(this.createdTime, dealNote.createdTime) &&
        Objects.equals(this.modifiedTime, dealNote.modifiedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dealId, body, createdBy, createdTime, modifiedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DealNote {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dealId: ").append(toIndentedString(dealId)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    modifiedTime: ").append(toIndentedString(modifiedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private DealNote instance;
    
        public Builder() {
          this(new DealNote());
        }
    
        protected Builder(DealNote instance) {
          this.instance = instance;
        }
    
        public DealNote.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public DealNote.Builder dealId(String dealId) {
              this.instance.dealId = dealId;
          return this;
        }
            public DealNote.Builder body(String body) {
              this.instance.body = body;
          return this;
        }
            public DealNote.Builder createdBy(String createdBy) {
              this.instance.createdBy = createdBy;
          return this;
        }
            public DealNote.Builder createdTime(ZonedDateTime createdTime) {
              this.instance.createdTime = createdTime;
          return this;
        }
            public DealNote.Builder modifiedTime(ZonedDateTime modifiedTime) {
              this.instance.modifiedTime = modifiedTime;
          return this;
        }
        
    
        /**
        * returns a built DealNote instance.
        *
        * The builder is not reusable.
        */
        public DealNote build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static DealNote.Builder builder() {
        return new DealNote.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public DealNote.Builder toBuilder() {
        return new DealNote.Builder()
          .id(getId())
          .dealId(getDealId())
          .body(getBody())
          .createdBy(getCreatedBy())
          .createdTime(getCreatedTime())
          .modifiedTime(getModifiedTime());
      }
}

