/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.768375
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Item
 */
@JsonPropertyOrder({
  Item.JSON_PROPERTY_ID,
  Item.JSON_PROPERTY_NAME,
  Item.JSON_PROPERTY_NEXT_ITEM_ID,
  Item.JSON_PROPERTY_PREVIOUS_ITEM_ID,
  Item.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class Item implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_NEXT_ITEM_ID = "next_item_id";
  @jakarta.annotation.Nullable  private String nextItemId;

  public static final String JSON_PROPERTY_PREVIOUS_ITEM_ID = "previous_item_id";
  @jakarta.annotation.Nullable  private String previousItemId;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    NULL(String.valueOf("NULL")),
    
    START(String.valueOf("Start")),
    
    WAIT(String.valueOf("Wait")),
    
    DELAY_TIMER(String.valueOf("DelayTimer")),
    
    CONTACT_TIMER(String.valueOf("ContactTimer")),
    
    DATE_TIMER(String.valueOf("DateTimer")),
    
    APPOINTMENT_TIMER(String.valueOf("AppointmentTimer")),
    
    EMAIL(String.valueOf("Email")),
    
    BARD_EMAIL(String.valueOf("BardEmail")),
    
    UNLAYER_EMAIL(String.valueOf("UnlayerEmail")),
    
    EMAIL_CONFIRM(String.valueOf("EmailConfirm")),
    
    VOICE(String.valueOf("Voice")),
    
    FAX(String.valueOf("Fax")),
    
    LETTER(String.valueOf("Letter")),
    
    AUTOMATED_SMS(String.valueOf("AutomatedSms")),
    
    TAG(String.valueOf("Tag")),
    
    OPPORTUNITY(String.valueOf("Opportunity")),
    
    NOTE(String.valueOf("Note")),
    
    TASK(String.valueOf("Task")),
    
    COMPLETE_TASKS(String.valueOf("CompleteTasks")),
    
    APPOINTMENT(String.valueOf("Appointment")),
    
    ASSIGN_OWNER(String.valueOf("AssignOwner")),
    
    FIELD_VALUE(String.valueOf("FieldValue")),
    
    FULFILLMENT(String.valueOf("Fulfillment")),
    
    CREATE_ORDER(String.valueOf("CreateOrder")),
    
    DEAL(String.valueOf("Deal")),
    
    ADD_TO_SEQUENCE(String.valueOf("AddToSequence")),
    
    CANCEL_SUBSCRIPTION(String.valueOf("CancelSubscription")),
    
    MOVE_OPPORTUNITY(String.valueOf("MoveOpportunity")),
    
    HTTP(String.valueOf("Http")),
    
    CUSTOMER_HUB(String.valueOf("CustomerHub")),
    
    HTTP_REQUEST(String.valueOf("HttpRequest")),
    
    INTEGRATION_ACTION(String.valueOf("IntegrationAction")),
    
    ACTION_SET(String.valueOf("ActionSet")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nullable  private TypeEnum type;

  public Item() { 
  }

  public Item id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public Item name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public Item nextItemId(@jakarta.annotation.Nullable String nextItemId) {
    this.nextItemId = nextItemId;
    return this;
  }

  /**
   * Get nextItemId
   * @return nextItemId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NEXT_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNextItemId() {
    return nextItemId;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextItemId(@jakarta.annotation.Nullable String nextItemId) {
    this.nextItemId = nextItemId;
  }


  public Item previousItemId(@jakarta.annotation.Nullable String previousItemId) {
    this.previousItemId = previousItemId;
    return this;
  }

  /**
   * Get previousItemId
   * @return previousItemId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PREVIOUS_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPreviousItemId() {
    return previousItemId;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousItemId(@jakarta.annotation.Nullable String previousItemId) {
    this.previousItemId = previousItemId;
  }


  public Item type(@jakarta.annotation.Nullable TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@jakarta.annotation.Nullable TypeEnum type) {
    this.type = type;
  }

  /**
   * Return true if this Item object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Item item = (Item) o;
    return Objects.equals(this.id, item.id) &&
        Objects.equals(this.name, item.name) &&
        Objects.equals(this.nextItemId, item.nextItemId) &&
        Objects.equals(this.previousItemId, item.previousItemId) &&
        Objects.equals(this.type, item.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, nextItemId, previousItemId, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Item {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextItemId: ").append(toIndentedString(nextItemId)).append("\n");
    sb.append("    previousItemId: ").append(toIndentedString(previousItemId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private Item instance;
    
        public Builder() {
          this(new Item());
        }
    
        protected Builder(Item instance) {
          this.instance = instance;
        }
    
        public Item.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public Item.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public Item.Builder nextItemId(String nextItemId) {
              this.instance.nextItemId = nextItemId;
          return this;
        }
            public Item.Builder previousItemId(String previousItemId) {
              this.instance.previousItemId = previousItemId;
          return this;
        }
            public Item.Builder type(TypeEnum type) {
              this.instance.type = type;
          return this;
        }
        
    
        /**
        * returns a built Item instance.
        *
        * The builder is not reusable.
        */
        public Item build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static Item.Builder builder() {
        return new Item.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public Item.Builder toBuilder() {
        return new Item.Builder()
          .id(getId())
          .name(getName())
          .nextItemId(getNextItemId())
          .previousItemId(getPreviousItemId())
          .type(getType());
      }
}

