/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.752995
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * LinkContactsRequest
 */
@JsonPropertyOrder({
  LinkContactsRequest.JSON_PROPERTY_CONTACT1_ID,
  LinkContactsRequest.JSON_PROPERTY_CONTACT2_ID,
  LinkContactsRequest.JSON_PROPERTY_LINK_TYPE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class LinkContactsRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTACT1_ID = "contact1_id";
  @jakarta.annotation.Nullable  private String contact1Id;

  public static final String JSON_PROPERTY_CONTACT2_ID = "contact2_id";
  @jakarta.annotation.Nullable  private String contact2Id;

  public static final String JSON_PROPERTY_LINK_TYPE_ID = "link_type_id";
  @jakarta.annotation.Nullable  private String linkTypeId;

  public LinkContactsRequest() { 
  }

  public LinkContactsRequest contact1Id(@jakarta.annotation.Nullable String contact1Id) {
    this.contact1Id = contact1Id;
    return this;
  }

  /**
   * Get contact1Id
   * @return contact1Id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTACT1_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContact1Id() {
    return contact1Id;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT1_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact1Id(@jakarta.annotation.Nullable String contact1Id) {
    this.contact1Id = contact1Id;
  }


  public LinkContactsRequest contact2Id(@jakarta.annotation.Nullable String contact2Id) {
    this.contact2Id = contact2Id;
    return this;
  }

  /**
   * Get contact2Id
   * @return contact2Id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTACT2_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContact2Id() {
    return contact2Id;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT2_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact2Id(@jakarta.annotation.Nullable String contact2Id) {
    this.contact2Id = contact2Id;
  }


  public LinkContactsRequest linkTypeId(@jakarta.annotation.Nullable String linkTypeId) {
    this.linkTypeId = linkTypeId;
    return this;
  }

  /**
   * Get linkTypeId
   * @return linkTypeId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LINK_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLinkTypeId() {
    return linkTypeId;
  }


  @JsonProperty(JSON_PROPERTY_LINK_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkTypeId(@jakarta.annotation.Nullable String linkTypeId) {
    this.linkTypeId = linkTypeId;
  }

  /**
   * Return true if this LinkContactsRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkContactsRequest linkContactsRequest = (LinkContactsRequest) o;
    return Objects.equals(this.contact1Id, linkContactsRequest.contact1Id) &&
        Objects.equals(this.contact2Id, linkContactsRequest.contact2Id) &&
        Objects.equals(this.linkTypeId, linkContactsRequest.linkTypeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contact1Id, contact2Id, linkTypeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkContactsRequest {\n");
    sb.append("    contact1Id: ").append(toIndentedString(contact1Id)).append("\n");
    sb.append("    contact2Id: ").append(toIndentedString(contact2Id)).append("\n");
    sb.append("    linkTypeId: ").append(toIndentedString(linkTypeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private LinkContactsRequest instance;
    
        public Builder() {
          this(new LinkContactsRequest());
        }
    
        protected Builder(LinkContactsRequest instance) {
          this.instance = instance;
        }
    
        public LinkContactsRequest.Builder contact1Id(String contact1Id) {
              this.instance.contact1Id = contact1Id;
          return this;
        }
            public LinkContactsRequest.Builder contact2Id(String contact2Id) {
              this.instance.contact2Id = contact2Id;
          return this;
        }
            public LinkContactsRequest.Builder linkTypeId(String linkTypeId) {
              this.instance.linkTypeId = linkTypeId;
          return this;
        }
        
    
        /**
        * returns a built LinkContactsRequest instance.
        *
        * The builder is not reusable.
        */
        public LinkContactsRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static LinkContactsRequest.Builder builder() {
        return new LinkContactsRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public LinkContactsRequest.Builder toBuilder() {
        return new LinkContactsRequest.Builder()
          .contact1Id(getContact1Id())
          .contact2Id(getContact2Id())
          .linkTypeId(getLinkTypeId());
      }
}

