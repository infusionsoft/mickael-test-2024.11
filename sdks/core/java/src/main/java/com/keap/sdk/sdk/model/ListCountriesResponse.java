/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.770650
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.sdk.model.Country;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * ListCountriesResponse
 */
@JsonPropertyOrder({
  ListCountriesResponse.JSON_PROPERTY_COUNTRIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class ListCountriesResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_COUNTRIES = "countries";
  @jakarta.annotation.Nonnull  private List<@Valid Country> countries = new ArrayList<>();

  public ListCountriesResponse() { 
  }

  public ListCountriesResponse countries(@jakarta.annotation.Nonnull List<@Valid Country> countries) {
    this.countries = countries;
    return this;
  }

  public ListCountriesResponse addCountriesItem(Country countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<>();
    }
    this.countries.add(countriesItem);
    return this;
  }

  /**
   * A key-value pair of country code and country name.
   * @return countries
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "A key-value pair of country code and country name.")
  @JsonProperty(JSON_PROPERTY_COUNTRIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<@Valid Country> getCountries() {
    return countries;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountries(@jakarta.annotation.Nonnull List<@Valid Country> countries) {
    this.countries = countries;
  }

  /**
   * Return true if this ListCountriesResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCountriesResponse listCountriesResponse = (ListCountriesResponse) o;
    return Objects.equals(this.countries, listCountriesResponse.countries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCountriesResponse {\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private ListCountriesResponse instance;
    
        public Builder() {
          this(new ListCountriesResponse());
        }
    
        protected Builder(ListCountriesResponse instance) {
          this.instance = instance;
        }
    
        public ListCountriesResponse.Builder countries(List<@Valid Country> countries) {
              this.instance.countries = countries;
          return this;
        }
        
    
        /**
        * returns a built ListCountriesResponse instance.
        *
        * The builder is not reusable.
        */
        public ListCountriesResponse build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static ListCountriesResponse.Builder builder() {
        return new ListCountriesResponse.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public ListCountriesResponse.Builder toBuilder() {
        return new ListCountriesResponse.Builder()
          .countries(getCountries());
      }
}

