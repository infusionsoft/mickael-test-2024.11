/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.772697-hf-202501311118
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.sdk.model.RestProductOption;
import com.keap.sdk.sdk.model.RestSubscriptionPlan;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * OrderItemProduct
 */
@JsonPropertyOrder({
  OrderItemProduct.JSON_PROPERTY_CREATED_TIME,
  OrderItemProduct.JSON_PROPERTY_DESCRIPTION,
  OrderItemProduct.JSON_PROPERTY_ID,
  OrderItemProduct.JSON_PROPERTY_LAST_UPDATED_TIME,
  OrderItemProduct.JSON_PROPERTY_NAME,
  OrderItemProduct.JSON_PROPERTY_PRODUCT_OPTIONS,
  OrderItemProduct.JSON_PROPERTY_PRODUCT_PRICE,
  OrderItemProduct.JSON_PROPERTY_PRODUCT_SHORT_DESCRIPTION,
  OrderItemProduct.JSON_PROPERTY_SHIPPABLE,
  OrderItemProduct.JSON_PROPERTY_SKU,
  OrderItemProduct.JSON_PROPERTY_STATUS,
  OrderItemProduct.JSON_PROPERTY_SUBSCRIPTION_ONLY,
  OrderItemProduct.JSON_PROPERTY_SUBSCRIPTION_PLANS,
  OrderItemProduct.JSON_PROPERTY_TAXABLE,
  OrderItemProduct.JSON_PROPERTY_URL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class OrderItemProduct implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CREATED_TIME = "created_time";
  @jakarta.annotation.Nullable  private String createdTime;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable  private String description;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_LAST_UPDATED_TIME = "last_updated_time";
  @jakarta.annotation.Nullable  private String lastUpdatedTime;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_PRODUCT_OPTIONS = "product_options";
  @jakarta.annotation.Nullable  private List<@Valid RestProductOption> productOptions = new ArrayList<>();

  public static final String JSON_PROPERTY_PRODUCT_PRICE = "product_price";
  @jakarta.annotation.Nullable  private Double productPrice;

  public static final String JSON_PROPERTY_PRODUCT_SHORT_DESCRIPTION = "product_short_description";
  @jakarta.annotation.Nullable  private String productShortDescription;

  public static final String JSON_PROPERTY_SHIPPABLE = "shippable";
  @jakarta.annotation.Nullable  private Boolean shippable;

  public static final String JSON_PROPERTY_SKU = "sku";
  @jakarta.annotation.Nullable  private String sku;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    INACTIVE(String.valueOf("INACTIVE")),
    
    ACTIVE(String.valueOf("ACTIVE")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nullable  private StatusEnum status;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ONLY = "subscription_only";
  @jakarta.annotation.Nullable  private Boolean subscriptionOnly;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PLANS = "subscription_plans";
  @jakarta.annotation.Nullable  private List<@Valid RestSubscriptionPlan> subscriptionPlans = new ArrayList<>();

  public static final String JSON_PROPERTY_TAXABLE = "taxable";
  @jakarta.annotation.Nullable  private Boolean taxable;

  public static final String JSON_PROPERTY_URL = "url";
  @jakarta.annotation.Nullable  private String url;

  public OrderItemProduct() { 
  }

  public OrderItemProduct createdTime(@jakarta.annotation.Nullable String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCreatedTime() {
    return createdTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedTime(@jakarta.annotation.Nullable String createdTime) {
    this.createdTime = createdTime;
  }


  public OrderItemProduct description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public OrderItemProduct id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public OrderItemProduct lastUpdatedTime(@jakarta.annotation.Nullable String lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
    return this;
  }

  /**
   * Get lastUpdatedTime
   * @return lastUpdatedTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLastUpdatedTime() {
    return lastUpdatedTime;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdatedTime(@jakarta.annotation.Nullable String lastUpdatedTime) {
    this.lastUpdatedTime = lastUpdatedTime;
  }


  public OrderItemProduct name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public OrderItemProduct productOptions(@jakarta.annotation.Nullable List<@Valid RestProductOption> productOptions) {
    this.productOptions = productOptions;
    return this;
  }

  public OrderItemProduct addProductOptionsItem(RestProductOption productOptionsItem) {
    if (this.productOptions == null) {
      this.productOptions = new ArrayList<>();
    }
    this.productOptions.add(productOptionsItem);
    return this;
  }

  /**
   * Get productOptions
   * @return productOptions
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid RestProductOption> getProductOptions() {
    return productOptions;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductOptions(@jakarta.annotation.Nullable List<@Valid RestProductOption> productOptions) {
    this.productOptions = productOptions;
  }


  public OrderItemProduct productPrice(@jakarta.annotation.Nullable Double productPrice) {
    this.productPrice = productPrice;
    return this;
  }

  /**
   * Get productPrice
   * @return productPrice
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getProductPrice() {
    return productPrice;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductPrice(@jakarta.annotation.Nullable Double productPrice) {
    this.productPrice = productPrice;
  }


  public OrderItemProduct productShortDescription(@jakarta.annotation.Nullable String productShortDescription) {
    this.productShortDescription = productShortDescription;
    return this;
  }

  /**
   * Get productShortDescription
   * @return productShortDescription
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getProductShortDescription() {
    return productShortDescription;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_SHORT_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductShortDescription(@jakarta.annotation.Nullable String productShortDescription) {
    this.productShortDescription = productShortDescription;
  }


  public OrderItemProduct shippable(@jakarta.annotation.Nullable Boolean shippable) {
    this.shippable = shippable;
    return this;
  }

  /**
   * Get shippable
   * @return shippable
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHIPPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getShippable() {
    return shippable;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippable(@jakarta.annotation.Nullable Boolean shippable) {
    this.shippable = shippable;
  }


  public OrderItemProduct sku(@jakarta.annotation.Nullable String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Get sku
   * @return sku
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSku() {
    return sku;
  }


  @JsonProperty(JSON_PROPERTY_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSku(@jakarta.annotation.Nullable String sku) {
    this.sku = sku;
  }


  public OrderItemProduct status(@jakarta.annotation.Nullable StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@jakarta.annotation.Nullable StatusEnum status) {
    this.status = status;
  }


  public OrderItemProduct subscriptionOnly(@jakarta.annotation.Nullable Boolean subscriptionOnly) {
    this.subscriptionOnly = subscriptionOnly;
    return this;
  }

  /**
   * Get subscriptionOnly
   * @return subscriptionOnly
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getSubscriptionOnly() {
    return subscriptionOnly;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionOnly(@jakarta.annotation.Nullable Boolean subscriptionOnly) {
    this.subscriptionOnly = subscriptionOnly;
  }


  public OrderItemProduct subscriptionPlans(@jakarta.annotation.Nullable List<@Valid RestSubscriptionPlan> subscriptionPlans) {
    this.subscriptionPlans = subscriptionPlans;
    return this;
  }

  public OrderItemProduct addSubscriptionPlansItem(RestSubscriptionPlan subscriptionPlansItem) {
    if (this.subscriptionPlans == null) {
      this.subscriptionPlans = new ArrayList<>();
    }
    this.subscriptionPlans.add(subscriptionPlansItem);
    return this;
  }

  /**
   * Get subscriptionPlans
   * @return subscriptionPlans
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid RestSubscriptionPlan> getSubscriptionPlans() {
    return subscriptionPlans;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPlans(@jakarta.annotation.Nullable List<@Valid RestSubscriptionPlan> subscriptionPlans) {
    this.subscriptionPlans = subscriptionPlans;
  }


  public OrderItemProduct taxable(@jakarta.annotation.Nullable Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

  /**
   * Get taxable
   * @return taxable
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getTaxable() {
    return taxable;
  }


  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxable(@jakarta.annotation.Nullable Boolean taxable) {
    this.taxable = taxable;
  }


  public OrderItemProduct url(@jakarta.annotation.Nullable String url) {
    this.url = url;
    return this;
  }

  /**
   * The url is the permalink to the resource
   * @return url
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The url is the permalink to the resource")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(@jakarta.annotation.Nullable String url) {
    this.url = url;
  }

  /**
   * Return true if this OrderItemProduct object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItemProduct orderItemProduct = (OrderItemProduct) o;
    return Objects.equals(this.createdTime, orderItemProduct.createdTime) &&
        Objects.equals(this.description, orderItemProduct.description) &&
        Objects.equals(this.id, orderItemProduct.id) &&
        Objects.equals(this.lastUpdatedTime, orderItemProduct.lastUpdatedTime) &&
        Objects.equals(this.name, orderItemProduct.name) &&
        Objects.equals(this.productOptions, orderItemProduct.productOptions) &&
        Objects.equals(this.productPrice, orderItemProduct.productPrice) &&
        Objects.equals(this.productShortDescription, orderItemProduct.productShortDescription) &&
        Objects.equals(this.shippable, orderItemProduct.shippable) &&
        Objects.equals(this.sku, orderItemProduct.sku) &&
        Objects.equals(this.status, orderItemProduct.status) &&
        Objects.equals(this.subscriptionOnly, orderItemProduct.subscriptionOnly) &&
        Objects.equals(this.subscriptionPlans, orderItemProduct.subscriptionPlans) &&
        Objects.equals(this.taxable, orderItemProduct.taxable) &&
        Objects.equals(this.url, orderItemProduct.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, description, id, lastUpdatedTime, name, productOptions, productPrice, productShortDescription, shippable, sku, status, subscriptionOnly, subscriptionPlans, taxable, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItemProduct {\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productOptions: ").append(toIndentedString(productOptions)).append("\n");
    sb.append("    productPrice: ").append(toIndentedString(productPrice)).append("\n");
    sb.append("    productShortDescription: ").append(toIndentedString(productShortDescription)).append("\n");
    sb.append("    shippable: ").append(toIndentedString(shippable)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriptionOnly: ").append(toIndentedString(subscriptionOnly)).append("\n");
    sb.append("    subscriptionPlans: ").append(toIndentedString(subscriptionPlans)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private OrderItemProduct instance;
    
        public Builder() {
          this(new OrderItemProduct());
        }
    
        protected Builder(OrderItemProduct instance) {
          this.instance = instance;
        }
    
        public OrderItemProduct.Builder createdTime(String createdTime) {
              this.instance.createdTime = createdTime;
          return this;
        }
            public OrderItemProduct.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public OrderItemProduct.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public OrderItemProduct.Builder lastUpdatedTime(String lastUpdatedTime) {
              this.instance.lastUpdatedTime = lastUpdatedTime;
          return this;
        }
            public OrderItemProduct.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public OrderItemProduct.Builder productOptions(List<@Valid RestProductOption> productOptions) {
              this.instance.productOptions = productOptions;
          return this;
        }
            public OrderItemProduct.Builder productPrice(Double productPrice) {
              this.instance.productPrice = productPrice;
          return this;
        }
            public OrderItemProduct.Builder productShortDescription(String productShortDescription) {
              this.instance.productShortDescription = productShortDescription;
          return this;
        }
            public OrderItemProduct.Builder shippable(Boolean shippable) {
              this.instance.shippable = shippable;
          return this;
        }
            public OrderItemProduct.Builder sku(String sku) {
              this.instance.sku = sku;
          return this;
        }
            public OrderItemProduct.Builder status(StatusEnum status) {
              this.instance.status = status;
          return this;
        }
            public OrderItemProduct.Builder subscriptionOnly(Boolean subscriptionOnly) {
              this.instance.subscriptionOnly = subscriptionOnly;
          return this;
        }
            public OrderItemProduct.Builder subscriptionPlans(List<@Valid RestSubscriptionPlan> subscriptionPlans) {
              this.instance.subscriptionPlans = subscriptionPlans;
          return this;
        }
            public OrderItemProduct.Builder taxable(Boolean taxable) {
              this.instance.taxable = taxable;
          return this;
        }
            public OrderItemProduct.Builder url(String url) {
              this.instance.url = url;
          return this;
        }
        
    
        /**
        * returns a built OrderItemProduct instance.
        *
        * The builder is not reusable.
        */
        public OrderItemProduct build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static OrderItemProduct.Builder builder() {
        return new OrderItemProduct.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public OrderItemProduct.Builder toBuilder() {
        return new OrderItemProduct.Builder()
          .createdTime(getCreatedTime())
          .description(getDescription())
          .id(getId())
          .lastUpdatedTime(getLastUpdatedTime())
          .name(getName())
          .productOptions(getProductOptions())
          .productPrice(getProductPrice())
          .productShortDescription(getProductShortDescription())
          .shippable(getShippable())
          .sku(getSku())
          .status(getStatus())
          .subscriptionOnly(getSubscriptionOnly())
          .subscriptionPlans(getSubscriptionPlans())
          .taxable(getTaxable())
          .url(getUrl());
      }
}

