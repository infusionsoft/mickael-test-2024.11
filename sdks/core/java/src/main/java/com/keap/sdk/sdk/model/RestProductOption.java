/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.764128
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.sdk.sdk.model.RestProductOptionValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * RestProductOption
 */
@JsonPropertyOrder({
  RestProductOption.JSON_PROPERTY_ALLOW_SPACES,
  RestProductOption.JSON_PROPERTY_CAN_CONTAIN_CHARACTER,
  RestProductOption.JSON_PROPERTY_CAN_CONTAIN_NUMBER,
  RestProductOption.JSON_PROPERTY_CAN_END_WITH_CHARACTER,
  RestProductOption.JSON_PROPERTY_CAN_END_WITH_NUMBER,
  RestProductOption.JSON_PROPERTY_CAN_START_WITH_CHARACTER,
  RestProductOption.JSON_PROPERTY_CAN_START_WITH_NUMBER,
  RestProductOption.JSON_PROPERTY_DISPLAY_INDEX,
  RestProductOption.JSON_PROPERTY_ID,
  RestProductOption.JSON_PROPERTY_LABEL,
  RestProductOption.JSON_PROPERTY_MAX_CHARS,
  RestProductOption.JSON_PROPERTY_MIN_CHARS,
  RestProductOption.JSON_PROPERTY_NAME,
  RestProductOption.JSON_PROPERTY_REQUIRED,
  RestProductOption.JSON_PROPERTY_TEXT_MESSAGE,
  RestProductOption.JSON_PROPERTY_TYPE,
  RestProductOption.JSON_PROPERTY_VALUES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class RestProductOption implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ALLOW_SPACES = "allow_spaces";
  @jakarta.annotation.Nullable  private Boolean allowSpaces;

  public static final String JSON_PROPERTY_CAN_CONTAIN_CHARACTER = "can_contain_character";
  @jakarta.annotation.Nullable  private Boolean canContainCharacter;

  public static final String JSON_PROPERTY_CAN_CONTAIN_NUMBER = "can_contain_number";
  @jakarta.annotation.Nullable  private Boolean canContainNumber;

  public static final String JSON_PROPERTY_CAN_END_WITH_CHARACTER = "can_end_with_character";
  @jakarta.annotation.Nullable  private Boolean canEndWithCharacter;

  public static final String JSON_PROPERTY_CAN_END_WITH_NUMBER = "can_end_with_number";
  @jakarta.annotation.Nullable  private Boolean canEndWithNumber;

  public static final String JSON_PROPERTY_CAN_START_WITH_CHARACTER = "can_start_with_character";
  @jakarta.annotation.Nullable  private Boolean canStartWithCharacter;

  public static final String JSON_PROPERTY_CAN_START_WITH_NUMBER = "can_start_with_number";
  @jakarta.annotation.Nullable  private Boolean canStartWithNumber;

  public static final String JSON_PROPERTY_DISPLAY_INDEX = "display_index";
  @jakarta.annotation.Nullable  private Integer displayIndex;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_LABEL = "label";
  @jakarta.annotation.Nullable  private String label;

  public static final String JSON_PROPERTY_MAX_CHARS = "max_chars";
  @jakarta.annotation.Nullable  private Integer maxChars;

  public static final String JSON_PROPERTY_MIN_CHARS = "min_chars";
  @jakarta.annotation.Nullable  private Integer minChars;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_REQUIRED = "required";
  @jakarta.annotation.Nullable  private Boolean required;

  public static final String JSON_PROPERTY_TEXT_MESSAGE = "text_message";
  @jakarta.annotation.Nullable  private String textMessage;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    FIXED(String.valueOf("FIXED")),
    
    VARIABLE(String.valueOf("VARIABLE")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nullable  private TypeEnum type;

  public static final String JSON_PROPERTY_VALUES = "values";
  @jakarta.annotation.Nullable  private List<@Valid RestProductOptionValue> values = new ArrayList<>();

  public RestProductOption() { 
  }

  public RestProductOption allowSpaces(@jakarta.annotation.Nullable Boolean allowSpaces) {
    this.allowSpaces = allowSpaces;
    return this;
  }

  /**
   * Get allowSpaces
   * @return allowSpaces
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ALLOW_SPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAllowSpaces() {
    return allowSpaces;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_SPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowSpaces(@jakarta.annotation.Nullable Boolean allowSpaces) {
    this.allowSpaces = allowSpaces;
  }


  public RestProductOption canContainCharacter(@jakarta.annotation.Nullable Boolean canContainCharacter) {
    this.canContainCharacter = canContainCharacter;
    return this;
  }

  /**
   * Get canContainCharacter
   * @return canContainCharacter
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CAN_CONTAIN_CHARACTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanContainCharacter() {
    return canContainCharacter;
  }


  @JsonProperty(JSON_PROPERTY_CAN_CONTAIN_CHARACTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanContainCharacter(@jakarta.annotation.Nullable Boolean canContainCharacter) {
    this.canContainCharacter = canContainCharacter;
  }


  public RestProductOption canContainNumber(@jakarta.annotation.Nullable Boolean canContainNumber) {
    this.canContainNumber = canContainNumber;
    return this;
  }

  /**
   * Get canContainNumber
   * @return canContainNumber
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CAN_CONTAIN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanContainNumber() {
    return canContainNumber;
  }


  @JsonProperty(JSON_PROPERTY_CAN_CONTAIN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanContainNumber(@jakarta.annotation.Nullable Boolean canContainNumber) {
    this.canContainNumber = canContainNumber;
  }


  public RestProductOption canEndWithCharacter(@jakarta.annotation.Nullable Boolean canEndWithCharacter) {
    this.canEndWithCharacter = canEndWithCharacter;
    return this;
  }

  /**
   * Get canEndWithCharacter
   * @return canEndWithCharacter
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CAN_END_WITH_CHARACTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanEndWithCharacter() {
    return canEndWithCharacter;
  }


  @JsonProperty(JSON_PROPERTY_CAN_END_WITH_CHARACTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanEndWithCharacter(@jakarta.annotation.Nullable Boolean canEndWithCharacter) {
    this.canEndWithCharacter = canEndWithCharacter;
  }


  public RestProductOption canEndWithNumber(@jakarta.annotation.Nullable Boolean canEndWithNumber) {
    this.canEndWithNumber = canEndWithNumber;
    return this;
  }

  /**
   * Get canEndWithNumber
   * @return canEndWithNumber
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CAN_END_WITH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanEndWithNumber() {
    return canEndWithNumber;
  }


  @JsonProperty(JSON_PROPERTY_CAN_END_WITH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanEndWithNumber(@jakarta.annotation.Nullable Boolean canEndWithNumber) {
    this.canEndWithNumber = canEndWithNumber;
  }


  public RestProductOption canStartWithCharacter(@jakarta.annotation.Nullable Boolean canStartWithCharacter) {
    this.canStartWithCharacter = canStartWithCharacter;
    return this;
  }

  /**
   * Get canStartWithCharacter
   * @return canStartWithCharacter
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CAN_START_WITH_CHARACTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanStartWithCharacter() {
    return canStartWithCharacter;
  }


  @JsonProperty(JSON_PROPERTY_CAN_START_WITH_CHARACTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanStartWithCharacter(@jakarta.annotation.Nullable Boolean canStartWithCharacter) {
    this.canStartWithCharacter = canStartWithCharacter;
  }


  public RestProductOption canStartWithNumber(@jakarta.annotation.Nullable Boolean canStartWithNumber) {
    this.canStartWithNumber = canStartWithNumber;
    return this;
  }

  /**
   * Get canStartWithNumber
   * @return canStartWithNumber
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CAN_START_WITH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getCanStartWithNumber() {
    return canStartWithNumber;
  }


  @JsonProperty(JSON_PROPERTY_CAN_START_WITH_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCanStartWithNumber(@jakarta.annotation.Nullable Boolean canStartWithNumber) {
    this.canStartWithNumber = canStartWithNumber;
  }


  public RestProductOption displayIndex(@jakarta.annotation.Nullable Integer displayIndex) {
    this.displayIndex = displayIndex;
    return this;
  }

  /**
   * Get displayIndex
   * @return displayIndex
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DISPLAY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getDisplayIndex() {
    return displayIndex;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayIndex(@jakarta.annotation.Nullable Integer displayIndex) {
    this.displayIndex = displayIndex;
  }


  public RestProductOption id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public RestProductOption label(@jakarta.annotation.Nullable String label) {
    this.label = label;
    return this;
  }

  /**
   * Get label
   * @return label
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@jakarta.annotation.Nullable String label) {
    this.label = label;
  }


  public RestProductOption maxChars(@jakarta.annotation.Nullable Integer maxChars) {
    this.maxChars = maxChars;
    return this;
  }

  /**
   * Get maxChars
   * @return maxChars
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MAX_CHARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMaxChars() {
    return maxChars;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CHARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxChars(@jakarta.annotation.Nullable Integer maxChars) {
    this.maxChars = maxChars;
  }


  public RestProductOption minChars(@jakarta.annotation.Nullable Integer minChars) {
    this.minChars = minChars;
    return this;
  }

  /**
   * Get minChars
   * @return minChars
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MIN_CHARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMinChars() {
    return minChars;
  }


  @JsonProperty(JSON_PROPERTY_MIN_CHARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinChars(@jakarta.annotation.Nullable Integer minChars) {
    this.minChars = minChars;
  }


  public RestProductOption name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public RestProductOption required(@jakarta.annotation.Nullable Boolean required) {
    this.required = required;
    return this;
  }

  /**
   * Get required
   * @return required
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getRequired() {
    return required;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequired(@jakarta.annotation.Nullable Boolean required) {
    this.required = required;
  }


  public RestProductOption textMessage(@jakarta.annotation.Nullable String textMessage) {
    this.textMessage = textMessage;
    return this;
  }

  /**
   * Get textMessage
   * @return textMessage
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TEXT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTextMessage() {
    return textMessage;
  }


  @JsonProperty(JSON_PROPERTY_TEXT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextMessage(@jakarta.annotation.Nullable String textMessage) {
    this.textMessage = textMessage;
  }


  public RestProductOption type(@jakarta.annotation.Nullable TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@jakarta.annotation.Nullable TypeEnum type) {
    this.type = type;
  }


  public RestProductOption values(@jakarta.annotation.Nullable List<@Valid RestProductOptionValue> values) {
    this.values = values;
    return this;
  }

  public RestProductOption addValuesItem(RestProductOptionValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

  /**
   * Get values
   * @return values
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid RestProductOptionValue> getValues() {
    return values;
  }


  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValues(@jakarta.annotation.Nullable List<@Valid RestProductOptionValue> values) {
    this.values = values;
  }

  /**
   * Return true if this RestProductOption object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestProductOption restProductOption = (RestProductOption) o;
    return Objects.equals(this.allowSpaces, restProductOption.allowSpaces) &&
        Objects.equals(this.canContainCharacter, restProductOption.canContainCharacter) &&
        Objects.equals(this.canContainNumber, restProductOption.canContainNumber) &&
        Objects.equals(this.canEndWithCharacter, restProductOption.canEndWithCharacter) &&
        Objects.equals(this.canEndWithNumber, restProductOption.canEndWithNumber) &&
        Objects.equals(this.canStartWithCharacter, restProductOption.canStartWithCharacter) &&
        Objects.equals(this.canStartWithNumber, restProductOption.canStartWithNumber) &&
        Objects.equals(this.displayIndex, restProductOption.displayIndex) &&
        Objects.equals(this.id, restProductOption.id) &&
        Objects.equals(this.label, restProductOption.label) &&
        Objects.equals(this.maxChars, restProductOption.maxChars) &&
        Objects.equals(this.minChars, restProductOption.minChars) &&
        Objects.equals(this.name, restProductOption.name) &&
        Objects.equals(this.required, restProductOption.required) &&
        Objects.equals(this.textMessage, restProductOption.textMessage) &&
        Objects.equals(this.type, restProductOption.type) &&
        Objects.equals(this.values, restProductOption.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowSpaces, canContainCharacter, canContainNumber, canEndWithCharacter, canEndWithNumber, canStartWithCharacter, canStartWithNumber, displayIndex, id, label, maxChars, minChars, name, required, textMessage, type, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestProductOption {\n");
    sb.append("    allowSpaces: ").append(toIndentedString(allowSpaces)).append("\n");
    sb.append("    canContainCharacter: ").append(toIndentedString(canContainCharacter)).append("\n");
    sb.append("    canContainNumber: ").append(toIndentedString(canContainNumber)).append("\n");
    sb.append("    canEndWithCharacter: ").append(toIndentedString(canEndWithCharacter)).append("\n");
    sb.append("    canEndWithNumber: ").append(toIndentedString(canEndWithNumber)).append("\n");
    sb.append("    canStartWithCharacter: ").append(toIndentedString(canStartWithCharacter)).append("\n");
    sb.append("    canStartWithNumber: ").append(toIndentedString(canStartWithNumber)).append("\n");
    sb.append("    displayIndex: ").append(toIndentedString(displayIndex)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    maxChars: ").append(toIndentedString(maxChars)).append("\n");
    sb.append("    minChars: ").append(toIndentedString(minChars)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    textMessage: ").append(toIndentedString(textMessage)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private RestProductOption instance;
    
        public Builder() {
          this(new RestProductOption());
        }
    
        protected Builder(RestProductOption instance) {
          this.instance = instance;
        }
    
        public RestProductOption.Builder allowSpaces(Boolean allowSpaces) {
              this.instance.allowSpaces = allowSpaces;
          return this;
        }
            public RestProductOption.Builder canContainCharacter(Boolean canContainCharacter) {
              this.instance.canContainCharacter = canContainCharacter;
          return this;
        }
            public RestProductOption.Builder canContainNumber(Boolean canContainNumber) {
              this.instance.canContainNumber = canContainNumber;
          return this;
        }
            public RestProductOption.Builder canEndWithCharacter(Boolean canEndWithCharacter) {
              this.instance.canEndWithCharacter = canEndWithCharacter;
          return this;
        }
            public RestProductOption.Builder canEndWithNumber(Boolean canEndWithNumber) {
              this.instance.canEndWithNumber = canEndWithNumber;
          return this;
        }
            public RestProductOption.Builder canStartWithCharacter(Boolean canStartWithCharacter) {
              this.instance.canStartWithCharacter = canStartWithCharacter;
          return this;
        }
            public RestProductOption.Builder canStartWithNumber(Boolean canStartWithNumber) {
              this.instance.canStartWithNumber = canStartWithNumber;
          return this;
        }
            public RestProductOption.Builder displayIndex(Integer displayIndex) {
              this.instance.displayIndex = displayIndex;
          return this;
        }
            public RestProductOption.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public RestProductOption.Builder label(String label) {
              this.instance.label = label;
          return this;
        }
            public RestProductOption.Builder maxChars(Integer maxChars) {
              this.instance.maxChars = maxChars;
          return this;
        }
            public RestProductOption.Builder minChars(Integer minChars) {
              this.instance.minChars = minChars;
          return this;
        }
            public RestProductOption.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public RestProductOption.Builder required(Boolean required) {
              this.instance.required = required;
          return this;
        }
            public RestProductOption.Builder textMessage(String textMessage) {
              this.instance.textMessage = textMessage;
          return this;
        }
            public RestProductOption.Builder type(TypeEnum type) {
              this.instance.type = type;
          return this;
        }
            public RestProductOption.Builder values(List<@Valid RestProductOptionValue> values) {
              this.instance.values = values;
          return this;
        }
        
    
        /**
        * returns a built RestProductOption instance.
        *
        * The builder is not reusable.
        */
        public RestProductOption build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static RestProductOption.Builder builder() {
        return new RestProductOption.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public RestProductOption.Builder toBuilder() {
        return new RestProductOption.Builder()
          .allowSpaces(getAllowSpaces())
          .canContainCharacter(getCanContainCharacter())
          .canContainNumber(getCanContainNumber())
          .canEndWithCharacter(getCanEndWithCharacter())
          .canEndWithNumber(getCanEndWithNumber())
          .canStartWithCharacter(getCanStartWithCharacter())
          .canStartWithNumber(getCanStartWithNumber())
          .displayIndex(getDisplayIndex())
          .id(getId())
          .label(getLabel())
          .maxChars(getMaxChars())
          .minChars(getMinChars())
          .name(getName())
          .required(getRequired())
          .textMessage(getTextMessage())
          .type(getType())
          .values(getValues());
      }
}

