/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.764128
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.sdk.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * RestSubscriptionPlan
 */
@JsonPropertyOrder({
  RestSubscriptionPlan.JSON_PROPERTY_ACTIVE,
  RestSubscriptionPlan.JSON_PROPERTY_CYCLE,
  RestSubscriptionPlan.JSON_PROPERTY_FREQUENCY,
  RestSubscriptionPlan.JSON_PROPERTY_ID,
  RestSubscriptionPlan.JSON_PROPERTY_PRODUCT_ID,
  RestSubscriptionPlan.JSON_PROPERTY_SUBSCRIPTION_PLAN_INDEX,
  RestSubscriptionPlan.JSON_PROPERTY_SUBSCRIPTION_PLAN_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class RestSubscriptionPlan implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  @jakarta.annotation.Nullable  private Boolean active;

  public static final String JSON_PROPERTY_CYCLE = "cycle";
  @jakarta.annotation.Nullable  private String cycle;

  public static final String JSON_PROPERTY_FREQUENCY = "frequency";
  @jakarta.annotation.Nullable  private Integer frequency;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_PRODUCT_ID = "product_id";
  @jakarta.annotation.Nullable  private String productId;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PLAN_INDEX = "subscription_plan_index";
  @jakarta.annotation.Nullable  private Integer subscriptionPlanIndex;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PLAN_NAME = "subscription_plan_name";
  @jakarta.annotation.Nullable  private String subscriptionPlanName;

  public RestSubscriptionPlan() { 
  }

  public RestSubscriptionPlan active(@jakarta.annotation.Nullable Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(@jakarta.annotation.Nullable Boolean active) {
    this.active = active;
  }


  public RestSubscriptionPlan cycle(@jakarta.annotation.Nullable String cycle) {
    this.cycle = cycle;
    return this;
  }

  /**
   * Get cycle
   * @return cycle
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCycle() {
    return cycle;
  }


  @JsonProperty(JSON_PROPERTY_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCycle(@jakarta.annotation.Nullable String cycle) {
    this.cycle = cycle;
  }


  public RestSubscriptionPlan frequency(@jakarta.annotation.Nullable Integer frequency) {
    this.frequency = frequency;
    return this;
  }

  /**
   * Get frequency
   * @return frequency
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getFrequency() {
    return frequency;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequency(@jakarta.annotation.Nullable Integer frequency) {
    this.frequency = frequency;
  }


  public RestSubscriptionPlan id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public RestSubscriptionPlan productId(@jakarta.annotation.Nullable String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductId(@jakarta.annotation.Nullable String productId) {
    this.productId = productId;
  }


  public RestSubscriptionPlan subscriptionPlanIndex(@jakarta.annotation.Nullable Integer subscriptionPlanIndex) {
    this.subscriptionPlanIndex = subscriptionPlanIndex;
    return this;
  }

  /**
   * Get subscriptionPlanIndex
   * @return subscriptionPlanIndex
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getSubscriptionPlanIndex() {
    return subscriptionPlanIndex;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPlanIndex(@jakarta.annotation.Nullable Integer subscriptionPlanIndex) {
    this.subscriptionPlanIndex = subscriptionPlanIndex;
  }


  public RestSubscriptionPlan subscriptionPlanName(@jakarta.annotation.Nullable String subscriptionPlanName) {
    this.subscriptionPlanName = subscriptionPlanName;
    return this;
  }

  /**
   * Get subscriptionPlanName
   * @return subscriptionPlanName
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSubscriptionPlanName() {
    return subscriptionPlanName;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPlanName(@jakarta.annotation.Nullable String subscriptionPlanName) {
    this.subscriptionPlanName = subscriptionPlanName;
  }

  /**
   * Return true if this RestSubscriptionPlan object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestSubscriptionPlan restSubscriptionPlan = (RestSubscriptionPlan) o;
    return Objects.equals(this.active, restSubscriptionPlan.active) &&
        Objects.equals(this.cycle, restSubscriptionPlan.cycle) &&
        Objects.equals(this.frequency, restSubscriptionPlan.frequency) &&
        Objects.equals(this.id, restSubscriptionPlan.id) &&
        Objects.equals(this.productId, restSubscriptionPlan.productId) &&
        Objects.equals(this.subscriptionPlanIndex, restSubscriptionPlan.subscriptionPlanIndex) &&
        Objects.equals(this.subscriptionPlanName, restSubscriptionPlan.subscriptionPlanName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, cycle, frequency, id, productId, subscriptionPlanIndex, subscriptionPlanName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestSubscriptionPlan {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    cycle: ").append(toIndentedString(cycle)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    subscriptionPlanIndex: ").append(toIndentedString(subscriptionPlanIndex)).append("\n");
    sb.append("    subscriptionPlanName: ").append(toIndentedString(subscriptionPlanName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private RestSubscriptionPlan instance;
    
        public Builder() {
          this(new RestSubscriptionPlan());
        }
    
        protected Builder(RestSubscriptionPlan instance) {
          this.instance = instance;
        }
    
        public RestSubscriptionPlan.Builder active(Boolean active) {
              this.instance.active = active;
          return this;
        }
            public RestSubscriptionPlan.Builder cycle(String cycle) {
              this.instance.cycle = cycle;
          return this;
        }
            public RestSubscriptionPlan.Builder frequency(Integer frequency) {
              this.instance.frequency = frequency;
          return this;
        }
            public RestSubscriptionPlan.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public RestSubscriptionPlan.Builder productId(String productId) {
              this.instance.productId = productId;
          return this;
        }
            public RestSubscriptionPlan.Builder subscriptionPlanIndex(Integer subscriptionPlanIndex) {
              this.instance.subscriptionPlanIndex = subscriptionPlanIndex;
          return this;
        }
            public RestSubscriptionPlan.Builder subscriptionPlanName(String subscriptionPlanName) {
              this.instance.subscriptionPlanName = subscriptionPlanName;
          return this;
        }
        
    
        /**
        * returns a built RestSubscriptionPlan instance.
        *
        * The builder is not reusable.
        */
        public RestSubscriptionPlan build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static RestSubscriptionPlan.Builder builder() {
        return new RestSubscriptionPlan.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public RestSubscriptionPlan.Builder toBuilder() {
        return new RestSubscriptionPlan.Builder()
          .active(getActive())
          .cycle(getCycle())
          .frequency(getFrequency())
          .id(getId())
          .productId(getProductId())
          .subscriptionPlanIndex(getSubscriptionPlanIndex())
          .subscriptionPlanName(getSubscriptionPlanName());
      }
}

