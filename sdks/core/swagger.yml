openapi: 3.0.0
info:
  description: Keap REST Core Service
  version: 2.70.0.768375
  title: Keap REST API
  termsOfService: https://keap.com/legal
  contact:
    name: Keap
    url: https://developer.keap.com/get-support/
    email: api@keap.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
tags:
- name: Affiliate
  description: Rest Affiliate Controller
- name: Automation
  description: Rest Automation Controller
- name: AutomationCategory
  description: Rest Automation Category Controller
- name: Business Profile
  description: Rest Business Profile Controller
- name: Campaign
  description: Rest Campaign Controller
- name: Category Discount
  description: Rest Category Discount Controller
- name: Company
  description: Rest Company Controller
- name: Contact
  description: Rest Contact Controller
- name: Email
  description: Rest Email Controller
- name: Email Address
  description: Rest Api Email Address Controller
- name: Files
  description: Rest File Controller
- name: Free Trial Discount
  description: Rest Free Trial Discount Controller
- name: FunnelIntegration
  description: Rest Funnel Integration Endpoint
- name: Landing Pages
  description: Rest Landing Page Controller
- name: Lead Source Categories
  description: Rest Lead Source Category Controller
- name: Lead Sources
  description: Rest Lead Source Controller
- name: LeadScore
  description: Rest Contact Lead Score Controller
- name: Locale
  description: Rest Locale Controller
- name: Merchant
  description: Rest Merchant Controller
- name: Note
  description: Rest Note Controller
- name: Opportunity
  description: Rest Opportunity Controller
- name: Order Total Discount
  description: Rest Order Total Discount Controller
- name: Orders
  description: Rest Order Controller
- name: Payment Methods
  description: Rest Payment Method Controller
- name: PaymentMethodConfig
  description: Rest Payment Method Config Controller
- name: Product
  description: Rest Product Controller
- name: Product Categories
  description: Rest Product Category Controller
- name: Product Discount
  description: Rest Product Discount Controller
- name: ProductInterestBundle
  description: Rest Product Interest Bundle Controller
- name: Referral
  description: Rest Referral Controller
- name: Reporting
  description: Rest Reporting Controller
- name: Sales
  description: Rest Sales Controller
- name: Settings
  description: Rest Setting Controller
- name: Shipping
  description: Rest Shipping Methods Controller
- name: Shipping Discount
  description: Rest Shipping Discount Controller
- name: Subscription Plans
  description: Rest Subscription Plan Controller
- name: Subscriptions
  description: Rest Subscriptions Controller
- name: Tags
  description: Rest Tag Controller
- name: Task
  description: Rest Task Controller
- name: Transactions
  description: Rest Transaction Controller
- name: Users
  description: Rest User Controller
paths:
  /v2/affiliates:
    post:
      tags:
      - Affiliate
      summary: Create an Affiliate
      description: Creates a single Affiliate
      operationId: addAffiliateUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAffiliateRequest'
        description: Affiliate request to insert
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAffiliate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/{commission_program_id}:
    patch:
      tags:
      - Affiliate
      summary: Update a Affiliate Commission Program
      description: Updates the properties of an Affiliate Commission Program
      operationId: updateCommissionProgramUsingPATCH
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - notes
          - priority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommissionProgramRequest'
        description: updateCommissionProgramRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateCommissionProgramResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/{id}:
    get:
      tags:
      - Affiliate
      summary: Retrieve an Affiliate
      description: Retrieves a single Affiliate
      operationId: getAffiliateUsingGET_1
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAffiliate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update an Affiliate
      description: Updates a single Affiliate
      operationId: updateAffiliateUsingPATCH
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAffiliateRequest'
        description: Request to update an affiliate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAffiliate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automationCategory:
    get:
      tags:
      - AutomationCategory
      summary: List automation categories
      description: Retrieves a list of automation categories
      operationId: listCategoriesUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationCategoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - AutomationCategory
      summary: Create automation category
      description: Creates a single automation category
      operationId: createCategoryUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomationCategoryRequest'
        description: createAutomationCategoryRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
      - AutomationCategory
      summary: Save automation category
      description: Creates or updates a single automation category
      operationId: saveCategoryUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAutomationCategoryRequest'
        description: saveAutomationCategoryRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - AutomationCategory
      summary: Delete automation category
      description: Deletes one or more automation categories based on the request
        parameters
      operationId: deleteCategoriesUsingDELETE
      parameters:
      - name: ids
        in: query
        description: ids
        required: true
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations:
    get:
      tags:
      - Automation
      summary: List Automations
      description: Retrieves a list of automations
      operationId: listAutomationsUsingGET
      parameters:
      - name: filter
        in: query
        description: "Filter to apply, allowed fields are:  \n- (String) name  \n\n\
          You will need to apply the `==` operator to check the equality of the filter\
          \ with your searched \ntext, in the encoded form `%3D%3D`. The search will\
          \ look for the text anywhere in the automation name. \n - `filter=name%3D%3DSpring\
          \ Automation` \n- `filter=name%3D%3DTag New Contacts` \n"
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: "Attribute and direction to order items.  \nOne of the following\
          \ fields:  \n- name  \n- category  \n- activeContacts  \n- publishedDate\
          \  \nOne of the following directions:  \n- asc  \n- desc"
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 25
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: stats
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Automation
      summary: Delete an Automation
      description: Deletes a single automation
      operationId: deleteAutomationUsingDELETE
      parameters:
      - name: automation_ids
        in: query
        description: automation_ids
        required: true
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/category:
    put:
      tags:
      - Automation
      summary: Update an Automation's Category
      description: Updates the category of one or more automations
      operationId: updateAutomationCategoryUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAutomationCategoryRequest'
        description: updateAutomationCategoryRequest
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/ids:
    get:
      tags:
      - Automation
      summary: List Automations Ids
      description: Retrieves a list of automations IDs
      operationId: listAllAutomationIdsUsingGET
      parameters:
      - name: filter
        in: query
        description: "Filter to apply, allowed fields are:  \n- (String) name  \n\n\
          You will need to apply the `==` operator to check the equality of the filter\
          \ with your searched \ntext, in the encoded form `%3D%3D`. The search will\
          \ look for the text anywhere in the automation name. \n - `filter=name%3D%3DSpring\
          \ Automation` \n- `filter=name%3D%3DTag New Contacts` \n"
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: "Attribute and direction to order items.  \nOne of the following\
          \ fields:  \n- name  \n- category  \n- activeContacts  \n- publishedDate\
          \  \nOne of the following directions:  \n- asc  \n- desc"
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 25
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: stats
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationIdsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/{automation_id}:
    get:
      tags:
      - Automation
      summary: Retrieve an Automation
      description: Retrieves a single automation
      operationId: getAutomationUsingGET
      parameters:
      - name: automation_id
        in: path
        description: automation_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/{automation_id}/sequences/{sequence_id}:addContacts:
    post:
      tags:
      - Automation
      summary: Add Contacts to an Automation Sequence
      description: |-
        Adds a list of contacts to an automation sequence
        Response contains a map of the provided list of Contact Ids and their individual result.
      operationId: addContactsToAutomationSequenceUsingPOST
      parameters:
      - name: automation_id
        in: path
        description: automation_id
        required: true
        schema:
          type: string
      - name: sequence_id
        in: path
        description: sequence_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToAutomationSequenceRequest'
        description: addToAutomationSequenceRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddToAutomationSequenceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/businessProfile:
    get:
      tags:
      - Business Profile
      summary: Retrieve Business Profile
      description: Retrieves Business Profile information.
      operationId: getBusinessProfileUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Business Profile
      summary: Update Business Profile
      description: Updates Business Profile information.
      operationId: updateBusinessProfileUsingPATCH
      parameters:
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - email
          - website
          - phone
          - address
          - currency_code
          - business_goals
          - business_primary_color
          - business_secondary_color
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessProfileRequest'
        description: businessProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns:
    get:
      tags:
      - Campaign
      summary: List Campaigns
      description: Retrieves a list of campaigns for the authenticated user
      operationId: listCampaignsUsingGET_1
      parameters:
      - name: filter
        in: query
        description: "Filter to apply, allowed fields are:  \n- (String) name  \n\n\
          You will need to apply the `==` operator to check the equality of the filter\
          \ with your searched \ntext, in the encoded form `%3D%3D`. The search will\
          \ look for the text anywhere in the campaign name. \n - `filter=name%3D%3DSpring\
          \ Campaign` \n- `filter=name%3D%3DTag New Contacts` \n"
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: "Attribute and direction to order items.  \nOne of the following\
          \ fields:  \n- name  \n- publisheddate  \n- id  \n- completedContactCount\
          \  \n- activeContacts  \n- datecreated  \n- lastupdated  \nOne of the following\
          \ directions:  \n- asc  \n- desc"
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: stats
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCampaignsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns/{campaign_id}:
    get:
      tags:
      - Campaign
      summary: Retrieve a Campaign
      description: Retrieves a single campaign
      operationId: getCampaignUsingGET_1
      parameters:
      - name: campaign_id
        in: path
        description: campaign_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns/{campaign_id}/sequences/{sequence_id}:addContacts:
    post:
      tags:
      - Campaign
      summary: Add Contacts to Campaign Sequence
      description: |-
        Adds a list of contacts to a campaign sequence
        Response contains a map of the provided list of Contact Ids related to their individual result.
      operationId: addContactsToCampaignSequenceUsingPOST_1
      parameters:
      - name: campaign_id
        in: path
        description: campaign_id
        required: true
        schema:
          type: string
      - name: sequence_id
        in: path
        description: sequence_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactsToSequenceRequest'
        description: addContactsToSequenceRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddContactsToSequenceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns/{campaign_id}/sequences/{sequence_id}:removeContacts:
    post:
      tags:
      - Campaign
      summary: Remove Contacts from Campaign Sequence
      description: |-
        Removes a list of contacts from a campaign sequence
        Response contains a map of the provided list of Contact Ids related to their individual result.
      operationId: removeContactsFromCampaignSequenceUsingPOST
      parameters:
      - name: campaign_id
        in: path
        description: campaign_id
        required: true
        schema:
          type: string
      - name: sequence_id
        in: path
        description: sequence_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveContactsFromSequenceRequest'
        description: removeContactsFromSequenceRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveContactsFromSequenceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/companies:
    get:
      tags:
      - Company
      summary: List Companies
      description: Retrieves a list of all Companies
      operationId: listCompaniesUsingGET_1
      parameters:
      - name: fields
        in: query
        description: Comma-delimited list of Company properties to include in the
          response. (Fields such as `notes`, `fax_number` and `custom_fields` aren't
          included, by default.)
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompaniesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Company
      summary: Create a Company
      description: Creates a new Company.`country_code` is required if `region` is
        specified.
      operationId: createCompanyUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequest'
        description: company
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/companies/{company_id}:
    get:
      tags:
      - Company
      summary: Retrieve a Company
      description: Retrieves a single Company
      operationId: getCompanyUsingGET_1
      parameters:
      - name: company_id
        in: path
        description: company_id
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma-delimited list of Company properties to include in the
          response. (Available fields are: `company_name`, `address`, `custom_fields`,
          `email_address`, `fax_number`, `phone_number`, `website`, `notes`)'
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Company
      summary: Delete a Company
      description: Deletes the specified Company
      operationId: deleteCompanyUsingDELETE
      parameters:
      - name: company_id
        in: path
        description: company_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Company
      summary: Update a Company
      description: Updates a Company with the values provided in the request
      operationId: updateCompanyUsingPATCH_1
      parameters:
      - name: company_id
        in: path
        description: company_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - id
          - company_name
          - address
          - phone_number
          - fax_number
          - email_address
          - notes
          - website
          - custom_fields
          - create_time
          - update_time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequest'
        description: company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts:
    get:
      tags:
      - Contact
      summary: List Contacts
      description: Retrieves a list of Contacts
      operationId: listContactsUsingGET_1
      parameters:
      - name: fields
        in: query
        description: 'Comma-delimited list of Contact properties to include in the
          response. (Available fields are: addresses,anniversary_date,birth_date,company,contact_type,create_time,custom_fields,email_addresses,family_name,fax_numbers,given_name,id,job_title,leadsource_id,links,middle_name,notes,origin,owner_id,phone_numbers,preferred_locale,preferred_name,prefix,referral_code,score_value,social_accounts,source_type,spouse_name,suffix,tag_ids,time_zone,update_date,update_time,utm_parameters,website'
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: "Filter to apply, allowed fields are:  \n- (String) email  \n\
          - (String) given_name  \n- (String) family_name  \n- (String) company_id\
          \  \n- (Set[String]) contact_ids  \n- (String) start_update_time  \n- (String)\
          \ end_update_time \n\nYou will need to apply the `==` operator to check\
          \ the equality of one of the filters with your searched \nword, in the encoded\
          \ form `%3D%3D`. For the filters listed above, here are some examples: \n\
          \ - `filter=given_name%3D%3DMary` \n- `filter=company_id%3D%3D123` \n- `filter=company_id%3D%3D123%3Bfamily_name%3D%3DSmith`\
          \ \n"
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: "Attribute and direction to order items.  \nOne of the following\
          \ fields:  \n- id  \n- date_created  \n- email  \nOne of the following directions:\
          \  \n- asc  \n- desc"
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Contact
      summary: Create a Contact
      description: |-
        Creates a new Contact.
        *Note:* Contact must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified.
      operationId: createContactUsingPOST_1
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateContactRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/links/types:
    get:
      tags:
      - Contact
      summary: List Contact Link types
      description: Retrieves a list of Contact Link types.
      operationId: listContactLinkTypesUsingGET
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results. Formatted as (unencoded) ?filter=name==expectedValue
        required: false
        schema:
          type: string
          enum:
          - name
      - name: orderBy
        in: query
        required: false
        schema:
          type: string
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactLinkTypesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Contact
      summary: Create a Contact Link type
      description: Creates a new type of Contact Link
      operationId: createContactLinkTypeUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactLinkTypeRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactLinkType'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/model:
    get:
      tags:
      - Contact
      summary: Retrieve Contact Model
      description: Get the custom fields and optional properties for the Contact object
      operationId: retrieveContactModelUsingGET_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}:
    get:
      tags:
      - Contact
      summary: Retrieve a Contact
      description: Retrieves a single Contact
      operationId: getContactUsingGET_1
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma-delimited list of Contact properties to include in the
          response. (Available fields are: addresses,anniversary_date,birth_date,company,contact_type,create_time,custom_fields,email_addresses,family_name,fax_numbers,given_name,id,job_title,leadsource_id,links,middle_name,notes,origin,owner_id,phone_numbers,preferred_locale,preferred_name,prefix,referral_code,score_value,social_accounts,source_type,spouse_name,suffix,tag_ids,time_zone,update_date,update_time,utm_parameters,website'
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Contact
      summary: Delete a Contact
      description: Deletes the specified Contact
      operationId: deleteContactUsingDELETE_1
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Contact
      summary: Update a Contact
      description: Updates a Contact
      operationId: updateContactUsingPATCH
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - addresses
          - anniversary_date
          - birth_date
          - company
          - contact_type
          - create_time
          - custom_fields
          - email_addresses
          - family_name
          - fax_numbers
          - given_name
          - id
          - job_title
          - leadsource_id
          - links
          - middle_name
          - notes
          - origin
          - owner_id
          - phone_numbers
          - preferred_locale
          - preferred_name
          - prefix
          - referral_code
          - score_value
          - social_accounts
          - source_type
          - spouse_name
          - suffix
          - tag_ids
          - time_zone
          - update_date
          - update_time
          - utm_parameters
          - website
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateContactRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/links:
    get:
      tags:
      - Contact
      summary: List Linked Contacts
      description: Retrieves a list of Linked Contacts for a given Contact
      operationId: listContactLinksUsingGET
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactLinksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/notes:
    get:
      tags:
      - Note
      summary: List Notes
      description: Retrieves a list of Notes
      operationId: listNotesUsingGET_1
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Note
      summary: Create a Note
      description: Creates a new Note.
      operationId: createNoteUsingPOST_1
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/notes/{note_id}:
    get:
      tags:
      - Note
      summary: Retrieve a Note
      description: Retrieves the specified Note
      operationId: getNoteUsingGET_1
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: note_id
        in: path
        description: note_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNoteResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Note
      summary: Delete a Note
      description: Deletes the specified Note
      operationId: deleteNoteUsingDELETE_1
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: note_id
        in: path
        description: note_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Note
      summary: Update a Note
      description: Updates a Note for a Contact
      operationId: updateNoteUsingPATCH
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: note_id
        in: path
        description: note_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - contact_id
          - text
          - title
          - type
          - user_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteRequest'
        description: updateNoteRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNoteResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/paymentMethods:
    get:
      tags:
      - Contact
      summary: Retrieve Payment Methods
      description: List all Payment Methods for a Contact.
      operationId: listPaymentMethodsUsingGET
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts:link:
    post:
      tags:
      - Contact
      summary: Link Contacts
      description: Links two Contacts together using the provided Link type
      operationId: linkContactsUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/LinkContactsRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts:unlink:
    post:
      tags:
      - Contact
      summary: Delete Link between two Contacts
      description: Deletes Link between two Contacts
      operationId: unlinkContactsUsingPOST
      requestBody:
        $ref: '#/components/requestBodies/LinkContactsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/deals/-/notes/{note_id}:
    get:
      tags:
      - Deals
      summary: Retrieves a specific deal note by its ID.
      description: Retrieves a specific deal note by its ID.
      operationId: getNote
      parameters:
      - name: note_id
        in: path
        description: the ID of the note to retrieve
        required: true
        schema:
          type: string
      responses:
        '200':
          description: the requested DealNote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealNote'
    delete:
      tags:
      - Deals
      summary: Deletes a specific deal note by its ID.
      description: Deletes a specific deal note by its ID.
      operationId: delete
      parameters:
      - name: note_id
        in: path
        description: the ID of the note to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: a HttpResponse indicating the result of the delete operation
    patch:
      tags:
      - Deals
      summary: Updates a specific deal note by its ID.
      description: Updates a specific deal note by its ID.
      operationId: update
      parameters:
      - name: note_id
        in: path
        description: the ID of the note to update
        required: true
        schema:
          type: string
      requestBody:
        description: the request body containing updated note details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDealNoteRequest'
        required: true
      responses:
        '200':
          description: the updated DealNote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealNote'
  /v2/deals/{id}/notes:
    get:
      tags:
      - Deals
      summary: Lists all notes associated with a specific deal.
      description: Lists all notes associated with a specific deal.
      operationId: listNotes
      parameters:
      - name: id
        in: path
        description: the deal ID to list notes for
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: a list of deal notes wrapped in a DealNoteListResponse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealNoteListResponse'
    post:
      tags:
      - Deals
      summary: Creates a new note for a specific deal.
      description: Creates a new note for a specific deal.
      operationId: createNote
      parameters:
      - name: id
        in: path
        description: the deal ID to associate the new note with
        required: true
        schema:
          type: string
      requestBody:
        description: the request body containing note details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDealNoteRequest'
        required: true
      responses:
        '200':
          description: the created DealNote
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DealNote'
  /v2/emailAddresses/{email}:
    get:
      tags:
      - Email Address
      summary: Retrieve an Email Address status
      description: Retrieves the opt-in status for given Email Address
      operationId: getEmailAddressStatusUsingGET
      parameters:
      - name: email
        in: path
        description: email
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestEmailAddress'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    put:
      tags:
      - Email Address
      summary: Update an Email Address opt-in status
      description: |-
        Updates an Email Address opt-in status

        You may opt-in or mark an email address as _Marketable_ by including the following field in the request JSON
        with an opt-in reason. (This field is also shown in the complete request body sample.)
        The reason you provide here will help with compliance.
        Example reasons: "Customer opted-in through webform", "Company gave explicit permission."

        ```json
        "opt_in_reason": "your reason for opt-in"
        ```
        Note that the email address status will only be updated to `Unconfirmed` (marketable) for email addresses
        that are currently in the following states:
        - `Unengaged Marketable`
        - `Unengaged Non-Marketable`
        - `Non-Marketable`
        - `Opt-Out: Manual`

        All other existing statuses e.g. `List Unsubscribe`, `Opt-Out`, `System` etc will remain non-marketable and in their existing state.
      operationId: updateEmailAddressOptStatusUsingPUT
      parameters:
      - name: email
        in: path
        description: email
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailAddress'
        description: updateEmailAddress
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestEmailAddress'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:
    post:
      tags:
      - Email
      summary: Create an Email Record
      description: Creates a Record of an Email sent to a Contact
      operationId: createEmailUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailSentRequest'
        description: emailWithContent
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentWithContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails/{id}:
    get:
      tags:
      - Email
      summary: Retrieve an Email
      description: Retrieves a single Email that has been sent
      operationId: getEmailUsingGET_1
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentWithContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Email
      summary: Delete an Email Record
      description: Deletes a specific Email Record
      operationId: deleteEmailUsingDELETE_1
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:batchAdd:
    post:
      tags:
      - Email
      summary: Create a set of Email Records
      description: Creates a set of Records of Emails sent to Contacts, maximum 1000
        per transaction.
      operationId: createEmailsUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailsSentRequest'
        description: Email records to persist, with content.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsSentList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:batchRemove:
    post:
      tags:
      - Email
      summary: Remove a set of Email Records
      description: Removes a set of Email Records
      operationId: deleteEmailsUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEmailsRequest'
        description: deleteEmailsRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:send:
    post:
      tags:
      - Email
      summary: Send an Email
      description: Sends an Email to a list of Contacts
      operationId: sendEmailUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSendRequest'
        description: emailSendRequest
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/paymentMethodConfigs:
    post:
      tags:
      - PaymentMethodConfig
      summary: Create Payment Method Configuration
      description: Creates configuration details for rendering payment method components
      operationId: createPaymentMethodConfigUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentMethodConfigRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodConfig'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/pipelines:
    get:
      tags:
      - Pipelines
      summary: Lists entities based on the provided ListCommand.
      description: Lists entities based on the provided ListCommand.
      operationId: list
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: a response containing the list of entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineListResponse'
      security:
      - bearerAuth: [
          ]
    post:
      tags:
      - Pipelines
      summary: Creates a new entity.
      description: Creates a new entity.
      operationId: create
      requestBody:
        description: the create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePipelineRequest'
        required: true
      responses:
        '200':
          description: The created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
      security:
      - bearerAuth: [
          ]
  /v2/pipelines/summaries:
    get:
      tags:
      - Pipelines
      summary: Retrieves a list of pipeline summaries.
      description: Retrieves a list of pipeline summaries.
      operationId: listSummaries
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: the response containing the list of pipeline summaries and
            the next page token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineSummariesListResponse'
      security:
      - bearerAuth: [
          ]
  /v2/pipelines/{id}:
    get:
      tags:
      - Pipelines
      summary: Retrieves an entity by its identifier.
      description: Retrieves an entity by its identifier.
      operationId: get
      parameters:
      - name: id
        in: path
        description: the entity identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
      security:
      - bearerAuth: [
          ]
    delete:
      tags:
      - Pipelines
      summary: Deletes a pipeline.
      description: Deletes a pipeline.
      operationId: delete_1
      parameters:
      - name: id
        in: path
        description: the pipeline identifier
        required: true
        schema:
          type: string
      - name: allow_cleanup
        in: query
        description: flag indicating whether cleanup is allowed, can be null
        schema:
          type: boolean
          nullable: true
      - name: new_stage_id
        in: query
        description: the new stage identifier, can be null
        schema:
          type: string
          nullable: true
      responses:
        '204':
          description: A response indicating no content
      security:
      - bearerAuth: [
          ]
    patch:
      tags:
      - Pipelines
      summary: Updates an existing entity.
      description: Updates an existing entity.
      operationId: update_1
      parameters:
      - name: id
        in: path
        description: the entity identifier
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: the fields to update
        required: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: the update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePipelineRequest'
        required: true
      responses:
        '200':
          description: The update_1d entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
      security:
      - bearerAuth: [
          ]
  /v2/pipelines/{id}/outcomes:
    get:
      tags:
      - Pipelines
      summary: Gets the outcome labels for a pipeline.
      description: Gets the outcome labels for a pipeline.
      operationId: getOutcomeLabels
      parameters:
      - name: id
        in: path
        description: the pipeline identifier
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: the updated list of the pipeline's outcome labels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineOutcomeLabelListResponse'
      security:
      - bearerAuth: [
          ]
    patch:
      tags:
      - Pipelines
      summary: Sets the outcome labels for a pipeline.
      description: Sets the outcome labels for a pipeline.
      operationId: setOutcomeLabels
      parameters:
      - name: id
        in: path
        description: the pipeline identifier
        required: true
        schema:
          type: string
      requestBody:
        description: the request containing the new outcome labels
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutcomeLabelsRequest'
        required: true
      responses:
        '200':
          description: the updated list of the pipeline's outcome labels
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineOutcomeLabelListResponse'
      security:
      - bearerAuth: [
          ]
  /v2/pipelines/{id}/stages:
    get:
      tags:
      - Pipelines
      summary: Retrieves a list of stages for a specific pipeline.
      description: Retrieves a list of stages for a specific pipeline.
      operationId: listStages
      parameters:
      - name: id
        in: path
        description: the pipeline identifier
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: the response containing the list of pipeline stages and the
            next page token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineStageListResponse'
      security:
      - bearerAuth: [
          ]
  /v2/reporting/reports/{report_id}:run:
    post:
      tags:
      - Reporting
      summary: Run a Report
      description: Runs a report as defined in the application (identified as Saved
        Search)<br/><span style='color:red'>Deprecated as of v2</span>
      operationId: runReportUsingPOST
      parameters:
      - name: fields
        in: query
        description: Comma-separated list of fields to return (or do not supply a
          value to return all)
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
          default: 1000
      - name: page_token
        in: query
        description: Representation of the last row retrieved from the previous page.
          An empty value implies a request for the first page.
        required: false
        schema:
          type: string
      - name: report_id
        in: path
        description: The unique identifier of the report (Saved Search) to execute
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportExecutionResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/sales/merchants/{id}:setDefault:
    post:
      tags:
      - Sales
      summary: Set default Merchant Account
      description: Sets the specified Merchant Account as the default Merchant Account.
      operationId: setMerchantGatewayAsDefaultUsingPOST
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/settings/applications:getConfiguration:
    get:
      tags:
      - Settings
      summary: Get Application Configuration
      description: Get configuration values for the application instance.
      operationId: getApplicationConfigurationsUsingGET
      parameters:
      - name: fields
        in: query
        description: By default only application data is returned. In addition to
          that, data is returned for the fields that are mentioned in the query.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - affiliate
            - appointment
            - contact
            - ecommerce
            - email
            - forms
            - fulfillment
            - invoice
            - note
            - opportunity
            - task
            - template
          enum:
          - affiliate
          - appointment
          - contact
          - ecommerce
          - email
          - forms
          - fulfillment
          - invoice
          - note
          - opportunity
          - task
          - template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/settings/applications:isEnabled:
    get:
      tags:
      - Settings
      summary: Get Application Status
      description: Check if the application is enabled or not
      operationId: isApplicationEnabledUsingGET
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationEnabledStatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/settings/contactOptionTypes:
    get:
      tags:
      - Settings
      summary: Get Contact Option types
      description: Gets a list of Contact Option types.
      operationId: getContactOptionTypesUsingGET_1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactOptionTypesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/stages:
    get:
      tags:
      - Stages
      summary: Lists entities based on the provided ListCommand.
      description: Lists entities based on the provided ListCommand.
      operationId: list_1
      parameters:
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: a response containing the list_1 of entities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageListResponse'
      security:
      - bearerAuth: [
          ]
    post:
      tags:
      - Stages
      summary: Creates a new entity.
      description: Creates a new entity.
      operationId: create_1
      requestBody:
        description: the create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStageRequest'
        required: true
      responses:
        '200':
          description: The create_1d entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
      security:
      - bearerAuth: [
          ]
  /v2/stages/{id}:
    get:
      tags:
      - Stages
      summary: Retrieves an entity by its identifier.
      description: Retrieves an entity by its identifier.
      operationId: get_1
      parameters:
      - name: id
        in: path
        description: the entity identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: The retrieved entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
      security:
      - bearerAuth: [
          ]
    delete:
      tags:
      - Stages
      summary: Deletes a stage by its identifier for a given tenant.
      description: Deletes a stage by its identifier for a given tenant.
      operationId: delete_2
      parameters:
      - name: id
        in: path
        description: the stage identifier
        required: true
        schema:
          type: string
      - name: new_stage_id
        in: query
        description: the new stage identifier, can be null
        schema:
          type: string
          nullable: true
      responses:
        '204':
          description: A response indicating no content
      security:
      - bearerAuth: [
          ]
    patch:
      tags:
      - Stages
      summary: Updates an existing entity.
      description: Updates an existing entity.
      operationId: update_2
      parameters:
      - name: id
        in: path
        description: the entity identifier
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: the fields to update
        required: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: the update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStageRequest'
        required: true
      responses:
        '200':
          description: The update_2d entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stage'
      security:
      - bearerAuth: [
          ]
  /v2/stages/{id}/deals:
    get:
      tags:
      - Stages
      summary: Retrieves a list of deals for a specific stage.
      description: Retrieves a list of deals for a specific stage.
      operationId: listStages_1
      parameters:
      - name: id
        in: path
        description: the stage identifier
        required: true
        schema:
          type: string
      - name: filter
        in: query
        schema:
          type: string
          description: Search filter to apply to results
          nullable: true
      - name: page_token
        in: query
        schema:
          type: string
          description: Page token
          nullable: true
      - name: order_by
        in: query
        schema:
          type: string
          description: Attribute and direction to order items by. E.g. `given_name
            desc`
          nullable: true
      - name: page_size
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          description: Total number of items to return per page
          format: int32
          nullable: true
          example: 100
          default: 1000
      responses:
        '200':
          description: the response containing the list of deals and the next page
            token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageDealListResponse'
      security:
      - bearerAuth: [
          ]
  /v2/subscriptions:
    post:
      tags:
      - Subscriptions
      summary: Create Subscription
      description: Creates a subscription with the specified product and product subscription
        id.
      operationId: createSubscriptionV2UsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionV2'
        description: createSubscriptionV2
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestSubscriptionV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags:
    get:
      tags:
      - Tags
      summary: List Tags
      description: |-
        Retrieves a list of Tags defined in the application
        To search for `null` or empty fields use `filter==NONE`
      operationId: listTagsUsingGET_1
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Tags
      summary: Create Tag
      description: Creates a new Tag
      operationId: createTagUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagRequest'
        description: tag
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/categories:
    get:
      tags:
      - Tags
      summary: List Tag Categories
      description: |-
        Retrieves a list of defined Tag Categories
        To search for `null` or empty fields use `filter==NONE`
      operationId: listTagCategoriesUsingGET
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagCategoriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Tags
      summary: Create Tag Category
      description: Creates a new Tag Category.
      operationId: createTagCategoryUsingPOST_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagCategoryRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/categories/{tag_category_id}:
    get:
      tags:
      - Tags
      summary: Retrieve a Tag Category
      description: Returns information about the specified Tag Category
      operationId: getCategoryUsingGET
      parameters:
      - name: tag_category_id
        in: path
        description: tag_category_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagCategoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Tags
      summary: Delete Tag Category
      description: Deletes the specified Tag Category
      operationId: deleteTagCategoryUsingDELETE
      parameters:
      - name: tag_category_id
        in: path
        description: tag_category_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Tags
      summary: Update a Tag Category
      description: Updates a Tag Category with only the values provided in the request
      operationId: updateTagCategoryUsingPATCH
      parameters:
      - name: tag_category_id
        in: path
        description: tag_category_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagCategoryRequest'
        description: tagCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTagCategoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}:
    get:
      tags:
      - Tags
      summary: Retrieve a Tag
      description: Retrieves information about the specified Tag
      operationId: getTagUsingGET_1
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Tags
      summary: Delete Tag
      description: Deletes a Tag.
      operationId: deleteTagUsingDELETE
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Tags
      summary: Update a Tag
      description: Updates a Tag with only the values provided in the request
      operationId: updateTagUsingPATCH
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagRequest'
        description: tag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTagResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/companies:
    get:
      tags:
      - Tags
      summary: List Tagged Companies
      description: |-
        Retrieves a list of Companies that have the given Tag applied.
        To search for `null` or empty fields use `filter==NONE`
      operationId: listCompaniesForTagIdUsingGET_1
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaggedCompaniesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/contacts:
    get:
      tags:
      - Tags
      summary: List Tagged Contacts
      description: |-
        Retrieves a list of Contacts with the specified Tag
        To search for `null` or empty fields use `filter==NONE`
      operationId: listContactsWithTagIdUsingGET
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaggedContactsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/contacts:applyTags:
    post:
      tags:
      - Tags
      summary: Apply Tag
      description: Applies a Tag to a list of Contacts.
      operationId: applyTagsUsingPOST
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ApplyRemoveTagRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyTagsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/contacts:removeTags:
    post:
      tags:
      - Tags
      summary: Remove Tags
      description: Removes a Tag from a list of Contacts.
      operationId: removeTagsUsingPOST
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ApplyRemoveTagRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
servers:
- url: https://api.keap.com/crm/rest
components:
  requestBodies:
    CreateUpdateContactRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUpdateContactRequest'
      description: contact
    LinkContactsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkContactsRequest'
      description: linkContactsRequest
      required: true
    CreateCustomFieldRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCustomFieldRequest'
      description: customField
      required: true
    UpdateCustomFieldMetaDataRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomFieldMetaDataRequest'
      description: request
      required: true
    CreateOrUpdateAffiliateLinkRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrUpdateAffiliateLinkRequest'
      description: request
      required: true
    ApplyRemoveTagRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplyRemoveTagRequest'
      description: applyRemoveTagRequest
      required: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.infusionsoft.com/app/oauth/authorize
          tokenUrl: https://api.infusionsoft.com/token
          scopes: {
            }
  schemas:
    AddContactsToSequenceRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: AddContactsToSequenceRequest
    AddContactsToSequenceResponse:
      type: object
      properties:
        add_to_sequence_results:
          type: object
          additionalProperties:
            type: string
      title: AddContactsToSequenceResponse
    AddToAutomationSequenceRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: AddToAutomationSequenceRequest
    AddToAutomationSequenceResponse:
      type: object
      properties:
        add_to_automation_sequence_results:
          type: object
          additionalProperties:
            type: string
      title: AddToAutomationSequenceResponse
    Address:
      type: object
      properties:
        country:
          type: string
          example: United States of America
          description: The long-name descriptive version of the Country Code
        country_code:
          type: string
          example: USA
          description: An ISO 3166-2 Country Code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
        field:
          type: string
          enum:
          - ADDRESS_FIELD_UNSPECIFIED
          - BILLING
          - SHIPPING
          - OTHER
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
          example: Phoenix
          description: The municipality to which the address belongs
        postal_code:
          type: string
        region:
          type: string
          example: Arizona
          description: The long-name descriptive version of the Region Code
        region_code:
          type: string
          example: US-AZ
          description: An ISO 3166-2 Province Code, such as one of the US States (https://en.wikipedia.org/wiki/ISO_3166-2:US)
        zip_code:
          type: string
        zip_four:
          type: string
      title: Address
    AddressInformation:
      type: object
      properties:
        company:
          type: string
        country_code:
          type: string
        first_name:
          type: string
        is_invoice_to_company:
          type: boolean
        last_name:
          type: string
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        region:
          type: string
        zip_code:
          type: string
        zip_four:
          type: string
      title: AddressInformation
    AffiliateAddToProgramRequest:
      type: object
      properties:
        affiliate_program_id:
          type: string
      title: AffiliateAddToProgramRequest
    AffiliateCommission:
      type: object
      properties:
        aff_owed_id:
          type: integer
          format: int64
        amount_earned:
          type: number
          format: float
        contact_first_name:
          type: string
        contact_id:
          type: integer
          format: int64
        contact_last_name:
          type: string
        date_earned:
          type: string
          format: date-time
        description:
          type: string
        invoice_id:
          type: integer
          format: int64
        product_name:
          type: string
        sales_affiliate_id:
          type: integer
          format: int64
        sold_by_first_name:
          type: string
        sold_by_last_name:
          type: string
      title: AffiliateCommission
    AffiliateCommissionEarned:
      type: object
      properties:
        affiliate_commission_total:
          type: number
          format: double
        view_ledger_url:
          type: string
      title: AffiliateCommissionEarned
    AffiliateCommissionProgramResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        notes:
          type: string
        priority:
          type: integer
          format: int32
      title: AffiliateCommissionProgramResponse
    AffiliateLink:
      type: object
      properties:
        affiliate_id:
          type: string
        date_created:
          type: string
        id:
          type: string
        local_url_code:
          type: string
        name:
          type: string
        program_ids:
          type: array
          items:
            type: string
        redirect_url:
          type: string
      title: AffiliateLink
    AffiliateProgramV2:
      type: object
      properties:
        affiliate_id:
          type: string
          example: 123
          description: The affiliate_Id for Affiliate commission program
        create_time:
          type: string
          example: '2019-08-24T14:15:22Z'
          description: The created time of affiliate commission program
        default_commission:
          $ref: '#/components/schemas/DefaultCommission'
        id:
          type: string
          example: 1
          description: The affiliate commission program name
        name:
          type: string
          example: commission program
          description: The affiliate commission program name
        notes:
          type: string
          example: notes for the commission program
          description: The affiliate commission program notes
        priority:
          type: string
          example: 0
          description: The Affiliate commission program priority
        product_commissions:
          type: array
          items:
            $ref: '#/components/schemas/ProductCommission'
        subscription_commissions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionCommission'
      title: AffiliateProgramV2
    AffiliateRemoveFromProgramRequest:
      type: object
      properties:
        affiliate_program_id:
          type: string
      title: AffiliateRemoveFromProgramRequest
    AffiliateSummaryRecord:
      type: object
      properties:
        affiliateId:
          type: integer
          format: int64
        amountEarned:
          type: number
          format: double
        balance:
          type: number
          format: double
        clawbacks:
          type: number
          format: double
      title: AffiliateSummaryRecord
    ApplicationCompany:
      type: object
      properties:
        caller_id_number:
          type: string
        city:
          type: string
        country:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        phone_ext:
          type: string
        state:
          type: string
        street_address_1:
          type: string
        street_address_2:
          type: string
        web_logo_url:
          type: string
        website:
          type: string
        zip:
          type: string
      title: ApplicationCompany
    ApplicationConfigurationModuleAffiliate:
      type: object
      properties:
        choose_affiliate:
          type: boolean
        commission:
          $ref: '#/components/schemas/ApplicationConfigurationModuleAffiliateCommission'
        custom_affiliate_url:
          type: string
        display_affiliate_ip_address:
          type: boolean
        do_not_notify_affiliate:
          type: boolean
        skip_pay_if_unused:
          type: boolean
        use_referral_history_if_no_tracking_cookie:
          type: boolean
      title: ApplicationConfigurationModuleAffiliate
    ApplicationConfigurationModuleAffiliateCommission:
      type: object
      properties:
        calculation_type:
          type: string
        levels:
          type: integer
          format: int32
        participant_types:
          type: string
      title: ApplicationConfigurationModuleAffiliateCommission
    ApplicationConfigurationModuleApplication:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/ApplicationCompany'
        default_view_locale:
          type: string
        features_enabled:
          $ref: '#/components/schemas/ApplicationFeaturesEnabled'
        time_zone:
          type: string
      title: ApplicationConfigurationModuleApplication
    ApplicationConfigurationModuleAppointment:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
      title: ApplicationConfigurationModuleAppointment
    ApplicationConfigurationModuleContact:
      type: object
      properties:
        address_labels:
          $ref: '#/components/schemas/ApplicationConfigurationModuleContactAddressLabels'
        contact_types:
          type: string
        default_new_contact_form:
          type: string
        disable_contact_edit_in_client_login:
          type: boolean
        fax_types:
          type: string
        phone_types:
          type: string
        suffix_types:
          type: string
        title_types:
          type: string
      title: ApplicationConfigurationModuleContact
    ApplicationConfigurationModuleContactAddressLabels:
      type: object
      properties:
        line_1:
          type: string
        line_2:
          type: string
        line_3:
          type: string
      title: ApplicationConfigurationModuleContactAddressLabels
    ApplicationConfigurationModuleEcommerce:
      type: object
      properties:
        credit_card_types:
          type: string
        currency:
          type: string
        default_charge_max_retry_attempts:
          type: integer
          format: int32
        default_country:
          type: string
        default_merchant:
          type: string
        default_number_of_days_between_charge_attempts:
          type: integer
          format: int32
        default_tax:
          type: string
        default_to_auto_charge:
          type: boolean
        merchant_account_max_retry_attempts:
          type: integer
          format: int32
        payment_types:
          type: string
        promo_codes:
          type: string
        track_cost_per_unit:
          type: boolean
        track_inventory:
          type: boolean
      title: ApplicationConfigurationModuleEcommerce
    ApplicationConfigurationModuleEmail:
      type: object
      properties:
        append_contact_key_to_links:
          type: boolean
        default_opt_in_link:
          type: string
        default_opt_out_link:
          type: string
        hide_emails_to_and_from_domains:
          type: string
        whitelisted_domains:
          type: string
      title: ApplicationConfigurationModuleEmail
    ApplicationConfigurationModuleForms:
      type: object
      properties:
        spam_filters_enabled:
          type: boolean
      title: ApplicationConfigurationModuleForms
    ApplicationConfigurationModuleFulfillment:
      type: object
      properties:
        default_message_fields:
          type: string
        default_message_to:
          type: string
      title: ApplicationConfigurationModuleFulfillment
    ApplicationConfigurationModuleInvoice:
      type: object
      properties:
        tax_label:
          type: string
      title: ApplicationConfigurationModuleInvoice
    ApplicationConfigurationModuleNote:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
      title: ApplicationConfigurationModuleNote
    ApplicationConfigurationModuleOpportunity:
      type: object
      properties:
        default_stage:
          type: string
        states:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStates'
      title: ApplicationConfigurationModuleOpportunity
    ApplicationConfigurationModuleOpportunityStates:
      type: object
      properties:
        active:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStatesActive'
        loss:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStatesLoss'
        win:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStatesWin'
      title: ApplicationConfigurationModuleOpportunityStates
    ApplicationConfigurationModuleOpportunityStatesActive:
      type: object
      properties:
        stages:
          type: string
      title: ApplicationConfigurationModuleOpportunityStatesActive
    ApplicationConfigurationModuleOpportunityStatesLoss:
      type: object
      properties:
        reasons:
          type: string
        stage:
          type: string
      title: ApplicationConfigurationModuleOpportunityStatesLoss
    ApplicationConfigurationModuleOpportunityStatesWin:
      type: object
      properties:
        reasons:
          type: string
        stage:
          type: string
      title: ApplicationConfigurationModuleOpportunityStatesWin
    ApplicationConfigurationModuleTask:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
      title: ApplicationConfigurationModuleTask
    ApplicationConfigurationModuleTemplate:
      type: object
      properties:
        default_country_code:
          type: integer
          format: int32
        default_user_id:
          type: integer
          format: int64
      title: ApplicationConfigurationModuleTemplate
    ApplicationFeaturesEnabled:
      type: object
      properties:
        marketing:
          type: boolean
      title: ApplicationFeaturesEnabled
    ApplyRemoveTagRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: ApplyRemoveTagRequest
    ApplyTagsResponse:
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            type: string
      title: ApplyTagsResponse
    AssignProductCategoriesRequest:
      type: object
      required:
      - product_category_ids
      properties:
        product_category_ids:
          type: array
          items:
            type: string
      title: AssignProductCategoriesRequest
    AssignProductsRequest:
      type: object
      required:
      - product_ids
      properties:
        product_ids:
          type: array
          items:
            type: string
      title: AssignProductsRequest
    Automation:
      type: object
      properties:
        active_contacts:
          type: integer
          format: int32
        categories:
          type: array
          items:
            type: string
        current_edit_lock_status:
          $ref: '#/components/schemas/AutomationLockStatus'
        error_message:
          type: string
        id:
          type: string
        locked:
          type: boolean
        published_by:
          type: string
        published_date:
          type: string
          format: date-time
        published_timezone:
          type: string
        status:
          type: string
        title:
          type: string
      title: Automation
    AutomationCategory:
      type: object
      properties:
        automation_count:
          type: integer
          format: int64
        id:
          type: string
        name:
          type: string
      title: AutomationCategory
    AutomationLockStatus:
      type: object
      properties:
        locked:
          type: boolean
        user_firstname:
          type: string
        user_id:
          type: string
        user_name:
          type: string
      title: AutomationLockStatus
    BaseListResponse_DealNote_:
      type: object
      properties:
        next_page_token:
          type: string
          description: Token for the next page of results.
      description: The list responses.
    BaseListResponse_Deal_:
      type: object
      properties:
        next_page_token:
          type: string
          description: Token for the next page of results.
      description: The list responses.
    BaseListResponse_PipelineSummary_:
      type: object
      properties:
        next_page_token:
          type: string
          description: Token for the next page of results.
      description: The list responses.
    BaseListResponse_Pipeline_:
      type: object
      properties:
        next_page_token:
          type: string
          description: Token for the next page of results.
      description: The list responses.
    BaseListResponse_Stage_:
      type: object
      properties:
        next_page_token:
          type: string
          description: Token for the next page of results.
      description: The list responses.
    BaseModel:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the model.
      description: Base class for all models. Provides a unique identifier.
    BasicCompany:
      type: object
      properties:
        company_name:
          type: string
        id:
          type: string
      title: BasicCompany
    BasicContact:
      type: object
      properties:
        email:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
      title: BasicContact
    BasicUser:
      type: object
      properties:
        email_address:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
      title: BasicUser
    BusinessProfileAddressRequest:
      type: object
      required:
      - country_code
      - line1
      - line2
      - locality
      - postal_code
      - region
      properties:
        country_code:
          type: string
          example: USA
          description: An ISO 3166-1 Country Code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
          example: Phoenix
          description: The municipality to which the address belongs
        postal_code:
          type: string
        region:
          type: string
          example: Arizona
          description: The long-name descriptive version of the Region Code
      title: BusinessProfileAddressRequest
    BusinessProfileAddressResponse:
      type: object
      properties:
        country_code:
          type: string
          example: USA
          description: An ISO 3166-1 Country Code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
          example: Phoenix
          description: The municipality to which the address belongs
        postal_code:
          type: string
        region:
          type: string
          example: Arizona
          description: The long-name descriptive version of the Region Code
      title: BusinessProfileAddressResponse
    Campaign:
      type: object
      properties:
        active_contact_count:
          type: integer
          format: int32
        completed_contact_count:
          type: integer
          format: int32
        created_by_global_id:
          type: string
        date_created:
          type: string
        error_message:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
        id:
          type: string
        locked:
          type: boolean
        name:
          type: string
        published_date:
          type: string
          format: date-time
        published_status:
          type: boolean
        published_time_zone:
          type: string
        sequences:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        time_zone:
          type: string
      title: Campaign
    CancelSubscriptionsRequest:
      type: object
      properties:
        reason:
          type: string
      title: CancelSubscriptionsRequest
    CardInfo:
      type: object
      properties:
        brand:
          type: string
        cardType:
          type: string
        expirationMonth:
          type: string
        expirationYear:
          type: string
        lastFour:
          type: string
      title: CardInfo
    CategoryDiscount:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        category_id:
          type: string
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_percent:
          type: number
          format: double
        name:
          type: string
        product_categories:
          type: array
          items:
            type: string
      title: CategoryDiscount
    CategoryReference:
      type: object
      properties:
        id:
          type: string
      title: CategoryReference
    CheckListItemDetails:
      type: object
      properties:
        description:
          type: string
        done_date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        instance_id:
          type: integer
          format: int64
        item_order:
          type: integer
          format: int32
        required:
          type: boolean
      title: CheckListItemDetails
    ChecklistItem:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        order:
          type: integer
          format: int32
        required:
          type: boolean
      title: ChecklistItem
    Company:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        create_time:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        fax_number:
          $ref: '#/components/schemas/FaxNumber'
        id:
          type: string
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        update_time:
          type: string
        website:
          type: string
      title: Company
    Contact:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        anniversary_date:
          type: string
        birth_date:
          type: string
        company:
          $ref: '#/components/schemas/BasicCompany'
        contact_type:
          type: string
        create_time:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        id:
          type: string
        job_title:
          type: string
        leadsource_id:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        middle_name:
          type: string
        origin:
          $ref: '#/components/schemas/Origin'
        owner_id:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        referral_code:
          type: string
        score_value:
          type: string
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - SOURCE_TYPE_UNSPECIFIED
          - API
          - APPOINTMENT
          - FORM_API_HOSTED
          - FORM_API_INTERNAL
          - IMPORT
          - INTERNAL_FORM
          - LANDING_PAGE
          - MANUAL
          - OTHER
          - UNKNOWN
          - WEBFORM
        spouse_name:
          type: string
        suffix:
          type: string
        tag_ids:
          type: array
          items:
            type: string
        time_zone:
          type: string
        update_time:
          type: string
        utm_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ContactUtmResponse'
        website:
          type: string
      title: Contact
    ContactLink:
      type: object
      properties:
        contact1_id:
          type: string
        contact2_id:
          type: string
        link_type_id:
          type: string
        link_type_name:
          type: string
      title: ContactLink
    ContactLinkType:
      type: object
      properties:
        id:
          type: string
        max_links:
          type: integer
          format: int64
        name:
          type: string
      title: ContactLinkType
    ContactUtmResponse:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
        firstTouch:
          type: boolean
        id:
          type: integer
          format: int64
        keapSourceId:
          type: string
        lastTouch:
          type: boolean
        utmCampaign:
          type: string
        utmContent:
          type: string
        utmMedium:
          type: string
        utmSource:
          type: string
        utmTerm:
          type: string
      title: ContactUtmResponse
    Country:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      title: Country
    CreateAffiliateRequest:
      type: object
      required:
      - code
      - contact_id
      - status
      properties:
        code:
          type: string
          example: M123
          description: |-
            The Affiliate code which have some validations.
            1. The code should not have white spaces
            2. The code should starts with letters
            3. The code minimum 4 characters length
        contact_id:
          type: string
          example: 1
          description: The contactId identifier , Must be a positive number
        name:
          type: string
          example: Affiliate Name
          description: |-
            The Affiliate name will be derived from the Contact,
            when not explicitly provided
        status:
          type: string
          example: active
          description: The Affiliate Status
          enum:
          - ACTIVE
          - INACTIVE
      title: CreateAffiliateRequest
    CreateAutomationCategoryRequest:
      type: object
      properties:
        name:
          type: string
      title: CreateAutomationCategoryRequest
    CreateCategoryDiscountRequest:
      type: object
      required:
      - apply_to_commissions
      - discount_percent
      - name
      - product_category_ids
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_percent:
          type: number
          format: double
        name:
          type: string
        product_category_ids:
          type: array
          items:
            type: string
      title: CreateCategoryDiscountRequest
    CreateCommissionProgramRequest:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: Fitness program
          description: The name of the Commission Program
        notes:
          type: string
          example: 20% default commission
          description: The notes of the Commission Program
        priority:
          type: integer
          format: int32
          example: 100
          description: The priority of the Commission Program
      title: CreateCommissionProgramRequest
    CreateCompanyRequest:
      type: object
      required:
      - company_name
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        fax_number:
          $ref: '#/components/schemas/FaxNumber'
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        website:
          type: string
      title: CreateCompanyRequest
    CreateContactLinkTypeRequest:
      type: object
      properties:
        max_links:
          type: integer
          format: int64
        name:
          type: string
      title: CreateContactLinkTypeRequest
    CreateContactUtmPropertiesRequest:
      type: object
      required:
      - keap_source_id
      properties:
        keap_source_id:
          type: string
          example: 6088383224687662
          description: The formId
        utm_campaign:
          type: string
          example: spring_sale
          description: UTM campaign information
        utm_content:
          type: string
          example: textlink
          description: UTM content information
        utm_medium:
          type: string
          example: cpc
          description: UTM medium information
        utm_source:
          type: string
          example: google
          description: UTM source information
        utm_term:
          type: string
          example: financial_consulting
          description: UTM term information
      title: CreateContactUtmPropertiesRequest
    CreateCustomFieldOptionRequest:
      type: object
      properties:
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomFieldOptionRequest'
      title: CreateCustomFieldOptionRequest
    CreateCustomFieldRequest:
      type: object
      required:
      - field_type
      - label
      properties:
        field_type:
          type: string
          enum:
          - CURRENCY
          - DATE
          - DATE_TIME
          - DAY_OF_WEEK
          - DECIMAL_NUMBER
          - DRILLDOWN
          - DROPDOWN
          - EMAIL
          - LIST_BOX
          - MONTH
          - NAME
          - PERCENT
          - PHONE_NUMBER
          - RADIO
          - SOCIAL_SECURITY_NUMBER
          - STATE
          - TEXT
          - TEXT_AREA
          - USER
          - USER_LIST_BOX
          - WEBSITE
          - WHOLE_NUMBER
          - YEAR
          - YES_NO
        group_id:
          type: string
          description: An optional tab group to place the field under in the interface.  If
            not specified, will default to the 'Custom Fields' tab.
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomFieldOptionRequest'
        user_group_id:
          type: string
          description: An optional user group to choose from when selecting values
            for User or UserListBox fields.
      title: CreateCustomFieldRequest
    CreateCustomFieldResponse:
      type: object
      properties:
        custom_field:
          $ref: '#/components/schemas/CustomFieldMetaData'
      title: CreateCustomFieldResponse
    CreateDealNoteRequest:
      required:
      - body
      - created_by
      type: object
      properties:
        body:
          maxLength: 5000
          minLength: 1
          type: string
          description: The body of the note. Must not be blank and must be between
            1 and 5000 characters.
        created_by:
          maxLength: 255
          minLength: 1
          type: string
          description: The creator of the note. Must not be blank and must be between
            1 and 255 characters.
      description: Request model for creating a deal note.
    CreateDefaultCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
      title: CreateDefaultCommissionProgramRequest
    CreateEmailSentRequest:
      type: object
      required:
      - sent_to_address
      properties:
        clicked_time:
          type: string
        contact_id:
          type: string
        headers:
          type: string
        html_content:
          type: string
          description: Base64 encoded HTML
        opened_time:
          type: string
        original_provider:
          type: string
          description: Provider that sent the email, defaults to UNKNOWN
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
          description: Provider id that sent the email, must be unique when combined
            with provider.  If omitted a UUID without dashes is autogenerated for
            the record.
        plain_content:
          type: string
          description: Base64 encoded text
        provider_source_id:
          type: string
          description: The email address of the synced email account that generated
            this message.
        received_time:
          type: string
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_time:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_address_list:
          type: array
          items:
            type: string
        sent_to_cc_address_list:
          type: array
          items:
            type: string
        subject:
          type: string
      title: CreateEmailSentRequest
    CreateEmailsSentRequest:
      type: object
      properties:
        emails:
          type: array
          items:
            $ref: '#/components/schemas/CreateEmailSentRequest'
      title: CreateEmailsSentRequest
    CreateFunnelIntegrationRequest:
      type: object
      properties:
        base_url:
          type: string
          description: The base URL of the integration, that will be used to call
            the integration related REST endpoints.
        context:
          type: string
          description: The context of the integration, that will be used internally
            to identify the integration.
        enabled:
          type: boolean
          description: The flag to enable or disable the integration.
        funnel_integration_actions:
          type: array
          description: The list of actions that will be installed with the integration.
          items:
            $ref: '#/components/schemas/FunnelIntegrationAction'
        funnel_integration_triggers:
          type: array
          description: The list of triggers that will be installed with the integration.
          items:
            $ref: '#/components/schemas/FunnelIntegrationAction'
        name:
          type: string
          example: My Integration, MyIntegration, My 1 New Very Exciting Integration
          description: The name of the integration, that will be used internally to
            identify the integration.
      title: CreateFunnelIntegrationRequest
    CreateFunnelIntegrationTriggerEvents:
      type: object
      properties:
        funnel_integration_trigger_events:
          type: array
          description: A list of trigger events to be created.
          items:
            $ref: '#/components/schemas/FunnelIntegrationTriggerEventDTO'
      title: CreateFunnelIntegrationTriggerEvents
    CreateLeadSourceRequest:
      type: object
      properties:
        description:
          type: string
        end_time:
          type: string
        lead_source_category_id:
          type: string
        medium:
          type: string
        message:
          type: string
        name:
          type: string
        start_time:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        vendor:
          type: string
      title: CreateLeadSourceRequest
    CreateNoteRequest:
      type: object
      required:
      - user_id
      properties:
        is_pinned:
          type: boolean
        text:
          type: string
        title:
          type: string
          description: A value for either `title` or `type` is required.
        type:
          type: string
          description: A value for either `title` or `type` is required. The value
            may be one of `Appointment`, `Call`, `Email`, `Fax`, `Letter` or `Other`
            in Keap Max/Pro, or an admin-configured value in Classic.
        user_id:
          type: string
      title: CreateNoteRequest
    CreateOpportunityRequest:
      type: object
      required:
      - opportunity_title
      properties:
        affiliate_id:
          type: string
        contact_id:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        estimated_close_time:
          type: string
        include_in_forecast:
          type: boolean
        next_action_notes:
          type: string
        next_action_time:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage_id:
          type: string
        user_id:
          type: string
      title: CreateOpportunityRequest
    CreateOpportunityStageChecklistItem:
      type: object
      required:
      - description
      - order
      - required
      properties:
        description:
          type: string
        order:
          type: integer
          format: int32
          example: Must be Numeric could be negative values as well for ordering
        required:
          type: boolean
          example: false
      title: CreateOpportunityStageChecklistItem
    CreateOpportunityStageRequest:
      type: object
      required:
      - name
      - order
      - probability
      - target_number_days
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOpportunityStageChecklistItem'
        name:
          type: string
          example: Won
        order:
          type: integer
          format: int32
          example: must be Numeric
        probability:
          type: integer
          format: int32
          example: must be integer between 0 and 100
        target_number_days:
          type: integer
          format: int32
          example: value should be >=0
      title: CreateOpportunityStageRequest
    CreateOrUpdateAffiliateLinkRequest:
      type: object
      properties:
        affiliate_id:
          type: string
          example: 1
          description: The AffiliateId
        code:
          type: string
          example: fP100
          description: Code
        name:
          type: string
          example: Fitness Program
          description: The Affiliate Link Name
        program_ids:
          type: array
          items:
            type: string
        website_address:
          type: string
          example: www.fitnessProgram.com
          description: Website Address
      title: CreateOrUpdateAffiliateLinkRequest
    CreateOrderTotalDiscountRequest:
      type: object
      required:
      - discount_type
      - discount_value
      - name
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_strategy:
          type: string
          enum:
          - GROSS
          - NET
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: CreateOrderTotalDiscountRequest
    CreatePaymentMethodConfigRequest:
      type: object
      properties:
        contact_id:
          type: string
      title: CreatePaymentMethodConfigRequest
    CreatePaymentRequest:
      type: object
      required:
      - apply_to_commissions
      - payment_amount
      properties:
        apply_to_commissions:
          type: boolean
        notes:
          type: string
        payment_amount:
          type: number
          format: double
        payment_method_id:
          type: string
        payment_method_type:
          type: string
        payment_time:
          type: string
      title: CreatePaymentRequest
    CreatePipelineRequest:
      required:
      - name
      - stages
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the pipeline.
        stages:
          maxItems: 100
          minItems: 1
          type: array
          description: The stages of the pipeline.
          items:
            type: string
      description: Request for creating a pipeline.
    CreateProductCategoryRequest:
      type: object
      required:
      - name
      properties:
        display_order_index:
          type: integer
          format: int32
        name:
          type: string
        parent_category_id:
          type: string
      title: CreateProductCategoryRequest
    CreateProductCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        product_id:
          type: string
      title: CreateProductCommissionProgramRequest
    CreateProductDiscountRequest:
      type: object
      required:
      - discount_type
      - discount_value
      - product_id
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
        product_id:
          type: string
      title: CreateProductDiscountRequest
    CreateProductInterestBundleRequest:
      type: object
      properties:
        description:
          type: string
          description: Product interest bundle description
        name:
          type: string
          description: Product interest bundle name
      title: CreateProductInterestBundleRequest
    CreateProductRequest:
      type: object
      properties:
        active:
          type: boolean
          description: True means active, False means inactive
        city_taxable:
          type: boolean
          description: If city-based taxes should be applied to this product
        country_taxable:
          type: boolean
          description: If country-based taxes should be applied to this product
        description:
          type: string
          description: Product long description
        name:
          type: string
          description: Product name
        price:
          type: integer
          format: int64
          description: The product price. The value is in the currency’s smallest
            unit. e.g. $12.50 is 1250.
        short_description:
          type: string
          description: Product short description
        sku:
          type: string
          description: Product SKU
        state_taxable:
          type: boolean
          description: If state-based taxes should be applied to this product
        storefront_hidden:
          type: boolean
          description: If the product should not be shown in the storefront
        subscription_only:
          type: boolean
          description: If the product is a subscription-only product
        taxable:
          type: boolean
          description: Whether or not the product should be taxed
        weight:
          type: number
          format: double
          description: Product weight
      title: CreateProductRequest
    CreateReferralRequest:
      type: object
      properties:
        contact_id:
          type: string
        description:
          type: string
        expiration_time:
          type: string
        ip_address:
          type: string
        referral_partner_id:
          type: string
        referral_time:
          type: string
        referral_type:
          type: string
          enum:
          - COOKIE
          - PERMANENT
          - MANUAL
        source:
          type: string
      title: CreateReferralRequest
    CreateRestOrderItemRequest:
      type: object
      required:
      - product_id
      - quantity
      properties:
        description:
          type: string
        price:
          type: number
          format: double
          description: Overridable price of the product. If not specified, the default
            will be used. Must be greater than or equal to 0.
        product_id:
          type: string
          description: The id of the product to be added to the order.
        product_type:
          type: string
          enum:
          - PRODUCT
          - DIGITAL
        quantity:
          type: integer
          format: int32
          description: Quantity must be greater than or equal to 1
      title: CreateRestOrderItemRequest
    CreateShippingDiscountRequest:
      type: object
      required:
      - discount_type
      - discount_value
      - name
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: CreateShippingDiscountRequest
    CreateStageRequest:
      required:
      - name
      - pipeline_id
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The name of the stage.
        pipeline_id:
          minLength: 1
          type: string
          description: The ID of the pipeline to which the stage belongs.
      description: Request for creating a stage.
    CreateSubscriptionCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        subscription_id:
          type: string
      title: CreateSubscriptionCommissionProgramRequest
    CreateSubscriptionPlanRequest:
      type: object
      required:
      - cycle_type
      - plan_price
      properties:
        active:
          type: boolean
          description: Whether the subscription plan is active.
        allow_prorating:
          type: boolean
          description: Allow prorating of the subscription plan.
        cycle_type:
          type: string
          description: The cycle type of the subscription plan.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        display_order_index:
          type: integer
          format: int32
          description: The order that this plan will be displayed to the user.
        frequency:
          type: integer
          format: int32
          description: The frequency of the subscription plan.
        plan_price:
          type: number
          format: double
          description: The price of the subscription plan in the smallest currency
            unit.
        total_cycles:
          type: integer
          format: int32
          description: How many cycles the subscription plan will have.  0 means infinite.
      title: CreateSubscriptionPlanRequest
    CreateSubscriptionV2:
      type: object
      required:
      - contact_id
      properties:
        allow_duplicate:
          type: boolean
          description: If true, it will disable the check to see if there is already
            an identical subscription for the contact. Default is false.
        allow_tax:
          type: boolean
          description: Only works if the product the product subscription is for is
            taxable. Default is false.
        auto_charge:
          type: boolean
          description: Defaults to true.
        billing_amount:
          type: number
          format: double
          description: Must be 0 or greater. Default is the price in the product subscription.
        contact_id:
          type: string
        first_bill_date:
          type: string
          format: date
          description: The first day the subscription will bill, in EST. Must not
            be in the past. Default is today.
        payment_method_id:
          type: string
          description: Default is the contact's most recently used card, if auto charge
            is true. Default is 0 otherwise.
        quantity:
          type: integer
          format: int32
          description: Must be greater than 0. Default is 1.
        sale_affiliate_id:
          type: string
        subscription_plan_id:
          type: string
          description: Id of the product subscription.
      title: CreateSubscriptionV2
    CreateTaskRequest:
      type: object
      required:
      - assigned_to_user_id
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
          description: Value in minutes before start_date to show pop-up reminder.  Acceptable
            values are [5,10,15,30,60,120,240,480,1440,2880]
        title:
          type: string
        type:
          type: string
          enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
      title: CreateTaskRequest
    CreateUpdateContactRequest:
      type: object
      properties:
        addresses:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/Address'
        anniversary_date:
          type: string
        birth_date:
          type: string
        company:
          $ref: '#/components/schemas/BasicCompany'
        contact_type:
          type: string
        custom_fields:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_addresses:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/EmailAddressRequest'
        family_name:
          type: string
        fax_numbers:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        job_title:
          type: string
        leadsource_id:
          type: string
        middle_name:
          type: string
        origin:
          $ref: '#/components/schemas/OriginRequest'
        owner_id:
          type: string
        phone_numbers:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        referral_code:
          type: string
        social_accounts:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - SOURCE_TYPE_UNSPECIFIED
          - API
          - APPOINTMENT
          - FORM_API_HOSTED
          - FORM_API_INTERNAL
          - IMPORT
          - INTERNAL_FORM
          - LANDING_PAGE
          - MANUAL
          - OTHER
          - UNKNOWN
          - WEBFORM
        spouse_name:
          type: string
        suffix:
          type: string
        time_zone:
          type: string
        utm_parameters:
          $ref: '#/components/schemas/CreateContactUtmPropertiesRequest'
        website:
          type: string
      title: CreateUpdateContactRequest
    CreateUpdateLeadSourceCategoryRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      title: CreateUpdateLeadSourceCategoryRequest
    CreateUpdateTagCategoryRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      title: CreateUpdateTagCategoryRequest
    CreateUpdateTagRequest:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        description:
          type: string
        name:
          type: string
      title: CreateUpdateTagRequest
    CreateUpdateTaskRequest:
      type: object
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
          description: Value in minutes before start_date to show pop-up reminder.  Acceptable
            values are [5,10,15,30,60,120,240,480,1440,2880]
        title:
          type: string
        type:
          type: string
          enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
      title: CreateUpdateTaskRequest
    CreateUserRequestV2:
      type: object
      required:
      - email_address
      - given_name
      properties:
        admin:
          type: boolean
        email_address:
          $ref: '#/components/schemas/EmailAddressRequest'
        given_name:
          type: string
        partner:
          type: boolean
      title: CreateUserRequestV2
    CurrencyValue:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: The price amount in the smallest currency unit
        currency_code:
          type: string
          description: Three-letter ISO currency code
        formatted_amount:
          type: string
          description: The product amount formatted using the tenant's currency locale
      title: CurrencyValue
    CustomField:
      type: object
      properties:
        content:
          type: object
        id:
          type: string
      title: CustomField
    CustomFieldMetaData:
      type: object
      properties:
        default_value:
          type: string
        field_name:
          type: string
        field_type:
          type: string
          enum:
          - CURRENCY
          - DATE
          - DATE_TIME
          - DAY_OF_WEEK
          - DECIMAL_NUMBER
          - DRILLDOWN
          - DROPDOWN
          - EMAIL
          - LIST_BOX
          - MONTH
          - NAME
          - PERCENT
          - PHONE_NUMBER
          - RADIO
          - SOCIAL_SECURITY_NUMBER
          - STATE
          - TEXT
          - TEXT_AREA
          - USER
          - USER_LIST_BOX
          - WEBSITE
          - WHOLE_NUMBER
          - YEAR
          - YES_NO
        group_id:
          type: string
        id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
        record_type:
          type: string
          enum:
          - CONTACT
          - REFERRAL_PARTNER
          - OPPORTUNITY
          - TASK_NOTE_APPOINTMENT
          - COMPANY
          - ORDER
          - SUBSCRIPTION
      title: CustomFieldMetaData
    CustomFieldOption:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
      title: CustomFieldOption
    CustomFieldValue:
      type: object
      properties:
        content:
          type: object
        id:
          type: string
      title: CustomFieldValue
    Deal:
      required:
      - contacts
      - name
      - owners
      - stage
      - stage_assignment_time
      - status
      - task_ids
      - value
      type: object
      description: Represents a deal.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - properties:
          name:
            minLength: 1
            type: string
            description: The name of the deal. This field is required and must have
              at least one character.
          value:
            description: The monetary value of the deal. This field is required and
              must be valid.
            allOf:
            - $ref: '#/components/schemas/Money'
            - description: ''
          contacts:
            type: array
            description: The list of contacts associated with the deal. This field
              is required.
            items:
              $ref: '#/components/schemas/DealContact'
          stage:
            description: The stage of the deal. This field is required and must be
              valid.
            allOf:
            - $ref: '#/components/schemas/Stage'
            - description: ''
          stage_assignment_time:
            type: string
            description: The time when the deal was assigned to the current stage.
              This field is required.
            format: date-time
          owners:
            type: array
            description: The list of owners of the deal. This field is required.
            items:
              $ref: '#/components/schemas/Owner'
          owner_id:
            type: string
            description: The ID of the owner of the deal. This field is optional.
            nullable: true
          task_ids:
            type: array
            description: The list of task IDs associated with the deal. This field
              is required.
            items:
              type: string
          order_id:
            type: string
            description: The order of the deal. This field is optional.
            nullable: true
          status:
            type: string
            description: The status of the deal. This field is required.
          estimated_close_time:
            type: string
            description: The estimated close time of the deal. This field is optional.
            format: date-time
            nullable: true
          closed_time:
            type: string
            description: The actual close time of the deal. This field is optional.
            format: date-time
            nullable: true
          custom_fields:
            description: The custom fields associated with the deal. This field is
              optional.
            nullable: true
            allOf:
            - type: object
              additionalProperties: true
            - {
              }
    DealContact:
      required:
      - primary_contact
      type: object
      description: Represents a contact entity in the system. Extends the BaseModel
        class.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - properties:
          primary_contact:
            type: boolean
            description: Indicates if this contact is the primary contact. This field
              is required.
    DealNote:
      type: object
      description: A model representing a note associated with a deal.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - properties:
          deal_id:
            type: string
            description: The ID of the deal associated with the note.
          body:
            type: string
            description: The body content of the note.
          created_by:
            type: string
            description: The ID of the user who created the note.
          created_time:
            type: string
            description: The timestamp when the note was created. Formatted as a string
              according to the pattern "yyyy-MM-dd'T'HH:mm:ss.SSSXXX".
            format: date-time
          modified_time:
            type: string
            description: The timestamp when the note was last modified. Formatted
              as a string according to the pattern "yyyy-MM-dd'T'HH:mm:ss.SSSXXX".
            format: date-time
    DealNoteListResponse:
      type: object
      description: Response model for a list of deal notes.
      allOf:
      - $ref: '#/components/schemas/BaseListResponse_DealNote_'
      - properties:
          next_page_token:
            type: string
            description: Token for the next page of results.
          notes:
            type: array
            description: The list of Note entities.
            items:
              $ref: '#/components/schemas/DealNote'
    DealStatus:
      type: string
      description: Enum representing the status of a deal.
      enum:
      - ACTIVE
      - WON
      - LOST
    DefaultCommission:
      type: object
      properties:
        dollar_amount:
          type: number
          format: double
        percentage:
          type: number
          format: double
      title: DefaultCommission
    DeleteEmailsRequest:
      type: object
      properties:
        email_ids:
          type: array
          items:
            type: string
      title: DeleteEmailsRequest
    DeleteEmailsResponse:
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            type: string
      title: DeleteEmailsResponse
    DeleteFunnelIntegrationRequest:
      type: object
      properties:
        action_names:
          type: array
          description: The name of the actions, that will be looked for and uninstalled.
          items:
            type: string
        integration_names:
          type: array
          description: The name of the integrations, that will be looked for and uninstalled.
            This will uninstall all triggers and actions related to this automation.
          items:
            type: string
        trigger_names:
          type: array
          description: The name of the triggers, that will be looked for and uninstalled.
          items:
            type: string
      title: DeleteFunnelIntegrationRequest
    DeleteSubscriptionPlanCommissionRequest:
      type: object
      properties:
        product_id:
          type: string
        subscription_plan_id:
          type: string
      title: DeleteSubscriptionPlanCommissionRequest
    Discount:
      type: object
      required:
      - amount
      - discount_method
      - special_item_id
      properties:
        amount:
          type: number
          format: double
        discount_method:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        line_item_id:
          type: string
        special_item_id:
          type: string
      title: Discount
    DiscountCriteria:
      type: object
      properties:
        code:
          type: string
        criteria_id:
          type: string
        operator:
          type: string
          enum:
          - LESS_THAN
          - GREATER_THAN
        plan_id:
          type: string
        product_id:
          type: string
        product_quantity_max:
          type: integer
          format: int32
        product_quantity_min:
          type: integer
          format: int32
        range_end_time:
          type: string
        range_start_time:
          type: string
        subscription_quantity:
          type: integer
          format: int32
        total_amount:
          type: number
          format: double
        type:
          type: string
          enum:
          - DATE_RANGE
          - PROMO_CODE
          - PRODUCT
          - SUBSCRIPTION_PLAN
          - ORDER_TOTAL
      title: DiscountCriteria
    EmailAddress:
      type: object
      properties:
        email:
          type: string
        email_opt_status:
          type: string
          enum:
          - UNENGAGED_MARKETABLE
          - SINGLE_OPT_IN
          - DOUBLE_OPT_IN
          - CONFIRMED
          - UNENGAGED_NON_MARKETABLE
          - NON_MARKETABLE
          - LOCKDOWN
          - BOUNCE
          - HARD_BOUNCE
          - MANUAL
          - ADMIN
          - SYSTEM
          - LIST_UNSUBSCRIBE
          - FEEDBACK
          - SPAM
          - INVALID
          - DEACTIVATED
        field:
          type: string
          enum:
          - EMAIL_FIELD_UNSPECIFIED
          - EMAIL1
          - EMAIL2
          - EMAIL3
        is_opt_in:
          type: boolean
        opt_in_reason:
          type: string
      title: EmailAddress
    EmailAddressRequest:
      type: object
      properties:
        email:
          type: string
        field:
          type: string
          enum:
          - EMAIL_FIELD_UNSPECIFIED
          - EMAIL1
          - EMAIL2
          - EMAIL3
        opt_in_reason:
          type: string
      title: EmailAddressRequest
    EmailSendRequest:
      type: object
      required:
      - contacts
      - subject
      - user_id
      properties:
        address_field:
          type: string
          description: Email field of each Contact record to address the email to,
            such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName',
            defaulting to the contact's primary email
        attachments:
          type: array
          description: Attachments to be sent with each copy of the email, maximum
            of 10 with size of 1MB each
          items:
            $ref: '#/components/schemas/EmailSendRequestAttachment'
        contacts:
          type: array
          description: An array of Contact Ids to receive the email
          items:
            type: string
        html_content:
          type: string
          description: The HTML-formatted content of the email, encoded in Base64
        plain_content:
          type: string
          description: The plain-text content of the email, encoded in Base64
        subject:
          type: string
          description: The subject line of the email
        user_id:
          type: string
          description: The infusionsoft user to send the email on behalf of
      title: EmailSendRequest
    EmailSendRequestAttachment:
      type: object
      properties:
        file_data:
          type: string
          description: The content of the attachment, encoded in Base64
        file_name:
          type: string
          description: The filename of the attached file, including extension
      title: EmailSendRequestAttachment
    EmailSentCreateError:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/CreateEmailSentRequest'
        error_message:
          type: string
      title: EmailSentCreateError
    EmailSentWithContent:
      type: object
      properties:
        clicked_time:
          type: string
        contact_id:
          type: string
        headers:
          type: string
        html_content:
          type: string
          description: Base64 encoded HTML
        id:
          type: string
        opened_time:
          type: string
        original_provider:
          type: string
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
        plain_content:
          type: string
          description: Base64 encoded plain text
        provider_source_id:
          type: string
        received_time:
          type: string
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_time:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_address_list:
          type: array
          items:
            type: string
        sent_to_cc_address_list:
          type: array
          items:
            type: string
        subject:
          type: string
      title: EmailSentWithContent
    EmailsSentList:
      type: object
      properties:
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentWithContent'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentCreateError'
      title: EmailsSentList
    Error:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        localizedMessage:
          type: string
        message:
          type: string
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/Throwable'
      title: Error
    FaxNumber:
      type: object
      properties:
        field:
          type: string
          enum:
          - FAX_NUMBER_FIELD_UNSPECIFIED
          - FAX1
          - FAX2
        number:
          type: string
        type:
          type: string
      title: FaxNumber
    File:
      type: object
      properties:
        absolute:
          type: boolean
        absoluteFile:
          $ref: '#/components/schemas/File'
        absolutePath:
          type: string
        canonicalFile:
          $ref: '#/components/schemas/File'
        canonicalPath:
          type: string
        directory:
          type: boolean
        executable:
          type: boolean
        file:
          type: boolean
        freeSpace:
          type: integer
          format: int64
        hidden:
          type: boolean
        lastModified:
          type: integer
          format: int64
        name:
          type: string
        parent:
          type: string
        parentFile:
          $ref: '#/components/schemas/File'
        path:
          type: string
        readable:
          type: boolean
        totalSpace:
          type: integer
          format: int64
        usableSpace:
          type: integer
          format: int64
        writable:
          type: boolean
      title: File
    FileMetadata:
      type: object
      properties:
        category:
          type: string
          enum:
          - ATTACHMENTS
          - CART
          - DOCUMENTS
          - HIDDEN
          - INVOICE
          - LOGO
          - TICKETS
          - WEB_FORM
          - FUNNEL
        contact_id:
          type: string
        created_by_id:
          type: string
        created_time:
          type: string
        file_box_type:
          type: string
          enum:
          - APPLICATION
          - IMAGE
          - FAX
          - ATTACHMENT
          - TICKET
          - CONTACT
          - DIGITAL_PRODUCT
          - IMPORT
          - HIDDEN
          - WEB_FORM
          - STYLED_CART
          - RESAMPLED_IMAGE
          - TEMPLATE_THUMBNAIL
          - FUNNEL
          - LOGO_THUMBNAIL
          - UNLAYER
          - BRANDING_CENTER_LOGO
        file_name:
          type: string
        file_size:
          type: integer
          format: int64
        id:
          type: string
        is_public:
          type: boolean
        remote_file_key:
          type: string
        updated_time:
          type: string
      title: FileMetadata
    FunnelIntegrationAction:
      type: object
      properties:
        base_url:
          type: string
          description: The base URL of the trigger, that will be used to call the
            integration related REST endpoints.
        context:
          type: string
          description: The context of the trigger, that will be used internally to
            identify the integration.
        enabled:
          type: boolean
          description: The flag to enable or disable the integration trigger.
        icon_url:
          type: string
          description: The icon URL of the trigger, that will be used to display the
            icon of this specific integration trigger.
        name:
          type: string
          example: My Trigger, MyTrigger, My 1 New Very Exciting Trigger
          description: The name of the trigger, that will be used internally to identify
            and initiate the trigger.
        schema_fields:
          type: array
          example: |-
            "schema_fields": [
                            {
                                "name": "my_schema_field",
                                "type": "String",
                                "label": "My Schema Field"
                            },
                            {
                                "name": "num_sales",
                                "type": "Integer",
                                "label": "Number of Sales"
                            }

                        ],
          description: The schema for this trigger that can be used in the builder
            context, and populated when a trigger is initiated.
          items:
            $ref: '#/components/schemas/FunnelIntegrationSchemaField'
      title: FunnelIntegrationAction
    FunnelIntegrationHttpRequest:
      type: object
      properties:
        body:
          type: string
          example:
            contact_id: '123'
          description: The body of the HTTP request that will be made when this action
            is processed in the builder(s).
        call_type:
          type: string
          example: POST
          description: The type of HTTP request that will be made when this action
            is processed in the builder(s).
        header_parameters:
          type: object
          example:
            header1: value1
            contact_name: ~Contact.FirstName~
          description: A map of the header parameters of the HTTP request that will
            be made when this action is processed in the builder(s).
          additionalProperties:
            type: string
        query_parameters:
          type: object
          example:
            param1: value1
            contact_name: ~Contact.FirstName~
          description: A map of the query parameters of the HTTP request that will
            be made when this action is processed in the builder(s).
          additionalProperties:
            type: string
        url:
          type: string
          example: https://api.example.com
          description: The URL of the HTTP request that will be made when this action
            is processed in the builder(s).
      title: FunnelIntegrationHttpRequest
    FunnelIntegrationSchemaField:
      type: object
      properties:
        label:
          type: string
          example: My Integration Field
          description: The label that will be used to show the name of the field in
            the UI.
        name:
          type: string
          example: my_integration_field
          description: The name of the schema field. Will be the defauly label, if
            no label is provided.
        type:
          type: string
          example: String
          description: The data type of the field.
      title: FunnelIntegrationSchemaField
    FunnelIntegrationTriggerEventDTO:
      type: object
      properties:
        contact_id:
          type: integer
          format: int64
        oracle_id:
          type: string
        schema_data:
          type: string
      title: FunnelIntegrationTriggerEventDTO
    FunnelIntegrationTriggerResultDTO:
      type: object
      properties:
        automation_id:
          type: integer
          format: int64
        goal_id:
          type: integer
          format: int64
        message:
          type: string
        schema_data:
          type: string
        success:
          type: boolean
      title: FunnelIntegrationTriggerResultDTO
    GetApplicationEnabledStatusResponse:
      type: object
      properties:
        enabled:
          type: boolean
      title: GetApplicationEnabledStatusResponse
    GetBusinessProfileResponse:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BusinessProfileAddressResponse'
        business_goals:
          type: array
          description: The goals of this business, ie. Grow Business, Convert more
            leads
          items:
            type: string
        business_primary_color:
          type: string
        business_secondary_color:
          type: string
        business_type:
          type: string
          description: The type of business
        currency_code:
          type: string
          example: USD
          description: ISO 4217 Currency Code
        email:
          type: string
        language_tag:
          type: string
        logo_url:
          type: string
        name:
          type: string
        phone:
          type: string
        time_zone:
          type: string
        website:
          type: string
      title: GetBusinessProfileResponse
      description: Profile information about the business that owns/uses this account
    GetContactOptionTypesResponse:
      type: object
      properties:
        option_types:
          type: array
          items:
            type: string
      title: GetContactOptionTypesResponse
    GetNoteResponse:
      type: object
      properties:
        assigned_to_user:
          $ref: '#/components/schemas/BasicUser'
        contact_id:
          type: string
        create_time:
          type: string
        created_by_user_id:
          type: string
        id:
          type: string
        last_updated_by_user_id:
          type: string
        pinned_at:
          type: string
        text:
          type: string
        title:
          type: string
        type:
          type: string
        update_time:
          type: string
      title: GetNoteResponse
    GetSettingsResponse:
      type: object
      properties:
        affiliate:
          $ref: '#/components/schemas/ApplicationConfigurationModuleAffiliate'
        application:
          $ref: '#/components/schemas/ApplicationConfigurationModuleApplication'
        appointment:
          $ref: '#/components/schemas/ApplicationConfigurationModuleAppointment'
        contact:
          $ref: '#/components/schemas/ApplicationConfigurationModuleContact'
        ecommerce:
          $ref: '#/components/schemas/ApplicationConfigurationModuleEcommerce'
        email:
          $ref: '#/components/schemas/ApplicationConfigurationModuleEmail'
        forms:
          $ref: '#/components/schemas/ApplicationConfigurationModuleForms'
        fulfillment:
          $ref: '#/components/schemas/ApplicationConfigurationModuleFulfillment'
        invoice:
          $ref: '#/components/schemas/ApplicationConfigurationModuleInvoice'
        note:
          $ref: '#/components/schemas/ApplicationConfigurationModuleNote'
        opportunity:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunity'
        task:
          $ref: '#/components/schemas/ApplicationConfigurationModuleTask'
        template:
          $ref: '#/components/schemas/ApplicationConfigurationModuleTemplate'
      title: GetSettingsResponse
    GetTagCategoryResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: GetTagCategoryResponse
    GetUserInfoResponseBase:
      type: object
      properties:
        email:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: object
        is_admin:
          type: boolean
        keap_id:
          type: string
        middle_name:
          type: string
        preferred_name:
          type: string
        sub:
          type: string
      title: GetUserInfoResponseBase
    Goal:
      type: object
      properties:
        historical_contact_counts:
          $ref: '#/components/schemas/HistoricalCounts'
        id:
          type: string
        name:
          type: string
        next_sequence_ids:
          type: array
          items:
            type: string
        previous_sequence_ids:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
          - WebForm
          - LandingPage
          - Survey
          - LinkClick
          - EmailOpened
          - Score
          - Purchase
          - FailedPurchase
          - Quote
          - WebsiteTrigger
          - InternalForm
          - SmartForm
          - AppointmentEvent
          - Task
          - StageMove
          - Note
          - Tag
          - PipelineStageMove
          - UnlayerLandingPage
          - GroSocial
          - TwitterForm
          - API
          - WordPress
          - NewLandingPage
          - IntegrationTrigger
      title: Goal
    HistoricalCounts:
      type: object
      properties:
        24_hours:
          type: integer
          format: int32
        30_days:
          type: integer
          format: int32
      title: HistoricalCounts
    InputStream:
      type: object
      title: InputStream
    InvoiceOrderPayment:
      type: object
      properties:
        amount:
          type: number
        id:
          type: string
        invoice_id:
          type: string
        last_updated_time:
          type: string
        note:
          type: string
        pay_status:
          type: string
          enum:
          - MANUAL_PAID
          - REFUNDED
          - VOIDED
          - PAYPAL_PAID
          - APPROVED
          - FAILED
          - ERROR
          - PENDING
        pay_time:
          type: string
        payment_id:
          type: string
        refund_invoice_payment_id:
          type: string
        skip_commission:
          type: boolean
      title: InvoiceOrderPayment
    Item:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        next_item_id:
          type: string
        previous_item_id:
          type: string
        type:
          type: string
          enum:
          - 'NULL'
          - Start
          - Wait
          - DelayTimer
          - ContactTimer
          - DateTimer
          - AppointmentTimer
          - Email
          - BardEmail
          - UnlayerEmail
          - EmailConfirm
          - Voice
          - Fax
          - Letter
          - AutomatedSms
          - Tag
          - Opportunity
          - Note
          - Task
          - CompleteTasks
          - Appointment
          - AssignOwner
          - FieldValue
          - Fulfillment
          - CreateOrder
          - Deal
          - AddToSequence
          - CancelSubscription
          - MoveOpportunity
          - Http
          - CustomerHub
          - HttpRequest
          - IntegrationAction
          - ActionSet
      title: Item
    LandingPage:
      type: object
      properties:
        html_preview_url:
          type: string
        html_url:
          type: string
        id:
          type: string
        template_group_status:
          type: string
        title:
          type: string
      title: LandingPage
    LeadScore:
      type: object
      properties:
        last_updated:
          type: string
        score:
          type: string
      title: LeadScore
    LeadSource:
      type: object
      properties:
        description:
          type: string
        end_time:
          type: string
        id:
          type: string
        lead_source_category_id:
          type: string
        medium:
          type: string
        message:
          type: string
        name:
          type: string
        start_time:
          type: string
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
        vendor:
          type: string
      title: LeadSource
    LeadSourceCategory:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: LeadSourceCategory
    Link:
      type: object
      properties:
        id:
          type: string
        link_type_id:
          type: string
        link_type_name:
          type: string
        linked_contact_id:
          type: string
      title: Link
    LinkContactsRequest:
      type: object
      properties:
        contact1_id:
          type: string
        contact2_id:
          type: string
        link_type_id:
          type: string
      title: LinkContactsRequest
    ListAffiliateCommissionProgramsResponse:
      type: object
      properties:
        commission_programs:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateProgramV2'
        next_page_token:
          type: string
      title: ListAffiliateCommissionProgramsResponse
    ListAffiliateCommissionResponse:
      type: object
      properties:
        AffiliateCommissions:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateCommission'
        next_page_token:
          type: string
        total_aff_comm_earned:
          type: number
          format: double
        total_claw_back:
          type: number
          format: double
        total_comm_earned:
          type: number
          format: double
      title: ListAffiliateCommissionResponse
    ListAffiliateLinksResponse:
      type: object
      properties:
        affiliate_links:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateLink'
        next_page_token:
          type: string
      title: ListAffiliateLinksResponse
    ListAffiliateSummariesResponse:
      type: object
      properties:
        affiliate_summaries:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateSummaryRecord'
        next_page_token:
          type: string
      title: ListAffiliateSummariesResponse
    ListAutomationCategoryResponse:
      type: object
      properties:
        automation_categories:
          type: array
          items:
            $ref: '#/components/schemas/AutomationCategory'
        next_page_token:
          type: string
      title: ListAutomationCategoryResponse
    ListAutomationIdsResponse:
      type: object
      properties:
        automation_ids:
          type: array
          items:
            type: string
        locked_automation_ids:
          type: array
          items:
            type: string
      title: ListAutomationIdsResponse
    ListAutomationResponse:
      type: object
      properties:
        automation_count:
          type: integer
          format: int32
        automations:
          type: array
          items:
            $ref: '#/components/schemas/Automation'
        next_page_token:
          type: string
      title: ListAutomationResponse
    ListBasicContactResponse:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/BasicContact'
        next_page_token:
          type: string
      title: ListBasicContactResponse
    ListCampaignsResponse:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
        next_page_token:
          type: string
      title: ListCampaignsResponse
    ListCategoryDiscountsResponse:
      type: object
      properties:
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDiscount'
        next_page_token:
          type: string
      title: ListCategoryDiscountsResponse
    ListCompaniesResponse:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        next_page_token:
          type: string
      title: ListCompaniesResponse
    ListContactLinkTypesResponse:
      type: object
      properties:
        contact_link_types:
          type: array
          items:
            $ref: '#/components/schemas/ContactLinkType'
        next_page_token:
          type: string
      title: ListContactLinkTypesResponse
    ListContactLinksResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/ContactLink'
        next_page_token:
          type: string
      title: ListContactLinksResponse
    ListContactsResponse:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        next_page_token:
          type: string
      title: ListContactsResponse
    ListCountriesResponse:
      type: object
      required:
      - countries
      properties:
        countries:
          type: array
          description: A key-value pair of country code and country name.
          items:
            $ref: '#/components/schemas/Country'
      title: ListCountriesResponse
    ListFilesResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        next_page_token:
          type: string
      title: ListFilesResponse
    ListLandingPagesResponse:
      type: object
      properties:
        landingpages:
          type: array
          items:
            $ref: '#/components/schemas/LandingPage'
        next_page_token:
          type: string
        page_size:
          type: string
        pages:
          type: string
      title: ListLandingPagesResponse
    ListLeadSourceCategoriesResponse:
      type: object
      properties:
        lead_source_categories:
          type: array
          items:
            $ref: '#/components/schemas/LeadSourceCategory'
        next_page_token:
          type: string
      title: ListLeadSourceCategoriesResponse
    ListLeadSourcesResponse:
      type: object
      properties:
        leadsources:
          type: array
          items:
            $ref: '#/components/schemas/LeadSource'
        next_page_token:
          type: string
      title: ListLeadSourcesResponse
    ListNoteTemplateResponse:
      type: object
      properties:
        next_page_token:
          type: string
        note_templates:
          type: array
          items:
            $ref: '#/components/schemas/NoteTemplate'
      title: ListNoteTemplateResponse
    ListNotesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
      title: ListNotesResponse
    ListOpportunitiesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        opportunities:
          type: array
          items:
            $ref: '#/components/schemas/RestV2Opportunity'
      title: ListOpportunitiesResponse
    ListOpportunityStagesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        stages:
          type: array
          items:
            $ref: '#/components/schemas/RestOpportunityStage'
      title: ListOpportunityStagesResponse
    ListOrderPaymentsResponse:
      type: object
      properties:
        invoice_order_payments:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceOrderPayment'
        next_page_token:
          type: string
      title: ListOrderPaymentsResponse
    ListOrderTotalDiscountsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        order_total_discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderTotalDiscount'
      title: ListOrderTotalDiscountsResponse
    ListOrders:
      type: object
      properties:
        next_page_token:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/RestV2Order'
      title: ListOrders
    ListProductCategoriesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        product_categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
      title: ListProductCategoriesResponse
    ListProductInterestBundleResponse:
      type: object
      properties:
        next_page_token:
          type: string
        product_interest_bundles:
          type: array
          items:
            $ref: '#/components/schemas/ProductInterestBundle'
      title: ListProductInterestBundleResponse
    ListProductsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/RestV2Product'
      title: ListProductsResponse
    ListProvincesResponse:
      type: object
      required:
      - provinces
      properties:
        provinces:
          type: array
          description: A key-value pair of province code and province name.
          items:
            $ref: '#/components/schemas/Provinces'
      title: ListProvincesResponse
    ListRestMerchantAccountResponse:
      type: object
      properties:
        account_name:
          type: string
        id:
          type: string
        is_test:
          type: boolean
        type:
          type: string
          enum:
          - USE_DEFAULT
          - PAY_PAL
          - PAY_PAL_PAYFLOW_PRO
          - PAYPAL_COMMERCE
          - PAYPAL_COMMERCE_UCC
          - GATEWAY_PAYFLOW_PRO
          - AUTHORIZE
          - AUTHORIZE_CARD_PRESENT
          - POWER_PAY
          - CART_CONNECT
          - SAGE_PAY
          - E_WAY
          - USA_E_PAY
          - MONERIS
          - DPS
          - DUMMY
          - INTERNET_SECURE
          - EASY_PAY_DIRECT
          - NEXUS
          - INF_PAY
          - FLEXPAY
          - STRIPE
          - STRIPE_ELEMENTS
          - WORLD_PAY
          - RAINFOREST
          - WEPAY
          - KEAPPAY
          - MANUAL
      title: ListRestMerchantAccountResponse
    ListRestMerchantResponse:
      type: object
      properties:
        default_merchant_account_id:
          type: string
        merchant_accounts:
          type: array
          items:
            $ref: '#/components/schemas/ListRestMerchantAccountResponse'
        next_page_token:
          type: string
      title: ListRestMerchantResponse
    ListRestShippingMethodsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        shipping_methods:
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethod'
      title: ListRestShippingMethodsResponse
    ListShippingDiscountsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        shipping_discounts:
          type: array
          items:
            $ref: '#/components/schemas/ShippingDiscount'
      title: ListShippingDiscountsResponse
    ListSubscriptionPlansResponse:
      type: object
      properties:
        next_page_token:
          type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
      title: ListSubscriptionPlansResponse
    ListSubscriptionsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/RestSubscriptionV2'
      title: ListSubscriptionsResponse
    ListTagCategoriesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tag_categories:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      title: ListTagCategoriesResponse
    ListTaggedCompaniesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tagged_companies:
          type: array
          items:
            $ref: '#/components/schemas/TaggedCompany'
      title: ListTaggedCompaniesResponse
    ListTaggedContactsResponse:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/BasicContact'
        next_page_token:
          type: string
      title: ListTaggedContactsResponse
    ListTagsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      title: ListTagsResponse
    ListTasksResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      title: ListTasksResponse
    ListUserResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
      title: ListUserResponse
    Money:
      required:
      - amount
      - currency
      type: object
      properties:
        amount:
          type: number
          description: The amount of money. This field is required.
          format: double
        currency:
          type: string
          description: The currency of the money. This field is required.
      description: Represents a monetary value with an amount and currency.
    Note:
      type: object
      properties:
        assigned_to_user:
          $ref: '#/components/schemas/BasicUser'
        contact_id:
          type: string
        create_time:
          type: string
        created_by_user_id:
          type: string
        id:
          type: string
        last_updated_by_user_id:
          type: string
        pinned_at:
          type: string
        text:
          type: string
        title:
          type: string
        type:
          type: string
        update_time:
          type: string
      title: Note
    NoteTemplate:
      type: object
      properties:
        action_type:
          type: string
          enum:
          - APPOINTMENT
          - CALL
          - EMAIL
          - FAX
          - LETTER
          - OTHER
        assignment_user_id:
          type: integer
          format: int64
        description:
          type: string
        id:
          type: string
        notify_users:
          type: array
          items:
            type: string
        title:
          type: string
      title: NoteTemplate
    ObjectModel:
      type: object
      properties:
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldMetaData'
        optional_properties:
          type: array
          description: These fields are not transmitted by default on this model,
            but can be requested by specifying them in a comma-separated list in the
            optional_properties query parameter.
          items:
            type: string
      title: ObjectModel
    OpportunityContact:
      type: object
      required:
      - id
      properties:
        company_name:
          type: string
        email:
          type: string
        first_name:
          type: string
        id:
          type: string
          example: 0
        job_title:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
      title: OpportunityContact
    OpportunityStage:
      type: object
      required:
      - id
      properties:
        details:
          $ref: '#/components/schemas/StageDetails'
        id:
          type: string
          example: 0
        name:
          type: string
        reasons:
          type: array
          items:
            type: string
      title: OpportunityStage
    OrderItemProduct:
      type: object
      properties:
        created_time:
          type: string
        description:
          type: string
        id:
          type: string
        last_updated_time:
          type: string
        name:
          type: string
        product_options:
          type: array
          items:
            $ref: '#/components/schemas/RestProductOption'
        product_price:
          type: number
          format: double
        product_short_description:
          type: string
        shippable:
          type: boolean
        sku:
          type: string
        status:
          type: string
          enum:
          - INACTIVE
          - ACTIVE
        subscription_only:
          type: boolean
        subscription_plans:
          type: array
          items:
            $ref: '#/components/schemas/RestSubscriptionPlan'
        taxable:
          type: boolean
        url:
          type: string
          description: The url is the permalink to the resource
      title: OrderItemProduct
    OrderItemTax:
      type: object
      properties:
        amount:
          type: number
          format: double
        id:
          type: integer
          format: int64
        name:
          type: string
        orderItemId:
          type: integer
          format: int64
        rate:
          type: number
          format: double
        taxTemplateId:
          type: integer
          format: int64
      title: OrderItemTax
    OrderTotalDiscount:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_id:
          type: string
        discount_strategy:
          type: string
          enum:
          - GROSS
          - NET
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: OrderTotalDiscount
    Origin:
      type: object
      properties:
        date:
          type: string
        ip_address:
          type: string
      title: Origin
    OriginRequest:
      type: object
      properties:
        ip_address:
          type: string
      title: OriginRequest
    Owner:
      type: object
      description: Represents an owner entity in the system. Extends the BaseModel
        class.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
    PaymentMethodConfig:
      type: object
      properties:
        session_key:
          type: string
          description: A temporary session key required for rendering Keap's payment
            component.
      title: PaymentMethodConfig
    PaymentMethodList:
      type: object
      properties:
        next_page_token:
          type: string
        records:
          type: array
          items:
            $ref: '#/components/schemas/RestPaymentMethod'
      title: PaymentMethodList
    PaymentPlan:
      type: object
      required:
      - days_between_payments
      - number_of_payments
      - plan_start_date
      properties:
        auto_charge:
          type: boolean
        credit_card_id:
          type: string
        days_between_payments:
          type: integer
          format: int64
        initial_payment_amount:
          type: number
          format: double
        initial_payment_date:
          type: string
        initial_payment_percent:
          type: number
          format: double
        number_of_payments:
          type: integer
          format: int64
        payment_gateway:
          $ref: '#/components/schemas/RestPaymentGateway'
        payment_method_id:
          type: string
        plan_start_date:
          type: string
      title: PaymentPlan
    PaymentResult:
      type: object
      properties:
        id:
          type: string
        invoice_id:
          type: string
        payment_amount:
          type: number
          format: double
        payment_status_message:
          type: string
        transaction_id:
          type: string
      title: PaymentResult
    PhoneNumber:
      type: object
      properties:
        extension:
          type: string
        field:
          type: string
          enum:
          - PHONE_NUMBER_FIELD_UNSPECIFIED
          - PHONE1
          - PHONE2
          - PHONE3
          - PHONE4
          - PHONE5
        number:
          type: string
        number_e164:
          type: string
        type:
          type: string
      title: PhoneNumber
    Pipeline:
      type: object
      description: A pipeline
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - properties:
          name:
            type: string
            description: The name of the pipeline.
          stages:
            type: array
            description: The list of stages in the pipeline.
            items:
              $ref: '#/components/schemas/Stage'
    PipelineListResponse:
      type: object
      description: Response for a list of pipelines.
      allOf:
      - $ref: '#/components/schemas/BaseListResponse_Pipeline_'
      - properties:
          next_page_token:
            type: string
            description: Token for the next page of results.
          pipelines:
            type: array
            description: The list of pipelines.
            items:
              $ref: '#/components/schemas/Pipeline'
    PipelineOutcomeLabel:
      required:
      - value
      type: object
      properties:
        value:
          description: The status of the deal. This field is required.
          allOf:
          - $ref: '#/components/schemas/DealStatus'
        label:
          minLength: 1
          type: string
          description: The label for the outcome. This field is optional but must
            have at least one character if provided.
          nullable: true
      description: Represents a label for a pipeline outcome.
    PipelineOutcomeLabelListResponse:
      type: object
      properties:
        next_page_token:
          type: string
          description: Token for the next page of results.
        outcome_labels:
          type: array
          description: The list of outcome labels.
          items:
            $ref: '#/components/schemas/PipelineOutcomeLabel'
      description: Represents a response containing a list of pipeline outcome labels.
    PipelineStageListResponse:
      type: object
      description: Response for a list of stages.
      allOf:
      - $ref: '#/components/schemas/BaseListResponse_Stage_'
      - properties:
          next_page_token:
            type: string
            description: Token for the next page of results.
          stages:
            type: array
            description: The list of stages.
            items:
              $ref: '#/components/schemas/Stage'
    PipelineSummariesListResponse:
      type: object
      description: Response for a list of pipeline summaries.
      allOf:
      - $ref: '#/components/schemas/BaseListResponse_PipelineSummary_'
      - properties:
          next_page_token:
            type: string
            description: Token for the next page of results.
          pipeline_summaries:
            type: array
            description: The list of pipeline summaries.
            items:
              $ref: '#/components/schemas/PipelineSummary'
    PipelineSummary:
      required:
      - pipeline_name
      type: object
      description: Represents a summary of a pipeline.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - properties:
          pipeline_id:
            pattern: ^\d+$
            type: string
            description: The ID of the pipeline. Can be null and must be a string
              of digits if present.
            nullable: true
          pipeline_name:
            maxLength: 255
            minLength: 1
            type: string
            description: The name of the pipeline. Must be a non-null string with
              a length between 1 and 255 characters.
          stat_total_deal_count:
            type: integer
            description: The total count of deals in the pipeline. Can be null.
            format: int32
            nullable: true
          stat_new_deal_count:
            type: integer
            description: The count of new deals in the pipeline. Can be null.
            format: int32
            nullable: true
    ProductCategory:
      type: object
      properties:
        display_order_index:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
        parent_category_id:
          type: string
      title: ProductCategory
    ProductCommission:
      type: object
      properties:
        dollar_amount:
          type: number
          format: double
        percentage:
          type: number
          format: double
        product_id:
          type: string
        product_name:
          type: string
        product_price:
          type: number
          format: double
      title: ProductCommission
    ProductCommissionProgram:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      title: ProductCommissionProgram
    ProductDiscount:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_id:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
        product_id:
          type: string
      title: ProductDiscount
    ProductFixedOption:
      type: object
      properties:
        code:
          type: string
          description: An internal code to reference the option value
        price_adjustment:
          type: number
          format: double
          description: Positive value indicates additional amount added to the original
            price. Negative value indicates subtraction from the original price.
        value:
          type: string
          description: The displayable label given to the option
      title: ProductFixedOption
    ProductInterest:
      type: object
      properties:
        discount_percent:
          type: integer
          format: int32
          description: The percent to discount the product. Percent represented in
            a whole number, for example 10 is 10%
        id:
          type: string
          description: The product ID
        price:
          $ref: '#/components/schemas/CurrencyValue'
        quantity:
          type: integer
          format: int32
          description: The quantity of product.
      title: ProductInterest
    ProductInterestBundle:
      type: object
      properties:
        description:
          type: string
          description: Product interest bundle description
        id:
          type: string
          description: The product interest bundle ID
        name:
          type: string
          description: Product interest bundle name
        product_interests:
          type: array
          description: Product interests
          items:
            $ref: '#/components/schemas/ProductInterest'
        subscription_plan_interests:
          type: array
          description: Subscription plan interests
          items:
            $ref: '#/components/schemas/SubscriptionPlanInterest'
      title: ProductInterestBundle
    ProductInventory:
      type: object
      properties:
        email_for_inventory_notifications:
          type: string
          description: The email address for notifications about inventory
        inventory_count:
          type: integer
          format: int32
          description: The current inventory count for this product
        inventory_limit:
          type: integer
          format: int32
          description: The inventory limit for this product
        out_of_stock_enabled:
          type: boolean
          description: The flag to enable out of stock inventory
      title: ProductInventory
    ProductOptions:
      type: object
      properties:
        fixed_options:
          type: array
          description: List of option values for the fixed option
          items:
            $ref: '#/components/schemas/ProductFixedOption'
        name:
          type: string
          description: The option name
        required:
          type: boolean
          description: If the user is required to select/fill in an option for the
            product
        type:
          type: string
          description: Can be FIXED or VARIABLE. If FIXED, then fixed_options will
            be returned. If VARIABLE, then variable_setting will be returned.
          enum:
          - FIXED
          - VARIABLE
        variable_setting:
          $ref: '#/components/schemas/ProductVariableSetting'
      title: ProductOptions
    ProductVariableSetting:
      type: object
      properties:
        contain_spaces:
          type: boolean
          description: If spaces are allowed for the option
        contains:
          type: string
          description: Requires the value (excluding start and end) to contain given
            type. Can be LETTER, NUMBER, or BOTH.
        end_with:
          type: string
          description: Requires the value to end with the given type. Can be LETTER,
            NUMBER, or BOTH.
        max_chars:
          type: integer
          format: int32
          description: Max allowable chars. Its value must be greater than min_chars
        min_chars:
          type: integer
          format: int32
          description: Minimum allowable characters
        start_with:
          type: string
          description: Requires the value to start with the given type. Can be LETTER,
            NUMBER, or BOTH.
        validation_msg:
          type: string
          description: Customized validation message to display when option criteria
            aren’t met
      title: ProductVariableSetting
    Provinces:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      title: Provinces
    Referral:
      type: object
      properties:
        contact_id:
          type: string
        description:
          type: string
        expiration_time:
          type: string
        id:
          type: string
        ip_address:
          type: string
        referral_partner_id:
          type: string
        referral_time:
          type: string
        referral_type:
          type: string
          enum:
          - COOKIE
          - PERMANENT
          - MANUAL
        source:
          type: string
      title: Referral
    RemoveContactsFromSequenceRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: RemoveContactsFromSequenceRequest
    RemoveContactsFromSequenceResponse:
      type: object
      properties:
        remove_from_sequence_results:
          type: object
          additionalProperties:
            type: string
      title: RemoveContactsFromSequenceResponse
    ReportEntryRecord:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ReportEntryValue'
      title: ReportEntryRecord
    ReportEntryValue:
      type: object
      properties:
        field_name:
          type: string
        value:
          type: string
      title: ReportEntryValue
    ReportExecutionResult:
      type: object
      properties:
        page_token:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportEntryRecord'
      title: ReportExecutionResult
    Resource:
      type: object
      properties:
        description:
          type: string
        file:
          $ref: '#/components/schemas/File'
        filename:
          type: string
        inputStream:
          $ref: '#/components/schemas/InputStream'
        open:
          type: boolean
        readable:
          type: boolean
        uri:
          $ref: '#/components/schemas/URI'
        url:
          $ref: '#/components/schemas/URL'
      title: Resource
    RestAffiliate:
      type: object
      properties:
        code:
          type: string
          example: M123
          description: The Affiliate Code
        contact_id:
          type: string
          example: 1
          description: The ContactID
        id:
          type: string
          example: 1
          description: The AffiliateId
        name:
          type: string
          example: Affiliate Name
          description: The Affiliate Name
        status:
          type: string
          example: ACTIVE
          description: The Affiliate Status
          enum:
          - ACTIVE
          - INACTIVE
        unique_site_id:
          type: string
          example: 123456
          description: The Affiliate PortalSite Id
      title: RestAffiliate
    RestCreateOrderRequest:
      type: object
      required:
      - contact_id
      - order_items
      - order_time
      - order_title
      - order_type
      properties:
        contact_id:
          type: string
        lead_affiliate_id:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/CreateRestOrderItemRequest'
        order_time:
          type: string
        order_title:
          type: string
        order_type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        promo_codes:
          type: array
          description: Uses multiple strings as promo codes. The corresponding discount
            will be applied to the order.
          items:
            type: string
        sales_affiliate_id:
          type: string
        shipping_address:
          $ref: '#/components/schemas/AddressInformation'
      title: RestCreateOrderRequest
    RestEmailAddress:
      type: object
      required:
      - email
      - opted_in
      - status
      properties:
        email:
          type: string
        opted_in:
          type: boolean
        status:
          type: string
          enum:
          - Unengaged Marketable
          - Unconfirmed
          - Confirmed (Legacy)
          - Confirmed
          - Unengaged NonMarketable
          - Non-marketable
          - Lockdown
          - Soft Bounce
          - Hard Bounce
          - Opt-Out
          - 'Opt-Out: Admin'
          - 'Opt-Out: System'
          - List Unsubscribe
          - Provided Feedback
          - Reported Spam
          - Invalid Email
          - Deactivated/Delinquent Mailbox
      title: RestEmailAddress
    RestOpportunityStage:
      type: object
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistItem'
        created_time:
          type: string
        id:
          type: string
        name:
          type: string
        order:
          type: integer
          format: int32
        probability:
          type: integer
          format: int32
        target_number_days:
          type: integer
          format: int32
        updated_time:
          type: string
      title: RestOpportunityStage
    RestPaymentGateway:
      type: object
      properties:
        merchant_account_id:
          type: string
        merchant_account_name:
          type: string
        use_default:
          type: boolean
      title: RestPaymentGateway
    RestPaymentMethod:
      type: object
      properties:
        cardInfo:
          $ref: '#/components/schemas/CardInfo'
        dateCreated:
          type: string
          format: date-time
        id:
          type: string
        paymentMethodType:
          type: string
        processorId:
          type: string
          format: uuid
        processorType:
          type: string
      title: RestPaymentMethod
    RestProductOption:
      type: object
      properties:
        allow_spaces:
          type: boolean
        can_contain_character:
          type: boolean
        can_contain_number:
          type: boolean
        can_end_with_character:
          type: boolean
        can_end_with_number:
          type: boolean
        can_start_with_character:
          type: boolean
        can_start_with_number:
          type: boolean
        display_index:
          type: integer
          format: int32
        id:
          type: string
        label:
          type: string
        max_chars:
          type: integer
          format: int32
        min_chars:
          type: integer
          format: int32
        name:
          type: string
        required:
          type: boolean
        text_message:
          type: string
        type:
          type: string
          enum:
          - FIXED
          - VARIABLE
        values:
          type: array
          items:
            $ref: '#/components/schemas/RestProductOptionValue'
      title: RestProductOption
    RestProductOptionValue:
      type: object
      properties:
        id:
          type: string
        index:
          type: integer
          format: int32
        is_default:
          type: boolean
        label:
          type: string
        price_adjustment:
          type: number
          format: double
        sku:
          type: string
      title: RestProductOptionValue
    RestSubscriptionPlan:
      type: object
      properties:
        active:
          type: boolean
        cycle:
          type: string
          example: YEAR
          description: The interval at which the customer is charged for the subscription.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        frequency:
          type: integer
          format: int32
          example: 2
          description: Interval at which a customer receives a product or service
            as part of a subscription plan.
        id:
          type: string
        number_of_cycles:
          type: integer
          format: int32
        plan_price:
          type: number
          format: double
        subscription_plan_index:
          type: integer
          format: int32
          example: 99
          description: Subscription plan identifier.
        subscription_plan_name:
          type: string
      title: RestSubscriptionPlan
    RestSubscriptionV2:
      type: object
      properties:
        active:
          type: boolean
        allow_tax:
          type: boolean
        auto_charge:
          type: boolean
        billing_amount:
          type: number
          format: double
        billing_cycle:
          type: string
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        billing_frequency:
          type: integer
          format: int32
        contact_id:
          type: string
        end_date:
          type: string
        id:
          type: string
        next_bill_date:
          type: string
        payment_gateway_id:
          type: string
        payment_method_id:
          type: string
        product_id:
          type: string
        quantity:
          type: integer
          format: int64
        sale_affiliate_id:
          type: string
        start_date:
          type: string
        subscription_plan_id:
          type: string
      title: RestSubscriptionV2
    RestV2Opportunity:
      type: object
      required:
      - contact
      - opportunity_title
      - stage
      properties:
        affiliate_id:
          type: string
        contact:
          $ref: '#/components/schemas/OpportunityContact'
        created_time:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        estimated_close_time:
          type: string
        id:
          type: string
        include_in_forecast:
          type: boolean
        last_updated_time:
          type: string
        next_action_notes:
          type: string
        next_action_time:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage:
          $ref: '#/components/schemas/OpportunityStage'
        user:
          $ref: '#/components/schemas/RestV2User'
      title: RestV2Opportunity
    RestV2Order:
      type: object
      properties:
        allow_payment:
          type: boolean
        allow_paypal:
          type: boolean
        contact:
          $ref: '#/components/schemas/BasicContact'
        creation_time:
          type: string
        id:
          type: string
        invoice_number:
          type: string
        lead_affiliate_id:
          type: string
        modification_time:
          type: string
        notes:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/RestV2OrderItem'
        order_time:
          type: string
        order_type:
          type: string
        payment_plan:
          $ref: '#/components/schemas/PaymentPlan'
        recurring:
          type: boolean
        refund_total:
          type: number
          format: double
        sales_affiliate_id:
          type: string
        shipping_information:
          $ref: '#/components/schemas/ShippingInformation'
        source_type:
          type: string
          enum:
          - INVOICE
          - API
          - CHECKOUT_FORM
          - MANUAL_PAYMENT
          - UNKNOWN
          - QBO_SYNC
        status:
          type: string
        terms:
          type: string
        title:
          type: string
        total:
          type: number
          format: double
        total_due:
          type: number
          format: double
        total_paid:
          type: number
          format: double
      title: RestV2Order
    RestV2OrderItem:
      type: object
      properties:
        billing_cycle:
          type: integer
          format: int32
        cost:
          type: number
          format: double
        cycle:
          type: string
          example: YEARLY
          description: The interval at which the customer is charged for the subscription.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        description:
          type: string
        discount:
          type: number
          format: double
        frequency:
          type: integer
          format: int32
          example: 2
          description: Interval at which a customer receives a product or service
            as part of a subscription plan.
        id:
          type: string
        name:
          type: string
        notes:
          type: string
        number_of_payments:
          type: integer
          format: int32
        order_item_taxes:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemTax'
        price:
          type: number
          format: double
        product:
          $ref: '#/components/schemas/OrderItemProduct'
        quantity:
          type: integer
          format: int32
        special:
          $ref: '#/components/schemas/Discount'
        subscription:
          $ref: '#/components/schemas/RestV2Subscription'
        subscription_based:
          type: boolean
        subscription_id:
          type: string
        subscription_plan:
          $ref: '#/components/schemas/RestSubscriptionPlan'
        type:
          type: string
          enum:
          - UNKNOWN
          - SHIPPING
          - TAX
          - SERVICE
          - PRODUCT
          - UPSELL
          - FINANCE_CHARGE
          - SPECIAL
          - PROGRAM
          - SUBSCRIPTION
          - SPECIAL_FREE_TRIAL_DAYS
          - SPECIAL_ORDER_TOTAL
          - SPECIAL_PRODUCT
          - SPECIAL_CATEGORY
          - SPECIAL_SHIPPING
          - TIP
          - OTHER
      title: RestV2OrderItem
    RestV2Product:
      type: object
      properties:
        active:
          type: boolean
          description: True means active, False means inactive
        categories:
          type: array
          description: List of category ids to indicate which categories this product
            will belong to. Can be empty.
          items:
            type: string
        city_taxable:
          type: boolean
          description: If city-based taxes should be applied to this product
        country_taxable:
          type: boolean
          description: If country-based taxes should be applied to this product
        description:
          type: string
          description: Product long description
        id:
          type: string
          description: The product ID
        inventory:
          $ref: '#/components/schemas/ProductInventory'
        name:
          type: string
          description: Product name
        options:
          type: array
          description: List of product options. Can be empty.
          items:
            $ref: '#/components/schemas/ProductOptions'
        price:
          $ref: '#/components/schemas/CurrencyValue'
        short_description:
          type: string
          description: Product short description
        sku:
          type: string
          description: Product SKU
        state_taxable:
          type: boolean
          description: If state-based taxes should be applied to this product
        storefront_hidden:
          type: boolean
          description: If the product should not be shown in the storefront
        subscription_only:
          type: boolean
          description: If the product is a subscription-only product
        subscription_plans:
          type: array
          description: List of subscription plans associated with the product. Can
            be empty.
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
        taxable:
          type: boolean
          description: Whether or not the product should be taxed
        weight:
          type: number
          format: double
          description: Product weight
      title: RestV2Product
    RestV2Subscription:
      type: object
      properties:
        subscription_active:
          type: boolean
        subscription_cycles_completed:
          type: integer
          format: int32
        subscription_end_date:
          type: string
        subscription_id:
          type: string
        subscription_next_bill_date:
          type: string
        subscription_start_date:
          type: string
      title: RestV2Subscription
    RestV2User:
      type: object
      properties:
        first_name:
          type: string
        id:
          type: string
        last_name:
          type: string
      title: RestV2User
    SaveAutomationCategoryRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      title: SaveAutomationCategoryRequest
    Sequence:
      type: object
      properties:
        active_contact_count:
          type: integer
          format: int32
        active_contact_count_completed:
          type: integer
          format: int32
        historical_contact_count:
          $ref: '#/components/schemas/HistoricalCounts'
        id:
          type: string
        name:
          type: string
        paths:
          type: array
          items:
            $ref: '#/components/schemas/SequencePath'
      title: Sequence
    SequencePath:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      title: SequencePath
    SetDefaultCommissionProgramResponse:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      title: SetDefaultCommissionProgramResponse
    ShippingDiscount:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_id:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: ShippingDiscount
    ShippingInformation:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        company:
          $ref: '#/components/schemas/BasicCompany'
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
        invoice_to_company:
          type: boolean
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
      title: ShippingInformation
    ShippingMethod:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        international:
          type: boolean
        name:
          type: string
        settings:
          $ref: '#/components/schemas/ShippingMethodSettings'
        status:
          type: string
        type:
          type: string
      title: ShippingMethod
    ShippingMethodSettings:
      type: object
      title: ShippingMethodSettings
    SocialAccount:
      type: object
      required:
      - type
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - SOCIAL_ACCOUNT_TYPE_UNSPECIFIED
          - FACEBOOK
          - LINKED_IN
          - TWITTER
          - INSTAGRAM
          - SNAPCHAT
          - YOUTUBE
          - PINTEREST
      title: SocialAccount
    StackTraceElement:
      type: object
      properties:
        classLoaderName:
          type: string
        className:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        methodName:
          type: string
        moduleName:
          type: string
        moduleVersion:
          type: string
        nativeMethod:
          type: boolean
      title: StackTraceElement
    Stage:
      type: object
      description: Represents a stage in a pipeline.
      allOf:
      - $ref: '#/components/schemas/BaseModel'
      - properties:
          name:
            type: string
            description: The name of the stage.
          pipeline_id:
            type: string
            description: The ID of the pipeline.
    StageDealListResponse:
      type: object
      description: Response for a list of deals in a stage.
      allOf:
      - $ref: '#/components/schemas/BaseListResponse_Deal_'
      - properties:
          next_page_token:
            type: string
            description: Token for the next page of results.
          deals:
            type: array
            description: The list of deals in a stage.
            items:
              $ref: '#/components/schemas/Deal'
    StageDetails:
      type: object
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckListItemDetails'
        probability:
          type: integer
          format: int32
        stage_order:
          type: integer
          format: int32
        target_num_days:
          type: integer
          format: int32
      title: StageDetails
    StageListResponse:
      type: object
      description: Response for a list of stages.
      allOf:
      - $ref: '#/components/schemas/BaseListResponse_Stage_'
      - properties:
          next_page_token:
            type: string
            description: Token for the next page of results.
          stages:
            type: array
            description: The list of stages.
            items:
              $ref: '#/components/schemas/Stage'
    SubscriptionCommission:
      type: object
      properties:
        dollar_amount:
          type: number
          format: double
        name:
          type: string
        percentage:
          type: number
          format: double
        plan_price:
          type: number
          format: double
        subscription_id:
          type: string
      title: SubscriptionCommission
    SubscriptionCommissionProgram:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      title: SubscriptionCommissionProgram
    SubscriptionPlan:
      type: object
      properties:
        active:
          type: boolean
          description: If the subscription plan is active or not.
        allow_prorating:
          type: boolean
          description: Whether or not the plan will allow prorating.
        cycle_type:
          type: string
          description: 'The cycle type of the subscription plan. Possible values:
            YEAR, MONTH, WEEK, DAY'
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        display_order_index:
          type: integer
          format: int32
          description: The order index where this plan will be displayed on a page
            against other plans. Smaller number indicates plan will be displayed higher
            in the list.
        frequency:
          type: integer
          format: int32
          description: Total number of times of a cycle type which constitutes a plan
            cycle. Minimum value is 1.
        id:
          type: string
          description: Id of the subscription plan.
        plan_price:
          $ref: '#/components/schemas/CurrencyValue'
        product_id:
          type: string
        total_cycles:
          type: integer
          format: int32
          description: Total number of cycles the plan will run before ending. Value
            of 0 indicates plan will never end.
      title: SubscriptionPlan
    SubscriptionPlanInterest:
      type: object
      properties:
        discount_percent:
          type: integer
          format: int32
          description: The percent to discount the product. Percent represented in
            a whole number, for example 10 is 10%
        id:
          type: string
          description: The product ID
        price:
          $ref: '#/components/schemas/CurrencyValue'
        quantity:
          type: integer
          format: int32
          description: The quantity of product.
      title: SubscriptionPlanInterest
    Tag:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: Tag
    TaggedCompany:
      type: object
      properties:
        applied_time:
          type: string
        company:
          $ref: '#/components/schemas/Company'
      title: TaggedCompany
    Task:
      type: object
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        create_time:
          type: string
          description: On initial object the returned value for this property may
            not accurately represent the exact stored value.
        created_by_user_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        id:
          type: string
        modification_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
          enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
      title: Task
    Throwable:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        localizedMessage:
          type: string
        message:
          type: string
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/Throwable'
      title: Throwable
    Transaction:
      type: object
      properties:
        contact_id:
          type: string
          example: 1
          description: Reference to the contact the transaction was for.
        id:
          type: string
          description: The unique identifier of the transaction.
        is_live:
          type: boolean
          description: true if this is a live transaction, false if the transaction
            is a test or sandbox transaction.
        is_successful:
          type: boolean
          description: true if the transaction resulted in a success, false if the
            transaction resulted in a failure or error.
        order_id:
          type: string
          example: 1
          description: Reference to the order this transaction was for
        payment_gateway_id:
          type: string
          description: Reference to the payment processor to where the transaction
            attempt was made.
        payment_gateway_type:
          type: string
          description: 'The type of payment processor. Possible values are: PAYPAL,
            STRIPE, KEAP_PAY, AUTHORIZE, EWAY, OTHER. For transactions that did got
            go through a processor/gateway, value is MANUAL'
        payment_id:
          type: string
          example: 1
          description: Reference to the payment record that on successful transactions.
            No reference if the transaction failed.
        transaction_amount:
          $ref: '#/components/schemas/CurrencyValue'
        transaction_time:
          type: string
          description: ISO date-time of the transaction. e.g 2024-04-28 11:25:44
        transaction_type:
          type: string
          description: 'The type of transaction. Possible values: CAPTURE, VOID, REFUND,
            CREDIT, APPROVAL'
      title: Transaction
    URI:
      type: object
      properties:
        absolute:
          type: boolean
        authority:
          type: string
        fragment:
          type: string
        host:
          type: string
        opaque:
          type: boolean
        path:
          type: string
        port:
          type: integer
          format: int32
        query:
          type: string
        rawAuthority:
          type: string
        rawFragment:
          type: string
        rawPath:
          type: string
        rawQuery:
          type: string
        rawSchemeSpecificPart:
          type: string
        rawUserInfo:
          type: string
        scheme:
          type: string
        schemeSpecificPart:
          type: string
        userInfo:
          type: string
      title: URI
    URL:
      type: object
      properties:
        authority:
          type: string
        content:
          type: object
        defaultPort:
          type: integer
          format: int32
        file:
          type: string
        host:
          type: string
        path:
          type: string
        port:
          type: integer
          format: int32
        protocol:
          type: string
        query:
          type: string
        ref:
          type: string
        userInfo:
          type: string
      title: URL
    UpdateAffiliateRequest:
      type: object
      required:
      - code
      - status
      properties:
        code:
          type: string
          example: M123
          description: |-
            The Affiliate code which have some validations.
            1. The code should not have white spaces
            2. The code should starts with letters
            3. The code minimum 4 characters length
        contact_id:
          type: string
          example: 1
          description: The contactId identifier , Must be a positive number
        name:
          type: string
          example: Affiliate Name
          description: The Affiliate name will be derived from the Contact, when not
            explicitly provided
        status:
          type: string
          example: ACTIVE
          description: The Affiliate Status
          enum:
          - ACTIVE
          - INACTIVE
      title: UpdateAffiliateRequest
    UpdateAutomationCategoryRequest:
      type: object
      properties:
        apply_category:
          type: boolean
        automation_ids:
          type: array
          items:
            type: integer
            format: int64
        category_ids:
          type: array
          items:
            type: integer
            format: int64
      title: UpdateAutomationCategoryRequest
    UpdateBusinessProfileRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BusinessProfileAddressRequest'
        business_goals:
          type: array
          description: The goals of this business, ie. Grow Business, Convert more
            leads
          items:
            type: string
        business_primary_color:
          type: string
        business_secondary_color:
          type: string
        currency_code:
          type: string
          example: USD
          description: ISO 4217 Currency Code
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        website:
          type: string
      title: UpdateBusinessProfileRequest
      description: Update profile information about the business that owns/uses this
        account
    UpdateCategoryDiscountRequest:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_percent:
          type: number
          format: double
        name:
          type: string
        product_category_ids:
          type: array
          items:
            type: string
      title: UpdateCategoryDiscountRequest
    UpdateCommissionProgramRequest:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: Fitness program
          description: The name of the Commission Program
        notes:
          type: string
          example: 20% default commission
          description: The notes of the Commission Program
        priority:
          type: integer
          format: int32
          example: 100
          description: The priority of the Commission Program
      title: UpdateCommissionProgramRequest
    UpdateCompanyRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        fax_number:
          $ref: '#/components/schemas/FaxNumber'
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        website:
          type: string
      title: UpdateCompanyRequest
    UpdateCustomFieldMetaDataRequest:
      type: object
      required:
      - group_id
      properties:
        group_id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
      title: UpdateCustomFieldMetaDataRequest
    UpdateDealNoteRequest:
      required:
      - body
      type: object
      properties:
        body:
          maxLength: 5000
          minLength: 1
          type: string
          description: The body of the note. Must not be blank and must be between
            1 and 5000 characters.
      description: Request model for updating a deal note.
    UpdateDefaultCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
      title: UpdateDefaultCommissionProgramRequest
    UpdateEmailAddress:
      type: object
      required:
      - opted_in
      - reason
      properties:
        opted_in:
          type: boolean
        reason:
          type: string
      title: UpdateEmailAddress
    UpdateNoteRequest:
      type: object
      required:
      - user_id
      properties:
        contact_id:
          type: string
        is_pinned:
          type: boolean
        text:
          type: string
        title:
          type: string
          description: A value for either `title` or `type` is required.
        type:
          type: string
          description: A value for either `title` or `type` is required. The value
            may be one of `Appointment`, `Call`, `Email`, `Fax`, `Letter` or `Other`
            in Keap Max/Pro, or an admin-configured value in Classic.
        user_id:
          type: string
      title: UpdateNoteRequest
    UpdateNoteResponse:
      type: object
      properties:
        assigned_to_user:
          $ref: '#/components/schemas/BasicUser'
        contact_id:
          type: string
        create_time:
          type: string
        created_by_user_id:
          type: string
        id:
          type: string
        last_updated_by_user_id:
          type: string
        pinned_at:
          type: string
        text:
          type: string
        title:
          type: string
        type:
          type: string
        update_time:
          type: string
      title: UpdateNoteResponse
    UpdateOpportunityRequestV2:
      type: object
      properties:
        affiliate_id:
          type: string
        contact_id:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        estimated_close_time:
          type: string
        include_in_forecast:
          type: boolean
        next_action_notes:
          type: string
        next_action_time:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage_id:
          type: string
        user_id:
          type: string
      title: UpdateOpportunityRequestV2
    UpdateOpportunityStageChecklistItem:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        order:
          type: integer
          format: int32
        required:
          type: boolean
      title: UpdateOpportunityStageChecklistItem
    UpdateOpportunityStageRequest:
      type: object
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/UpdateOpportunityStageChecklistItem'
        name:
          type: string
          example: Qualified
        order:
          type: integer
          format: int32
        probability:
          type: integer
          format: int32
          example: 2
          description: must be an integer between 0 and 100.
        target_number_days:
          type: integer
          format: int32
          description: Value should be >=0.
      title: UpdateOpportunityStageRequest
    UpdateOrderItemRequest:
      type: object
      properties:
        charge_inventory:
          type: boolean
          description: Determine if the order item has an impact on inventory.
        cost_per_unit:
          type: number
          format: double
        description:
          type: string
        name:
          type: string
        note:
          type: string
        price_per_unit:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - UNKNOWN
          - SHIPPING
          - TAX
          - SERVICE
          - PRODUCT
          - UPSELL
          - FINANCE_CHARGE
          - SPECIAL
          - PROGRAM
          - SUBSCRIPTION
          - SPECIAL_FREE_TRIAL_DAYS
          - SPECIAL_ORDER_TOTAL
          - SPECIAL_PRODUCT
          - SPECIAL_CATEGORY
          - SPECIAL_SHIPPING
          - TIP
          - OTHER
      title: UpdateOrderItemRequest
    UpdateOrderRequest:
      type: object
      properties:
        contact_id:
          type: string
        lead_affiliate_id:
          type: string
        order_time:
          type: string
        order_title:
          type: string
        order_type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        promo_codes:
          type: array
          description: Uses multiple strings as promo codes. The corresponding discount
            will be applied to the order.
          items:
            type: string
        sales_affiliate_id:
          type: string
        shipping_address:
          $ref: '#/components/schemas/AddressInformation'
      title: UpdateOrderRequest
    UpdateOrderTotalDiscountRequest:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_strategy:
          type: string
          enum:
          - GROSS
          - NET
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: UpdateOrderTotalDiscountRequest
    UpdateOutcomeLabelsRequest:
      required:
      - outcome_labels
      type: object
      properties:
        outcome_labels:
          type: array
          description: List of outcome labels to be updated.
          items:
            $ref: '#/components/schemas/PipelineOutcomeLabel'
      description: Represents a request to update outcome labels for a pipeline.
    UpdatePipelineRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: The name of the pipeline.
      description: Request for updating a pipeline.
    UpdateProductCategoryRequest:
      type: object
      properties:
        display_order_index:
          type: integer
          format: int32
        name:
          type: string
        parent_category_id:
          type: string
      title: UpdateProductCategoryRequest
    UpdateProductCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        product_id:
          type: string
      title: UpdateProductCommissionProgramRequest
    UpdateProductInterestBundleRequest:
      type: object
      properties:
        description:
          type: string
          description: Product interest bundle description
        name:
          type: string
          description: Product interest bundle name
      title: UpdateProductInterestBundleRequest
    UpdateProductInventoryRequest:
      type: object
      properties:
        quantity:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - INCREASE
          - DECREASE
      title: UpdateProductInventoryRequest
    UpdateShippingDiscountRequest:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: UpdateShippingDiscountRequest
    UpdateStageRequest:
      required:
      - name
      - next_stage_id
      - pipeline_id
      - previous_stage_id
      type: object
      properties:
        name:
          minLength: 1
          type: string
          description: The name of the stage.
          nullable: true
        previous_stage_id:
          minLength: 1
          type: string
          description: The ID of the previous stage.
          nullable: true
        next_stage_id:
          minLength: 1
          type: string
          description: The ID of the next stage.
          nullable: true
        pipeline_id:
          minLength: 1
          type: string
          description: The ID of the pipeline.
          nullable: true
      description: Request for updating a stage.
    UpdateSubscriptionCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        subscription_id:
          type: string
      title: UpdateSubscriptionCommissionProgramRequest
    UpdateSubscriptionPlanRequest:
      type: object
      required:
      - cycle_type
      - plan_price
      properties:
        active:
          type: boolean
          description: Whether the subscription plan is active.
        allow_prorating:
          type: boolean
          description: Allow prorating of the subscription plan.
        cycle_type:
          type: string
          description: The cycle type of the subscription plan.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        display_order_index:
          type: integer
          format: int32
          description: The order that this plan will be displayed to the user.
        frequency:
          type: integer
          format: int32
          description: The frequency of the subscription plan.
        plan_price:
          type: number
          format: double
          description: The price of the subscription plan in the smallest currency
            unit.
        total_cycles:
          type: integer
          format: int32
          description: How many cycles the subscription plan will have.  0 means infinite.
      title: UpdateSubscriptionPlanRequest
    UpdateSubscriptionRequest:
      type: object
      properties:
        active:
          type: boolean
        allow_tax:
          type: boolean
        auto_charge:
          type: boolean
        billing_amount:
          type: number
          format: double
        billing_cycle:
          type: string
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        billing_frequency:
          type: integer
          format: int32
        contact_id:
          type: string
        days_between_retries:
          type: integer
          format: int32
        end_bill_date:
          type: string
        lead_affiliate_id:
          type: string
        max_charge_attempts:
          type: integer
          format: int32
        next_bill_date:
          type: string
        payment_method_id:
          type: string
        previous_bill_date:
          type: string
        product_id:
          type: string
        quantity:
          type: integer
          format: int32
        sale_affiliate_id:
          type: string
        shipping_address:
          $ref: '#/components/schemas/Address'
        start_date:
          type: string
        subscription_plan_id:
          type: string
      title: UpdateSubscriptionRequest
    UpdateTagCategoryResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: UpdateTagCategoryResponse
    UpdateTagResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: UpdateTagResponse
    UpdateTaskResponse:
      type: object
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        create_time:
          type: string
          description: On initial object the returned value for this property may
            not accurately represent the exact stored value.
        created_by_user_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        id:
          type: string
        modification_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
          enum:
          - EMAIL
          - CALL
          - APPOINTMENT
          - FAX
          - LETTER
          - OTHER
      title: UpdateTaskResponse
    UpdateUserRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        email_address:
          $ref: '#/components/schemas/EmailAddressRequest'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        time_zone:
          type: string
        title:
          type: string
        website:
          type: string
      title: UpdateUserRequest
    User:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        admin:
          type: boolean
        company_name:
          type: string
        create_time:
          type: string
        created_by:
          type: integer
          format: int64
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        global_user_id:
          type: string
        id:
          type: string
        keap_id:
          type: string
        partner:
          type: boolean
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        status:
          type: string
          enum:
          - ACTIVE
          - INVITED
          - INACTIVE
          - NOT_A_USER
        time_zone:
          type: string
        title:
          type: string
        update_time:
          type: string
        updated_by:
          type: integer
          format: int64
        website:
          type: string
      title: User
