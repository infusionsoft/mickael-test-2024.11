/**
 * Keap REST API
 * Keap REST Core Service
 *
 * OpenAPI spec version: 2.70.0.751586-hf-202412120145
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Item {
    'id'?: string;
    'name'?: string;
    'nextItemId'?: string;
    'previousItemId'?: string;
    'type'?: ItemTypeEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "nextItemId",
            "baseName": "next_item_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "previousItemId",
            "baseName": "previous_item_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ItemTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Item.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ItemTypeEnum {
    Null = 'NULL',
    Start = 'Start',
    Wait = 'Wait',
    DelayTimer = 'DelayTimer',
    ContactTimer = 'ContactTimer',
    DateTimer = 'DateTimer',
    AppointmentTimer = 'AppointmentTimer',
    Email = 'Email',
    BardEmail = 'BardEmail',
    UnlayerEmail = 'UnlayerEmail',
    EmailConfirm = 'EmailConfirm',
    Voice = 'Voice',
    Fax = 'Fax',
    Letter = 'Letter',
    AutomatedSms = 'AutomatedSms',
    Tag = 'Tag',
    Opportunity = 'Opportunity',
    Note = 'Note',
    Task = 'Task',
    CompleteTasks = 'CompleteTasks',
    Appointment = 'Appointment',
    AssignOwner = 'AssignOwner',
    FieldValue = 'FieldValue',
    Fulfillment = 'Fulfillment',
    CreateOrder = 'CreateOrder',
    Deal = 'Deal',
    AddToSequence = 'AddToSequence',
    CancelSubscription = 'CancelSubscription',
    MoveOpportunity = 'MoveOpportunity',
    Http = 'Http',
    CustomerHub = 'CustomerHub',
    HttpRequest = 'HttpRequest',
    IntegrationAction = 'IntegrationAction',
    ActionSet = 'ActionSet'
}

