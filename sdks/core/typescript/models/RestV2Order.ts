/**
 * Keap REST API
 * Keap REST Core Service
 *
 * OpenAPI spec version: 2.70.0.751586-hf-202412120145
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BasicContact } from '../models/BasicContact';
import { PaymentPlan } from '../models/PaymentPlan';
import { RestV2OrderItem } from '../models/RestV2OrderItem';
import { ShippingInformation } from '../models/ShippingInformation';
import { HttpFile } from '../http/http';

export class RestV2Order {
    'allowPayment'?: boolean;
    'allowPaypal'?: boolean;
    'contact'?: BasicContact;
    'creationTime'?: string;
    'id'?: string;
    'invoiceNumber'?: string;
    'leadAffiliateId'?: string;
    'modificationTime'?: string;
    'notes'?: string;
    'orderItems'?: Array<RestV2OrderItem>;
    'orderTime'?: string;
    'orderType'?: string;
    'paymentPlan'?: PaymentPlan;
    'recurring'?: boolean;
    'refundTotal'?: number;
    'salesAffiliateId'?: string;
    'shippingInformation'?: ShippingInformation;
    'sourceType'?: RestV2OrderSourceTypeEnum;
    'status'?: string;
    'terms'?: string;
    'title'?: string;
    'total'?: number;
    'totalDue'?: number;
    'totalPaid'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "allowPayment",
            "baseName": "allow_payment",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "allowPaypal",
            "baseName": "allow_paypal",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "contact",
            "baseName": "contact",
            "type": "BasicContact",
            "format": ""
        },
        {
            "name": "creationTime",
            "baseName": "creation_time",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "invoiceNumber",
            "baseName": "invoice_number",
            "type": "string",
            "format": ""
        },
        {
            "name": "leadAffiliateId",
            "baseName": "lead_affiliate_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "modificationTime",
            "baseName": "modification_time",
            "type": "string",
            "format": ""
        },
        {
            "name": "notes",
            "baseName": "notes",
            "type": "string",
            "format": ""
        },
        {
            "name": "orderItems",
            "baseName": "order_items",
            "type": "Array<RestV2OrderItem>",
            "format": ""
        },
        {
            "name": "orderTime",
            "baseName": "order_time",
            "type": "string",
            "format": ""
        },
        {
            "name": "orderType",
            "baseName": "order_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentPlan",
            "baseName": "payment_plan",
            "type": "PaymentPlan",
            "format": ""
        },
        {
            "name": "recurring",
            "baseName": "recurring",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "refundTotal",
            "baseName": "refund_total",
            "type": "number",
            "format": "double"
        },
        {
            "name": "salesAffiliateId",
            "baseName": "sales_affiliate_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "shippingInformation",
            "baseName": "shipping_information",
            "type": "ShippingInformation",
            "format": ""
        },
        {
            "name": "sourceType",
            "baseName": "source_type",
            "type": "RestV2OrderSourceTypeEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "terms",
            "baseName": "terms",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "total",
            "baseName": "total",
            "type": "number",
            "format": "double"
        },
        {
            "name": "totalDue",
            "baseName": "total_due",
            "type": "number",
            "format": "double"
        },
        {
            "name": "totalPaid",
            "baseName": "total_paid",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return RestV2Order.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum RestV2OrderSourceTypeEnum {
    Invoice = 'INVOICE',
    Api = 'API',
    CheckoutForm = 'CHECKOUT_FORM',
    ManualPayment = 'MANUAL_PAYMENT',
    Unknown = 'UNKNOWN',
    QboSync = 'QBO_SYNC'
}

