/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.778988
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// ContactUtmResponse
    /// </summary>
    [DataContract(Name = "ContactUtmResponse")]
    public partial class ContactUtmResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContactUtmResponse" /> class.
        /// </summary>
        /// <param name="dateCreated">dateCreated.</param>
        /// <param name="firstTouch">firstTouch.</param>
        /// <param name="id">id.</param>
        /// <param name="keapSourceId">keapSourceId.</param>
        /// <param name="lastTouch">lastTouch.</param>
        /// <param name="utmCampaign">utmCampaign.</param>
        /// <param name="utmContent">utmContent.</param>
        /// <param name="utmMedium">utmMedium.</param>
        /// <param name="utmSource">utmSource.</param>
        /// <param name="utmTerm">utmTerm.</param>
        public ContactUtmResponse(DateTime dateCreated = default(DateTime), bool firstTouch = default(bool), long id = default(long), string keapSourceId = default(string), bool lastTouch = default(bool), string utmCampaign = default(string), string utmContent = default(string), string utmMedium = default(string), string utmSource = default(string), string utmTerm = default(string))
        {
            this.DateCreated = dateCreated;
            this.FirstTouch = firstTouch;
            this.Id = id;
            this.KeapSourceId = keapSourceId;
            this.LastTouch = lastTouch;
            this.UtmCampaign = utmCampaign;
            this.UtmContent = utmContent;
            this.UtmMedium = utmMedium;
            this.UtmSource = utmSource;
            this.UtmTerm = utmTerm;
        }

        /// <summary>
        /// Gets or Sets DateCreated
        /// </summary>
        [DataMember(Name = "dateCreated", EmitDefaultValue = false)]
        public DateTime DateCreated { get; set; }

        /// <summary>
        /// Gets or Sets FirstTouch
        /// </summary>
        [DataMember(Name = "firstTouch", EmitDefaultValue = true)]
        public bool FirstTouch { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public long Id { get; set; }

        /// <summary>
        /// Gets or Sets KeapSourceId
        /// </summary>
        [DataMember(Name = "keapSourceId", EmitDefaultValue = false)]
        public string KeapSourceId { get; set; }

        /// <summary>
        /// Gets or Sets LastTouch
        /// </summary>
        [DataMember(Name = "lastTouch", EmitDefaultValue = true)]
        public bool LastTouch { get; set; }

        /// <summary>
        /// Gets or Sets UtmCampaign
        /// </summary>
        [DataMember(Name = "utmCampaign", EmitDefaultValue = false)]
        public string UtmCampaign { get; set; }

        /// <summary>
        /// Gets or Sets UtmContent
        /// </summary>
        [DataMember(Name = "utmContent", EmitDefaultValue = false)]
        public string UtmContent { get; set; }

        /// <summary>
        /// Gets or Sets UtmMedium
        /// </summary>
        [DataMember(Name = "utmMedium", EmitDefaultValue = false)]
        public string UtmMedium { get; set; }

        /// <summary>
        /// Gets or Sets UtmSource
        /// </summary>
        [DataMember(Name = "utmSource", EmitDefaultValue = false)]
        public string UtmSource { get; set; }

        /// <summary>
        /// Gets or Sets UtmTerm
        /// </summary>
        [DataMember(Name = "utmTerm", EmitDefaultValue = false)]
        public string UtmTerm { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ContactUtmResponse {\n");
            sb.Append("  DateCreated: ").Append(DateCreated).Append("\n");
            sb.Append("  FirstTouch: ").Append(FirstTouch).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  KeapSourceId: ").Append(KeapSourceId).Append("\n");
            sb.Append("  LastTouch: ").Append(LastTouch).Append("\n");
            sb.Append("  UtmCampaign: ").Append(UtmCampaign).Append("\n");
            sb.Append("  UtmContent: ").Append(UtmContent).Append("\n");
            sb.Append("  UtmMedium: ").Append(UtmMedium).Append("\n");
            sb.Append("  UtmSource: ").Append(UtmSource).Append("\n");
            sb.Append("  UtmTerm: ").Append(UtmTerm).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
