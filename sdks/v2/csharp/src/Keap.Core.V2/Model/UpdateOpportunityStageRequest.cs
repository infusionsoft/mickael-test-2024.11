/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.778988
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// UpdateOpportunityStageRequest
    /// </summary>
    [DataContract(Name = "UpdateOpportunityStageRequest")]
    public partial class UpdateOpportunityStageRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateOpportunityStageRequest" /> class.
        /// </summary>
        /// <param name="checklistItems">checklistItems.</param>
        /// <param name="name">name.</param>
        /// <param name="order">order.</param>
        /// <param name="probability">must be an integer between 0 and 100..</param>
        /// <param name="targetNumberDays">Value should be &gt;&#x3D;0..</param>
        public UpdateOpportunityStageRequest(List<UpdateOpportunityStageChecklistItem> checklistItems = default(List<UpdateOpportunityStageChecklistItem>), string name = default(string), int order = default(int), int probability = default(int), int targetNumberDays = default(int))
        {
            this.ChecklistItems = checklistItems;
            this.Name = name;
            this.Order = order;
            this.Probability = probability;
            this.TargetNumberDays = targetNumberDays;
        }

        /// <summary>
        /// Gets or Sets ChecklistItems
        /// </summary>
        [DataMember(Name = "checklist_items", EmitDefaultValue = false)]
        public List<UpdateOpportunityStageChecklistItem> ChecklistItems { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /*
        <example>Qualified</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Order
        /// </summary>
        [DataMember(Name = "order", EmitDefaultValue = false)]
        public int Order { get; set; }

        /// <summary>
        /// must be an integer between 0 and 100.
        /// </summary>
        /// <value>must be an integer between 0 and 100.</value>
        /*
        <example>2</example>
        */
        [DataMember(Name = "probability", EmitDefaultValue = false)]
        public int Probability { get; set; }

        /// <summary>
        /// Value should be &gt;&#x3D;0.
        /// </summary>
        /// <value>Value should be &gt;&#x3D;0.</value>
        [DataMember(Name = "target_number_days", EmitDefaultValue = false)]
        public int TargetNumberDays { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateOpportunityStageRequest {\n");
            sb.Append("  ChecklistItems: ").Append(ChecklistItems).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("  Probability: ").Append(Probability).Append("\n");
            sb.Append("  TargetNumberDays: ").Append(TargetNumberDays).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
