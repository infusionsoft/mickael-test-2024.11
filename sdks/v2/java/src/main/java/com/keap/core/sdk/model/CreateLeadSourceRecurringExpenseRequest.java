/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.778988
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * CreateLeadSourceRecurringExpenseRequest
 */
@JsonPropertyOrder({
  CreateLeadSourceRecurringExpenseRequest.JSON_PROPERTY_AMOUNT,
  CreateLeadSourceRecurringExpenseRequest.JSON_PROPERTY_END_TIME,
  CreateLeadSourceRecurringExpenseRequest.JSON_PROPERTY_NOTES,
  CreateLeadSourceRecurringExpenseRequest.JSON_PROPERTY_START_TIME,
  CreateLeadSourceRecurringExpenseRequest.JSON_PROPERTY_TITLE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateLeadSourceRecurringExpenseRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @jakarta.annotation.Nullable  private Long amount;

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  @jakarta.annotation.Nullable  private String endTime;

  public static final String JSON_PROPERTY_NOTES = "notes";
  @jakarta.annotation.Nullable  private String notes;

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  @jakarta.annotation.Nullable  private String startTime;

  public static final String JSON_PROPERTY_TITLE = "title";
  @jakarta.annotation.Nullable  private String title;

  public CreateLeadSourceRecurringExpenseRequest() { 
  }

  public CreateLeadSourceRecurringExpenseRequest amount(@jakarta.annotation.Nullable Long amount) {
    this.amount = amount;
    return this;
  }

  /**
   * The monthly cost of this lead source recurring expense. The value should be in the smallest unit of currency for your currency locale. For example, if your currency locale is USD, then the smallest unit of currency is in cents, $225.50 would be provided in the request as 22550
   * @return amount
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The monthly cost of this lead source recurring expense. The value should be in the smallest unit of currency for your currency locale. For example, if your currency locale is USD, then the smallest unit of currency is in cents, $225.50 would be provided in the request as 22550")
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@jakarta.annotation.Nullable Long amount) {
    this.amount = amount;
  }


  public CreateLeadSourceRecurringExpenseRequest endTime(@jakarta.annotation.Nullable String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * The time this lead source recurring expense ends
   * @return endTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The time this lead source recurring expense ends")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(@jakarta.annotation.Nullable String endTime) {
    this.endTime = endTime;
  }


  public CreateLeadSourceRecurringExpenseRequest notes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * The notes for the lead source recurring expense
   * @return notes
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The notes for the lead source recurring expense")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
  }


  public CreateLeadSourceRecurringExpenseRequest startTime(@jakarta.annotation.Nullable String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The time this lead source recurring expense starts
   * @return startTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The time this lead source recurring expense starts")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(@jakarta.annotation.Nullable String startTime) {
    this.startTime = startTime;
  }


  public CreateLeadSourceRecurringExpenseRequest title(@jakarta.annotation.Nullable String title) {
    this.title = title;
    return this;
  }

  /**
   * The title of the lead source recurring expense
   * @return title
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The title of the lead source recurring expense")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(@jakarta.annotation.Nullable String title) {
    this.title = title;
  }

  /**
   * Return true if this CreateLeadSourceRecurringExpenseRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateLeadSourceRecurringExpenseRequest createLeadSourceRecurringExpenseRequest = (CreateLeadSourceRecurringExpenseRequest) o;
    return Objects.equals(this.amount, createLeadSourceRecurringExpenseRequest.amount) &&
        Objects.equals(this.endTime, createLeadSourceRecurringExpenseRequest.endTime) &&
        Objects.equals(this.notes, createLeadSourceRecurringExpenseRequest.notes) &&
        Objects.equals(this.startTime, createLeadSourceRecurringExpenseRequest.startTime) &&
        Objects.equals(this.title, createLeadSourceRecurringExpenseRequest.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, endTime, notes, startTime, title);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateLeadSourceRecurringExpenseRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private CreateLeadSourceRecurringExpenseRequest instance;
    
        public Builder() {
          this(new CreateLeadSourceRecurringExpenseRequest());
        }
    
        protected Builder(CreateLeadSourceRecurringExpenseRequest instance) {
          this.instance = instance;
        }
    
        public CreateLeadSourceRecurringExpenseRequest.Builder amount(Long amount) {
              this.instance.amount = amount;
          return this;
        }
            public CreateLeadSourceRecurringExpenseRequest.Builder endTime(String endTime) {
              this.instance.endTime = endTime;
          return this;
        }
            public CreateLeadSourceRecurringExpenseRequest.Builder notes(String notes) {
              this.instance.notes = notes;
          return this;
        }
            public CreateLeadSourceRecurringExpenseRequest.Builder startTime(String startTime) {
              this.instance.startTime = startTime;
          return this;
        }
            public CreateLeadSourceRecurringExpenseRequest.Builder title(String title) {
              this.instance.title = title;
          return this;
        }
        
    
        /**
        * returns a built CreateLeadSourceRecurringExpenseRequest instance.
        *
        * The builder is not reusable.
        */
        public CreateLeadSourceRecurringExpenseRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static CreateLeadSourceRecurringExpenseRequest.Builder builder() {
        return new CreateLeadSourceRecurringExpenseRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public CreateLeadSourceRecurringExpenseRequest.Builder toBuilder() {
        return new CreateLeadSourceRecurringExpenseRequest.Builder()
          .amount(getAmount())
          .endTime(getEndTime())
          .notes(getNotes())
          .startTime(getStartTime())
          .title(getTitle());
      }
}

