/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.775756
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.ModelFile;
import com.keap.core.sdk.model.URL;
import io.swagger.v3.oas.annotations.media.Schema;
import java.net.URI;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Resource
 */
@JsonPropertyOrder({
  Resource.JSON_PROPERTY_DESCRIPTION,
  Resource.JSON_PROPERTY_FILE,
  Resource.JSON_PROPERTY_FILENAME,
  Resource.JSON_PROPERTY_INPUT_STREAM,
  Resource.JSON_PROPERTY_OPEN,
  Resource.JSON_PROPERTY_READABLE,
  Resource.JSON_PROPERTY_URI,
  Resource.JSON_PROPERTY_URL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class Resource implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable  private String description;

  public static final String JSON_PROPERTY_FILE = "file";
  @jakarta.annotation.Nullable  private ModelFile _file;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  @jakarta.annotation.Nullable  private String filename;

  public static final String JSON_PROPERTY_INPUT_STREAM = "inputStream";
  @jakarta.annotation.Nullable  private Object inputStream;

  public static final String JSON_PROPERTY_OPEN = "open";
  @jakarta.annotation.Nullable  private Boolean open;

  public static final String JSON_PROPERTY_READABLE = "readable";
  @jakarta.annotation.Nullable  private Boolean readable;

  public static final String JSON_PROPERTY_URI = "uri";
  @jakarta.annotation.Nullable  private URI uri;

  public static final String JSON_PROPERTY_URL = "url";
  @jakarta.annotation.Nullable  private URL url;

  public Resource() { 
  }

  public Resource description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public Resource _file(@jakarta.annotation.Nullable ModelFile _file) {
    this._file = _file;
    return this;
  }

  /**
   * Get _file
   * @return _file
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ModelFile getFile() {
    return _file;
  }


  @JsonProperty(JSON_PROPERTY_FILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFile(@jakarta.annotation.Nullable ModelFile _file) {
    this._file = _file;
  }


  public Resource filename(@jakarta.annotation.Nullable String filename) {
    this.filename = filename;
    return this;
  }

  /**
   * Get filename
   * @return filename
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFilename() {
    return filename;
  }


  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilename(@jakarta.annotation.Nullable String filename) {
    this.filename = filename;
  }


  public Resource inputStream(@jakarta.annotation.Nullable Object inputStream) {
    this.inputStream = inputStream;
    return this;
  }

  /**
   * Get inputStream
   * @return inputStream
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_INPUT_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getInputStream() {
    return inputStream;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputStream(@jakarta.annotation.Nullable Object inputStream) {
    this.inputStream = inputStream;
  }


  public Resource open(@jakarta.annotation.Nullable Boolean open) {
    this.open = open;
    return this;
  }

  /**
   * Get open
   * @return open
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getOpen() {
    return open;
  }


  @JsonProperty(JSON_PROPERTY_OPEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpen(@jakarta.annotation.Nullable Boolean open) {
    this.open = open;
  }


  public Resource readable(@jakarta.annotation.Nullable Boolean readable) {
    this.readable = readable;
    return this;
  }

  /**
   * Get readable
   * @return readable
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_READABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getReadable() {
    return readable;
  }


  @JsonProperty(JSON_PROPERTY_READABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReadable(@jakarta.annotation.Nullable Boolean readable) {
    this.readable = readable;
  }


  public Resource uri(@jakarta.annotation.Nullable URI uri) {
    this.uri = uri;
    return this;
  }

  /**
   * Get uri
   * @return uri
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public URI getUri() {
    return uri;
  }


  @JsonProperty(JSON_PROPERTY_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUri(@jakarta.annotation.Nullable URI uri) {
    this.uri = uri;
  }


  public Resource url(@jakarta.annotation.Nullable URL url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public URL getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(@jakarta.annotation.Nullable URL url) {
    this.url = url;
  }

  /**
   * Return true if this Resource object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Resource resource = (Resource) o;
    return Objects.equals(this.description, resource.description) &&
        Objects.equals(this._file, resource._file) &&
        Objects.equals(this.filename, resource.filename) &&
        Objects.equals(this.inputStream, resource.inputStream) &&
        Objects.equals(this.open, resource.open) &&
        Objects.equals(this.readable, resource.readable) &&
        Objects.equals(this.uri, resource.uri) &&
        Objects.equals(this.url, resource.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, _file, filename, inputStream, open, readable, uri, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Resource {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    _file: ").append(toIndentedString(_file)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    inputStream: ").append(toIndentedString(inputStream)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    readable: ").append(toIndentedString(readable)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private Resource instance;
    
        public Builder() {
          this(new Resource());
        }
    
        protected Builder(Resource instance) {
          this.instance = instance;
        }
    
        public Resource.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public Resource.Builder _file(ModelFile _file) {
              this.instance._file = _file;
          return this;
        }
            public Resource.Builder filename(String filename) {
              this.instance.filename = filename;
          return this;
        }
            public Resource.Builder inputStream(Object inputStream) {
              this.instance.inputStream = inputStream;
          return this;
        }
            public Resource.Builder open(Boolean open) {
              this.instance.open = open;
          return this;
        }
            public Resource.Builder readable(Boolean readable) {
              this.instance.readable = readable;
          return this;
        }
            public Resource.Builder uri(URI uri) {
              this.instance.uri = uri;
          return this;
        }
            public Resource.Builder url(URL url) {
              this.instance.url = url;
          return this;
        }
        
    
        /**
        * returns a built Resource instance.
        *
        * The builder is not reusable.
        */
        public Resource build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static Resource.Builder builder() {
        return new Resource.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public Resource.Builder toBuilder() {
        return new Resource.Builder()
          .description(getDescription())
          ._file(getFile())
          .filename(getFilename())
          .inputStream(getInputStream())
          .open(getOpen())
          .readable(getReadable())
          .uri(getUri())
          .url(getUrl());
      }
}

