/**
 * Keap REST API
 * Keap REST Core Service
 *
 * OpenAPI spec version: 2.70.0.778988
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class EmailTemplate {
    /**
    * The bcc address of the email
    */
    'bccAddress'?: string;
    /**
    * The categories associated with the email
    */
    'categories'?: Array<string>;
    /**
    * The cc address of the email
    */
    'ccAddress'?: string;
    /**
    * The content type of the email
    */
    'contentType'?: EmailTemplateContentTypeEnum;
    /**
    * The from address of the email
    */
    'fromAddress'?: string;
    /**
    * The HTML body of the email
    */
    'htmlBody'?: string;
    /**
    * The merge context of the email
    */
    'mergeContext'?: string;
    /**
    * The title of the piece
    */
    'pieceTitle'?: string;
    /**
    * The subject of the email
    */
    'subject'?: string;
    /**
    * The text body of the email
    */
    'textBody'?: string;
    /**
    * The to address of the email
    */
    'toAddress'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "bccAddress",
            "baseName": "bcc_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "ccAddress",
            "baseName": "cc_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "contentType",
            "baseName": "content_type",
            "type": "EmailTemplateContentTypeEnum",
            "format": ""
        },
        {
            "name": "fromAddress",
            "baseName": "from_address",
            "type": "string",
            "format": ""
        },
        {
            "name": "htmlBody",
            "baseName": "html_body",
            "type": "string",
            "format": ""
        },
        {
            "name": "mergeContext",
            "baseName": "merge_context",
            "type": "string",
            "format": ""
        },
        {
            "name": "pieceTitle",
            "baseName": "piece_title",
            "type": "string",
            "format": ""
        },
        {
            "name": "subject",
            "baseName": "subject",
            "type": "string",
            "format": ""
        },
        {
            "name": "textBody",
            "baseName": "text_body",
            "type": "string",
            "format": ""
        },
        {
            "name": "toAddress",
            "baseName": "to_address",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EmailTemplate.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum EmailTemplateContentTypeEnum {
    Text = 'TEXT',
    Html = 'HTML',
    Multipart = 'MULTIPART'
}

