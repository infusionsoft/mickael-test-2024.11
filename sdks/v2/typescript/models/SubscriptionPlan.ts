/**
 * Keap REST API
 * Keap REST Core Service
 *
 * OpenAPI spec version: 2.70.0.778988
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CurrencyValue } from '../models/CurrencyValue';
import { HttpFile } from '../http/http';

export class SubscriptionPlan {
    /**
    * If the subscription plan is active or not.
    */
    'active'?: boolean;
    /**
    * Whether or not the plan will allow prorating.
    */
    'allowProrating'?: boolean;
    /**
    * The cycle type of the subscription plan. Possible values: YEAR, MONTH, WEEK, DAY
    */
    'cycleType'?: SubscriptionPlanCycleTypeEnum;
    /**
    * The order index where this plan will be displayed on a page against other plans. Smaller number indicates plan will be displayed higher in the list.
    */
    'displayOrderIndex'?: number;
    /**
    * Total number of times of a cycle type which constitutes a plan cycle. Minimum value is 1.
    */
    'frequency'?: number;
    /**
    * Id of the subscription plan.
    */
    'id'?: string;
    'planPrice'?: CurrencyValue;
    'productId'?: string;
    /**
    * Total number of cycles the plan will run before ending. Value of 0 indicates plan will never end.
    */
    'totalCycles'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "allowProrating",
            "baseName": "allow_prorating",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "cycleType",
            "baseName": "cycle_type",
            "type": "SubscriptionPlanCycleTypeEnum",
            "format": ""
        },
        {
            "name": "displayOrderIndex",
            "baseName": "display_order_index",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "frequency",
            "baseName": "frequency",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "planPrice",
            "baseName": "plan_price",
            "type": "CurrencyValue",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "totalCycles",
            "baseName": "total_cycles",
            "type": "number",
            "format": "int32"
        }    ];

    static getAttributeTypeMap() {
        return SubscriptionPlan.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum SubscriptionPlanCycleTypeEnum {
    Daily = 'DAILY',
    Weekly = 'WEEKLY',
    Monthly = 'MONTHLY',
    Yearly = 'YEARLY'
}

